<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.Storage.Files.Shares</name>
    </assembly>
    <members>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the directory or its properties updates the last modified time. Operations on files do not affect the last modified time of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.FilePermissionKey">
            <summary> Key of the permission set for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.FileAttributes">
            <summary> Attributes set for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.FileCreationTime">
            <summary> Creation time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.FileLastWriteTime">
            <summary> Last write time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.FileChangeTime">
            <summary> Change time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.FileId">
            <summary> The fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryCreateHeaders.FileParentId">
            <summary> The parent fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryDeleteHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryForceCloseHandlesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryForceCloseHandlesHeaders.Marker">
            <summary> A string describing next handle to be closed. It is returned when more handles need to be closed to complete the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryForceCloseHandlesHeaders.NumberOfHandlesClosed">
            <summary> Contains count of number of handles closed. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryForceCloseHandlesHeaders.NumberOfHandlesFailedToClose">
            <summary> Contains count of number of handles that failed to close. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.Metadata">
            <summary> A set of name-value pairs that contain metadata for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.LastModified">
            <summary> Returns the date and time the Directory was last modified. Operations on files within the directory do not affect the last modified time of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the directory metadata is completely encrypted using the specified algorithm. Otherwise, the value is set to false. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.FileAttributes">
            <summary> Attributes set for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.FileCreationTime">
            <summary> Creation time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.FileLastWriteTime">
            <summary> Last write time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.FileChangeTime">
            <summary> Change time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.FilePermissionKey">
            <summary> Key of the permission set for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.FileId">
            <summary> The fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryGetPropertiesHeaders.FileParentId">
            <summary> The parent fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryListFilesAndDirectoriesSegmentHeaders.ContentType">
            <summary> Specifies the format in which the results are returned. Currently this value is 'application/xml'. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryListFilesAndDirectoriesSegmentHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryListHandlesHeaders.ContentType">
            <summary> Specifies the format in which the results are returned. Currently this value is 'application/xml'. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryListHandlesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the directory or its properties updates the last modified time. Operations on files do not affect the last modified time of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.FilePermissionKey">
            <summary> Key of the permission set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.FileAttributes">
            <summary> Attributes set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.FileCreationTime">
            <summary> Creation time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.FileLastWriteTime">
            <summary> Last write time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.FileChangeTime">
            <summary> Change time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.FileId">
            <summary> The fileId of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRenameHeaders.FileParentId">
            <summary> The parent fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectoryRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.String)">
            <summary> Initializes a new instance of DirectoryRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="url"> The URL of the service account, share, directory or file that is the target of the desired operation. </param>
            <param name="version"> Specifies the version of the operation to use for this request. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="url" /> or <paramref name="version" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.CreateAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new directory under the specified share or parent directory. </summary>
            <param name="fileAttributes"> If specified, the provided file attributes shall be set. Default value: ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="fileCreationTime"> Creation time for the file/directory. Default value: Now. </param>
            <param name="fileLastWriteTime"> Last write time for the file/directory. Default value: Now. </param>
            <param name="fileChangeTime"> Change time for the file/directory. Default value: Now. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileAttributes" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.Create(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Creates a new directory under the specified share or parent directory. </summary>
            <param name="fileAttributes"> If specified, the provided file attributes shall be set. Default value: ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="fileCreationTime"> Creation time for the file/directory. Default value: Now. </param>
            <param name="fileLastWriteTime"> Last write time for the file/directory. Default value: Now. </param>
            <param name="fileChangeTime"> Change time for the file/directory. Default value: Now. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileAttributes" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.GetPropertiesAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Returns all system properties for the specified directory, and can also be used to check the existence of a directory. The data returned does not include the files in the directory or any subdirectories. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.GetProperties(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Returns all system properties for the specified directory, and can also be used to check the existence of a directory. The data returned does not include the files in the directory or any subdirectories. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.DeleteAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Removes the specified empty directory. Note that the directory must be empty before it can be deleted. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.Delete(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Removes the specified empty directory. Note that the directory must be empty before it can be deleted. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.SetPropertiesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Sets properties on the directory. </summary>
            <param name="fileAttributes"> If specified, the provided file attributes shall be set. Default value: ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="fileCreationTime"> Creation time for the file/directory. Default value: Now. </param>
            <param name="fileLastWriteTime"> Last write time for the file/directory. Default value: Now. </param>
            <param name="fileChangeTime"> Change time for the file/directory. Default value: Now. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileAttributes" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.SetProperties(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Sets properties on the directory. </summary>
            <param name="fileAttributes"> If specified, the provided file attributes shall be set. Default value: ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="fileCreationTime"> Creation time for the file/directory. Default value: Now. </param>
            <param name="fileLastWriteTime"> Last write time for the file/directory. Default value: Now. </param>
            <param name="fileChangeTime"> Change time for the file/directory. Default value: Now. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileAttributes" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.SetMetadataAsync(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary> Updates user defined metadata for the specified directory. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.SetMetadata(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary> Updates user defined metadata for the specified directory. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.ListFilesAndDirectoriesSegmentAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ListFilesIncludeType},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Returns a list of files or directories under the specified share or directory. It lists the contents only for a single level of the directory hierarchy. </summary>
            <param name="prefix"> Filters the results to return only entries whose name begins with the specified prefix. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="include"> Include this parameter to specify one or more datasets to include in the response. </param>
            <param name="includeExtendedInfo"> Include extended information. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.ListFilesAndDirectoriesSegment(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ListFilesIncludeType},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Returns a list of files or directories under the specified share or directory. It lists the contents only for a single level of the directory hierarchy. </summary>
            <param name="prefix"> Filters the results to return only entries whose name begins with the specified prefix. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="include"> Include this parameter to specify one or more datasets to include in the response. </param>
            <param name="includeExtendedInfo"> Include extended information. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.ListHandlesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Lists handles for directory. </summary>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="recursive"> Specifies operation should apply to the directory specified in the URI, its files, its subdirectories and their files. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.ListHandles(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Lists handles for directory. </summary>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="recursive"> Specifies operation should apply to the directory specified in the URI, its files, its subdirectories and their files. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.ForceCloseHandlesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Closes all handles open for given directory. </summary>
            <param name="handleId"> Specifies handle ID opened on the file or directory to be closed. Asterisk (‘*’) is a wildcard that specifies all handles. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="recursive"> Specifies operation should apply to the directory specified in the URI, its files, its subdirectories and their files. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="handleId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.ForceCloseHandles(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Closes all handles open for given directory. </summary>
            <param name="handleId"> Specifies handle ID opened on the file or directory to be closed. Asterisk (‘*’) is a wildcard that specifies all handles. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="recursive"> Specifies operation should apply to the directory specified in the URI, its files, its subdirectories and their files. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="handleId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.RenameAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.CopyFileSmbInfo,System.Threading.CancellationToken)">
            <summary> Renames a directory. </summary>
            <param name="renameSource"> Required. Specifies the URI-style path of the source file, up to 2 KB in length. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="replaceIfExists"> Optional. A boolean value for if the destination file already exists, whether this request will overwrite the file or not. If true, the rename will succeed and will overwrite the destination file. If not provided or if false and the destination file does exist, the request will not overwrite the destination file. If provided and the destination file doesn’t exist, the rename will succeed. Note: This value does not override the x-ms-file-copy-ignore-read-only header value. </param>
            <param name="ignoreReadOnly"> Optional. A boolean value that specifies whether the ReadOnly attribute on a preexisting destination file should be respected. If true, the rename will succeed, otherwise, a previous file at the destination with the ReadOnly attribute set will cause the rename to fail. </param>
            <param name="sourceLeaseId"> Required if the source file has an active infinite lease. </param>
            <param name="destinationLeaseId"> Required if the destination file has an active infinite lease. The lease ID specified for this header must match the lease ID of the destination file. If the request does not include the lease ID or it is not valid, the operation fails with status code 412 (Precondition Failed). If this header is specified and the destination file does not currently have an active lease, the operation will also fail with status code 412 (Precondition Failed). </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="copyFileSmbInfo"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="renameSource" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.Rename(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.CopyFileSmbInfo,System.Threading.CancellationToken)">
            <summary> Renames a directory. </summary>
            <param name="renameSource"> Required. Specifies the URI-style path of the source file, up to 2 KB in length. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="replaceIfExists"> Optional. A boolean value for if the destination file already exists, whether this request will overwrite the file or not. If true, the rename will succeed and will overwrite the destination file. If not provided or if false and the destination file does exist, the request will not overwrite the destination file. If provided and the destination file doesn’t exist, the rename will succeed. Note: This value does not override the x-ms-file-copy-ignore-read-only header value. </param>
            <param name="ignoreReadOnly"> Optional. A boolean value that specifies whether the ReadOnly attribute on a preexisting destination file should be respected. If true, the rename will succeed, otherwise, a previous file at the destination with the ReadOnly attribute set will cause the rename to fail. </param>
            <param name="sourceLeaseId"> Required if the source file has an active infinite lease. </param>
            <param name="destinationLeaseId"> Required if the destination file has an active infinite lease. The lease ID specified for this header must match the lease ID of the destination file. If the request does not include the lease ID or it is not valid, the operation fails with status code 412 (Precondition Failed). If this header is specified and the destination file does not currently have an active lease, the operation will also fail with status code 412 (Precondition Failed). </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="copyFileSmbInfo"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="renameSource" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.ListFilesAndDirectoriesSegmentNextPageAsync(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ListFilesIncludeType},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Returns a list of files or directories under the specified share or directory. It lists the contents only for a single level of the directory hierarchy. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="prefix"> Filters the results to return only entries whose name begins with the specified prefix. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="include"> Include this parameter to specify one or more datasets to include in the response. </param>
            <param name="includeExtendedInfo"> Include extended information. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.DirectoryRestClient.ListFilesAndDirectoriesSegmentNextPage(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ListFilesIncludeType},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary> Returns a list of files or directories under the specified share or directory. It lists the contents only for a single level of the directory hierarchy. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="prefix"> Filters the results to return only entries whose name begins with the specified prefix. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="include"> Include this parameter to specify one or more datasets to include in the response. </param>
            <param name="includeExtendedInfo"> Include extended information. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> is null. </exception>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetMetadataHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetMetadataHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.LastModified">
            <summary> Returns the date and time the directory was last modified. Any operation that modifies the directory or its properties updates the last modified time. Operations on files do not affect the last modified time of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.FilePermissionKey">
            <summary> Key of the permission set for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.FileAttributes">
            <summary> Attributes set for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.FileCreationTime">
            <summary> Creation time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.FileLastWriteTime">
            <summary> Last write time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.FileChangeTime">
            <summary> Change time for the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.FileId">
            <summary> The fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.DirectorySetPropertiesHeaders.FileParentId">
            <summary> The parent fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileAbortCopyHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileAcquireLeaseHeaders.LastModified">
            <summary> Returns the date and time the file was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the last-modified time of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileAcquireLeaseHeaders.LeaseId">
            <summary> Uniquely identifies a file's lease. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileAcquireLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileBreakLeaseHeaders.LastModified">
            <summary> Returns the date and time the file was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the last-modified time of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileBreakLeaseHeaders.LeaseId">
            <summary> Uniquely identifies a file's lease. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileBreakLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileChangeLeaseHeaders.LastModified">
            <summary> Returns the date and time the file was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the last-modified time of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileChangeLeaseHeaders.LeaseId">
            <summary> Uniquely identifies a file's lease. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileChangeLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the directory or its properties updates the last modified time. Operations on files do not affect the last modified time of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.FilePermissionKey">
            <summary> Key of the permission set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.FileAttributes">
            <summary> Attributes set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.FileCreationTime">
            <summary> Creation time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.FileLastWriteTime">
            <summary> Last write time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.FileChangeTime">
            <summary> Change time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.FileId">
            <summary> The fileId of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileCreateHeaders.FileParentId">
            <summary> The parent fileId of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDeleteHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.LastModified">
            <summary> Returns the date and time the file was last modified. Any operation that modifies the file or its properties updates the last modified time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.Metadata">
            <summary> A set of name-value pairs associated with this file as user-defined metadata. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.ContentLength">
            <summary> The number of bytes present in the response body. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.ContentType">
            <summary> The content type specified for the file. The default content type is 'application/octet-stream'. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.ContentRange">
            <summary> Indicates the range of bytes returned if the client requested a subset of the file by setting the Range request header. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.ContentMD5">
            <summary> If the file has an MD5 hash and the request is to read the full file, this response header is returned so that the client can check for message content integrity. If the request is to read a specified range and the 'x-ms-range-get-content-md5' is set to true, then the request returns an MD5 hash for the range, as long as the range size is less than or equal to 4 MB. If neither of these sets of conditions is true, then no value is returned for the 'Content-MD5' header. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.ContentEncoding">
            <summary> Returns the value that was specified for the Content-Encoding request header. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.CacheControl">
            <summary> Returned if it was previously specified for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.ContentDisposition">
            <summary> Returns the value that was specified for the 'x-ms-content-disposition' header and specifies how to process the response. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.ContentLanguage">
            <summary> Returns the value that was specified for the Content-Language request header. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.AcceptRanges">
            <summary> Indicates that the service supports requests for partial file content. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.CopyCompletionTime">
            <summary> Conclusion time of the last attempted Copy File operation where this file was the destination file. This value can specify the time of a completed, aborted, or failed copy attempt. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.CopyStatusDescription">
            <summary> Only appears when x-ms-copy-status is failed or pending. Describes cause of fatal or non-fatal copy operation failure. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.CopyId">
            <summary> String identifier for the last attempted Copy File operation where this file was the destination file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.CopyProgress">
            <summary> Contains the number of bytes copied and the total bytes in the source in the last attempted Copy File operation where this file was the destination file. Can show between 0 and Content-Length bytes copied. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.CopySource">
            <summary> URL up to 2KB in length that specifies the source file used in the last attempted Copy File operation where this file was the destination file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.CopyStatus">
            <summary> State of the copy operation identified by 'x-ms-copy-id'. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.FileContentMD5">
            <summary> If the file has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole file's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the file data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the file is unencrypted, or if only parts of the file/application metadata are encrypted). </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.FileAttributes">
            <summary> Attributes set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.FileCreationTime">
            <summary> Creation time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.FileLastWriteTime">
            <summary> Last write time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.FileChangeTime">
            <summary> Change time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.FilePermissionKey">
            <summary> Key of the permission set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.FileId">
            <summary> The fileId of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.FileParentId">
            <summary> The parent fileId of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.LeaseDuration">
            <summary> When a file is leased, specifies whether the lease is of infinite or fixed duration. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.LeaseState">
            <summary> Lease state of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileDownloadHeaders.LeaseStatus">
            <summary> The current lease status of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileForceCloseHandlesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileForceCloseHandlesHeaders.Marker">
            <summary> A string describing next handle to be closed. It is returned when more handles need to be closed to complete the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileForceCloseHandlesHeaders.NumberOfHandlesClosed">
            <summary> Contains count of number of handles closed. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileForceCloseHandlesHeaders.NumberOfHandlesFailedToClose">
            <summary> Contains count of number of handles that failed to close. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.LastModified">
            <summary> Returns the date and time the file was last modified. The date format follows RFC 1123. Any operation that modifies the file or its properties updates the last modified time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.Metadata">
            <summary> A set of name-value pairs associated with this file as user-defined metadata. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.FileType">
            <summary> Returns the type File. Reserved for future use. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.ContentLength">
            <summary> The size of the file in bytes. This header returns the value of the 'x-ms-content-length' header that is stored with the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.ContentType">
            <summary> The content type specified for the file. The default content type is 'application/octet-stream'. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.ContentMD5">
            <summary> If the Content-MD5 header has been set for the file, the Content-MD5 response header is returned so that the client can check for message content integrity. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.ContentEncoding">
            <summary> If the Content-Encoding request header has previously been set for the file, the Content-Encoding value is returned in this header. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.CacheControl">
            <summary> If the Cache-Control request header has previously been set for the file, the Cache-Control value is returned in this header. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.ContentDisposition">
            <summary> Returns the value that was specified for the 'x-ms-content-disposition' header and specifies how to process the response. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.ContentLanguage">
            <summary> Returns the value that was specified for the Content-Language request header. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.CopyCompletionTime">
            <summary> Conclusion time of the last attempted Copy File operation where this file was the destination file. This value can specify the time of a completed, aborted, or failed copy attempt. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.CopyStatusDescription">
            <summary> Only appears when x-ms-copy-status is failed or pending. Describes cause of fatal or non-fatal copy operation failure. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.CopyId">
            <summary> String identifier for the last attempted Copy File operation where this file was the destination file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.CopyProgress">
            <summary> Contains the number of bytes copied and the total bytes in the source in the last attempted Copy File operation where this file was the destination file. Can show between 0 and Content-Length bytes copied. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.CopySource">
            <summary> URL up to 2KB in length that specifies the source file used in the last attempted Copy File operation where this file was the destination file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.CopyStatus">
            <summary> State of the copy operation identified by 'x-ms-copy-id'. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the file data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the file is unencrypted, or if only parts of the file/application metadata are encrypted). </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.FileAttributes">
            <summary> Attributes set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.FileCreationTime">
            <summary> Creation time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.FileLastWriteTime">
            <summary> Last write time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.FileChangeTime">
            <summary> Change time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.FilePermissionKey">
            <summary> Key of the permission set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.FileId">
            <summary> The fileId of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.FileParentId">
            <summary> The parent fileId of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.LeaseDuration">
            <summary> When a file is leased, specifies whether the lease is of infinite or fixed duration. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.LeaseState">
            <summary> Lease state of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetPropertiesHeaders.LeaseStatus">
            <summary> The current lease status of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetRangeListHeaders.LastModified">
            <summary> The date/time that the file was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the file's last modified time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetRangeListHeaders.FileContentLength">
            <summary> The size of the file in bytes. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileGetRangeListHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileListHandlesHeaders.ContentType">
            <summary> Specifies the format in which the results are returned. Currently this value is 'application/xml'. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileListHandlesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileReleaseLeaseHeaders.LastModified">
            <summary> Returns the date and time the file was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the last-modified time of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileReleaseLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the directory or its properties updates the last modified time. Operations on files do not affect the last modified time of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.FilePermissionKey">
            <summary> Key of the permission set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.FileAttributes">
            <summary> Attributes set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.FileCreationTime">
            <summary> Creation time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.FileLastWriteTime">
            <summary> Last write time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.FileChangeTime">
            <summary> Change time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.FileId">
            <summary> The fileId of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRenameHeaders.FileParentId">
            <summary> The parent fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.String,System.String)">
            <summary> Initializes a new instance of FileRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="url"> The URL of the service account, share, directory or file that is the target of the desired operation. </param>
            <param name="version"> Specifies the version of the operation to use for this request. </param>
            <param name="fileRangeWriteFromUrl"> Only update is supported: - Update: Writes the bytes downloaded from the source url into the specified range. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="url" />, <paramref name="version" /> or <paramref name="fileRangeWriteFromUrl" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.CreateAsync(System.Int64,System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,Azure.Storage.Files.Shares.Models.FileHttpHeaders,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Creates a new file or replaces a file. Note it only initializes the file with no content. </summary>
            <param name="fileContentLength"> Specifies the maximum size for the file, up to 4 TB. </param>
            <param name="fileAttributes"> If specified, the provided file attributes shall be set. Default value: ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="fileCreationTime"> Creation time for the file/directory. Default value: Now. </param>
            <param name="fileLastWriteTime"> Last write time for the file/directory. Default value: Now. </param>
            <param name="fileChangeTime"> Change time for the file/directory. Default value: Now. </param>
            <param name="fileHttpHeaders"> Parameter group. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileAttributes" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.Create(System.Int64,System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,System.String,System.String,System.String,Azure.Storage.Files.Shares.Models.FileHttpHeaders,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Creates a new file or replaces a file. Note it only initializes the file with no content. </summary>
            <param name="fileContentLength"> Specifies the maximum size for the file, up to 4 TB. </param>
            <param name="fileAttributes"> If specified, the provided file attributes shall be set. Default value: ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="fileCreationTime"> Creation time for the file/directory. Default value: Now. </param>
            <param name="fileLastWriteTime"> Last write time for the file/directory. Default value: Now. </param>
            <param name="fileChangeTime"> Change time for the file/directory. Default value: Now. </param>
            <param name="fileHttpHeaders"> Parameter group. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileAttributes" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.DownloadAsync(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Reads or downloads a file from the system, including its metadata and properties. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="range"> Return file data only from the specified byte range. </param>
            <param name="rangeGetContentMD5"> When this header is set to true and specified together with the Range header, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4 MB in size. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.Download(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Reads or downloads a file from the system, including its metadata and properties. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="range"> Return file data only from the specified byte range. </param>
            <param name="rangeGetContentMD5"> When this header is set to true and specified together with the Range header, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4 MB in size. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.GetPropertiesAsync(System.String,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Returns all user-defined metadata, standard HTTP properties, and system properties for the file. It does not return the content of the file. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.GetProperties(System.String,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Returns all user-defined metadata, standard HTTP properties, and system properties for the file. It does not return the content of the file. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.DeleteAsync(System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> removes the file from the storage account. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.Delete(System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> removes the file from the storage account. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.SetHttpHeadersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.String,System.String,System.String,System.String,Azure.Storage.Files.Shares.Models.FileHttpHeaders,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Sets HTTP headers on the file. </summary>
            <param name="fileAttributes"> If specified, the provided file attributes shall be set. Default value: ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="fileContentLength"> Resizes a file to the specified size. If the specified byte value is less than the current size of the file, then all ranges above the specified byte value are cleared. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="fileCreationTime"> Creation time for the file/directory. Default value: Now. </param>
            <param name="fileLastWriteTime"> Last write time for the file/directory. Default value: Now. </param>
            <param name="fileChangeTime"> Change time for the file/directory. Default value: Now. </param>
            <param name="fileHttpHeaders"> Parameter group. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileAttributes" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.SetHttpHeaders(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.String,System.String,System.String,System.String,System.String,Azure.Storage.Files.Shares.Models.FileHttpHeaders,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Sets HTTP headers on the file. </summary>
            <param name="fileAttributes"> If specified, the provided file attributes shall be set. Default value: ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="fileContentLength"> Resizes a file to the specified size. If the specified byte value is less than the current size of the file, then all ranges above the specified byte value are cleared. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="fileCreationTime"> Creation time for the file/directory. Default value: Now. </param>
            <param name="fileLastWriteTime"> Last write time for the file/directory. Default value: Now. </param>
            <param name="fileChangeTime"> Change time for the file/directory. Default value: Now. </param>
            <param name="fileHttpHeaders"> Parameter group. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="fileAttributes" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.SetMetadataAsync(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Updates user-defined metadata for the specified file. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.SetMetadata(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Updates user-defined metadata for the specified file. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.AcquireLeaseAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> [Update] The Lease File operation establishes and manages a lock on a file for write and delete operations. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="duration"> Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. </param>
            <param name="proposedLeaseId"> Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.AcquireLease(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> [Update] The Lease File operation establishes and manages a lock on a file for write and delete operations. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="duration"> Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. </param>
            <param name="proposedLeaseId"> Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.ReleaseLeaseAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> [Update] The Lease File operation establishes and manages a lock on a file for write and delete operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.ReleaseLease(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> [Update] The Lease File operation establishes and manages a lock on a file for write and delete operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.ChangeLeaseAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> [Update] The Lease File operation establishes and manages a lock on a file for write and delete operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="proposedLeaseId"> Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.ChangeLease(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> [Update] The Lease File operation establishes and manages a lock on a file for write and delete operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="proposedLeaseId"> Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.BreakLeaseAsync(System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> [Update] The Lease File operation establishes and manages a lock on a file for write and delete operations. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.BreakLease(System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> [Update] The Lease File operation establishes and manages a lock on a file for write and delete operations. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.UploadRangeAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,System.Int64,System.Nullable{System.Int32},System.Byte[],System.Nullable{Azure.Storage.Files.Shares.Models.FileLastWrittenMode},System.IO.Stream,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Upload a range of bytes to a file. </summary>
            <param name="range"> Specifies the range of bytes to be written. Both the start and end of the range must be specified. For an update operation, the range can be up to 4 MB in size. For a clear operation, the range can be up to the value of the file's full size. The File service accepts only a single byte range for the Range and 'x-ms-range' headers, and the byte range must be specified in the following format: bytes=startByte-endByte. </param>
            <param name="fileRangeWrite"> Specify one of the following options: - Update: Writes the bytes specified by the request body into the specified range. The Range and Content-Length headers must match to perform the update. - Clear: Clears the specified range and releases the space used in storage for that range. To clear a range, set the Content-Length header to zero, and set the Range header to a value that indicates the range to clear, up to maximum file size. </param>
            <param name="contentLength"> Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="contentMD5"> An MD5 hash of the content. This hash is used to verify the integrity of the data during transport. When the Content-MD5 header is specified, the File service compares the hash of the content that has arrived with the header value that was sent. If the two hashes do not match, the operation will fail with error code 400 (Bad Request). </param>
            <param name="fileLastWrittenMode"> If the file last write time should be preserved or overwritten. </param>
            <param name="optionalbody"> Initial data. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="range" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.UploadRange(System.String,Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,System.Int64,System.Nullable{System.Int32},System.Byte[],System.Nullable{Azure.Storage.Files.Shares.Models.FileLastWrittenMode},System.IO.Stream,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Upload a range of bytes to a file. </summary>
            <param name="range"> Specifies the range of bytes to be written. Both the start and end of the range must be specified. For an update operation, the range can be up to 4 MB in size. For a clear operation, the range can be up to the value of the file's full size. The File service accepts only a single byte range for the Range and 'x-ms-range' headers, and the byte range must be specified in the following format: bytes=startByte-endByte. </param>
            <param name="fileRangeWrite"> Specify one of the following options: - Update: Writes the bytes specified by the request body into the specified range. The Range and Content-Length headers must match to perform the update. - Clear: Clears the specified range and releases the space used in storage for that range. To clear a range, set the Content-Length header to zero, and set the Range header to a value that indicates the range to clear, up to maximum file size. </param>
            <param name="contentLength"> Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="contentMD5"> An MD5 hash of the content. This hash is used to verify the integrity of the data during transport. When the Content-MD5 header is specified, the File service compares the hash of the content that has arrived with the header value that was sent. If the two hashes do not match, the operation will fail with error code 400 (Bad Request). </param>
            <param name="fileLastWrittenMode"> If the file last write time should be preserved or overwritten. </param>
            <param name="optionalbody"> Initial data. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="range" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.UploadRangeFromURLAsync(System.String,System.String,System.Int64,System.Nullable{System.Int32},System.String,System.Byte[],System.String,System.Nullable{Azure.Storage.Files.Shares.Models.FileLastWrittenMode},Azure.Storage.Files.Shares.Models.SourceModifiedAccessConditions,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Upload a range of bytes to a file where the contents are read from a URL. </summary>
            <param name="range"> Writes data to the specified byte range in the file. </param>
            <param name="copySource"> Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source. </param>
            <param name="contentLength"> Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sourceRange"> Bytes of source data in the specified range. </param>
            <param name="sourceContentCrc64"> Specify the crc64 calculated for the range of bytes that must be read from the copy source. </param>
            <param name="copySourceAuthorization"> Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source. </param>
            <param name="fileLastWrittenMode"> If the file last write time should be preserved or overwritten. </param>
            <param name="sourceModifiedAccessConditions"> Parameter group. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="range" /> or <paramref name="copySource" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.UploadRangeFromURL(System.String,System.String,System.Int64,System.Nullable{System.Int32},System.String,System.Byte[],System.String,System.Nullable{Azure.Storage.Files.Shares.Models.FileLastWrittenMode},Azure.Storage.Files.Shares.Models.SourceModifiedAccessConditions,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Upload a range of bytes to a file where the contents are read from a URL. </summary>
            <param name="range"> Writes data to the specified byte range in the file. </param>
            <param name="copySource"> Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source. </param>
            <param name="contentLength"> Specifies the number of bytes being transmitted in the request body. When the x-ms-write header is set to clear, the value of this header must be set to zero. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sourceRange"> Bytes of source data in the specified range. </param>
            <param name="sourceContentCrc64"> Specify the crc64 calculated for the range of bytes that must be read from the copy source. </param>
            <param name="copySourceAuthorization"> Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source. </param>
            <param name="fileLastWrittenMode"> If the file last write time should be preserved or overwritten. </param>
            <param name="sourceModifiedAccessConditions"> Parameter group. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="range" /> or <paramref name="copySource" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.GetRangeListAsync(System.String,System.String,System.Nullable{System.Int32},System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Returns the list of valid ranges for a file. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="prevsharesnapshot"> The previous snapshot parameter is an opaque DateTime value that, when present, specifies the previous snapshot. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="range"> Specifies the range of bytes over which to list ranges, inclusively. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.GetRangeList(System.String,System.String,System.Nullable{System.Int32},System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Returns the list of valid ranges for a file. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="prevsharesnapshot"> The previous snapshot parameter is an opaque DateTime value that, when present, specifies the previous snapshot. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="range"> Specifies the range of bytes over which to list ranges, inclusively. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.StartCopyAsync(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.Shares.Models.CopyFileSmbInfo,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Copies a blob or file to a destination file within the storage account. </summary>
            <param name="copySource"> Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="copyFileSmbInfo"> Parameter group. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="copySource" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.StartCopy(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.Storage.Files.Shares.Models.CopyFileSmbInfo,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Copies a blob or file to a destination file within the storage account. </summary>
            <param name="copySource"> Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file to another file within the same storage account, you may use Shared Key to authenticate the source file. If you are copying a file from another storage account, or if you are copying a blob from the same storage account or another storage account, then you must authenticate the source file or blob using a shared access signature. If the source is a public blob, no authentication is required to perform the copy operation. A file in a share snapshot can also be specified as a copy source. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="copyFileSmbInfo"> Parameter group. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="copySource" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.AbortCopyAsync(System.String,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata. </summary>
            <param name="copyId"> The copy identifier provided in the x-ms-copy-id header of the original Copy File operation. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="copyId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.AbortCopy(System.String,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata. </summary>
            <param name="copyId"> The copy identifier provided in the x-ms-copy-id header of the original Copy File operation. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="copyId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.ListHandlesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> Lists handles for file. </summary>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.ListHandles(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> Lists handles for file. </summary>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.ForceCloseHandlesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary> Closes all handles open for given file. </summary>
            <param name="handleId"> Specifies handle ID opened on the file or directory to be closed. Asterisk (‘*’) is a wildcard that specifies all handles. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="handleId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.ForceCloseHandles(System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary> Closes all handles open for given file. </summary>
            <param name="handleId"> Specifies handle ID opened on the file or directory to be closed. Asterisk (‘*’) is a wildcard that specifies all handles. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="handleId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.RenameAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.CopyFileSmbInfo,Azure.Storage.Files.Shares.Models.FileHttpHeaders,System.Threading.CancellationToken)">
            <summary> Renames a file. </summary>
            <param name="renameSource"> Required. Specifies the URI-style path of the source file, up to 2 KB in length. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="replaceIfExists"> Optional. A boolean value for if the destination file already exists, whether this request will overwrite the file or not. If true, the rename will succeed and will overwrite the destination file. If not provided or if false and the destination file does exist, the request will not overwrite the destination file. If provided and the destination file doesn’t exist, the rename will succeed. Note: This value does not override the x-ms-file-copy-ignore-read-only header value. </param>
            <param name="ignoreReadOnly"> Optional. A boolean value that specifies whether the ReadOnly attribute on a preexisting destination file should be respected. If true, the rename will succeed, otherwise, a previous file at the destination with the ReadOnly attribute set will cause the rename to fail. </param>
            <param name="sourceLeaseId"> Required if the source file has an active infinite lease. </param>
            <param name="destinationLeaseId"> Required if the destination file has an active infinite lease. The lease ID specified for this header must match the lease ID of the destination file. If the request does not include the lease ID or it is not valid, the operation fails with status code 412 (Precondition Failed). If this header is specified and the destination file does not currently have an active lease, the operation will also fail with status code 412 (Precondition Failed). </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="copyFileSmbInfo"> Parameter group. </param>
            <param name="fileHttpHeaders"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="renameSource" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.FileRestClient.Rename(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.CopyFileSmbInfo,Azure.Storage.Files.Shares.Models.FileHttpHeaders,System.Threading.CancellationToken)">
            <summary> Renames a file. </summary>
            <param name="renameSource"> Required. Specifies the URI-style path of the source file, up to 2 KB in length. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="replaceIfExists"> Optional. A boolean value for if the destination file already exists, whether this request will overwrite the file or not. If true, the rename will succeed and will overwrite the destination file. If not provided or if false and the destination file does exist, the request will not overwrite the destination file. If provided and the destination file doesn’t exist, the rename will succeed. Note: This value does not override the x-ms-file-copy-ignore-read-only header value. </param>
            <param name="ignoreReadOnly"> Optional. A boolean value that specifies whether the ReadOnly attribute on a preexisting destination file should be respected. If true, the rename will succeed, otherwise, a previous file at the destination with the ReadOnly attribute set will cause the rename to fail. </param>
            <param name="sourceLeaseId"> Required if the source file has an active infinite lease. </param>
            <param name="destinationLeaseId"> Required if the destination file has an active infinite lease. The lease ID specified for this header must match the lease ID of the destination file. If the request does not include the lease ID or it is not valid, the operation fails with status code 412 (Precondition Failed). If this header is specified and the destination file does not currently have an active lease, the operation will also fail with status code 412 (Precondition Failed). </param>
            <param name="filePermission"> If specified the permission (security descriptor) shall be set for the directory/file. This header can be used if Permission size is &lt;= 8KB, else x-ms-file-permission-key header shall be used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be specified. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="copyFileSmbInfo"> Parameter group. </param>
            <param name="fileHttpHeaders"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="renameSource" /> is null. </exception>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.LastModified">
            <summary> Returns the date and time the directory was last modified. Any operation that modifies the directory or its properties updates the last modified time. Operations on files do not affect the last modified time of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.FilePermissionKey">
            <summary> Key of the permission set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.FileAttributes">
            <summary> Attributes set for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.FileCreationTime">
            <summary> Creation time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.FileLastWriteTime">
            <summary> Last write time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.FileChangeTime">
            <summary> Change time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.FileId">
            <summary> The fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetHttpHeadersHeaders.FileParentId">
            <summary> The parent fileId of the directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetMetadataHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetMetadataHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileSetMetadataHeaders.LastModified">
            <summary> Returns the date and time the file was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the last-modified time of the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileStartCopyHeaders.LastModified">
            <summary> Returns the date/time that the copy operation to the destination file completed. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileStartCopyHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileStartCopyHeaders.CopyId">
            <summary> String identifier for this copy operation. Use with Get File or Get File Properties to check the status of this copy operation, or pass to Abort Copy File to abort a pending copy. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileStartCopyHeaders.CopyStatus">
            <summary> State of the copy operation identified by x-ms-copy-id. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeFromURLHeaders.LastModified">
            <summary> Returns the date and time the directory was last modified. Any operation that modifies the share or its properties or metadata updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeFromURLHeaders.XMsContentCrc64">
            <summary> This header is returned so that the client can check for message content integrity. The value of this header is computed by the File service; it is not necessarily the same value as may have been specified in the request headers. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeFromURLHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeFromURLHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeFromURLHeaders.FileLastWriteTime">
            <summary> Last write time for the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeFromURLHeaders.ContentMD5">
            <summary> This header is returned so that the client can check for message content integrity. The value of this header is computed by the File service; it is not necessarily the same value as may have been specified in the request headers. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeHeaders.LastModified">
            <summary> Returns the date and time the directory was last modified. Any operation that modifies the share or its properties or metadata updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeHeaders.ContentMD5">
            <summary> This header is returned so that the client can check for message content integrity. The value of this header is computed by the File service; it is not necessarily the same value as may have been specified in the request headers. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeHeaders.IsServerEncrypted">
            <summary> The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.FileUploadRangeHeaders.FileLastWriteTime">
            <summary> Last write time for the file. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ClearRange">
            <summary> The ClearRange. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ClearRange.#ctor(System.Int64,System.Int64)">
            <summary> Initializes a new instance of ClearRange. </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ClearRange.Start">
            <summary> Gets the start. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ClearRange.End">
            <summary> Gets the end. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo">
            <summary> Parameter group. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo.#ctor">
            <summary> Initializes a new instance of CopyFileSmbInfo. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo.FileAttributes">
            <summary> Specifies either the option to copy file attributes from a source file(source) to a target file or a list of attributes to set on a target file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo.FileCreationTime">
            <summary> Specifies either the option to copy file creation time from a source file(source) to a target file or a time value in ISO 8601 format to set as creation time on a target file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo.FileLastWriteTime">
            <summary> Specifies either the option to copy file last write time from a source file(source) to a target file or a time value in ISO 8601 format to set as last write time on a target file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo.FileChangeTime">
            <summary> Specifies either the option to copy file last write time from a source file(source) to a target file or a time value in ISO 8601 format to set as last write time on a target file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo.FilePermissionCopyMode">
            <summary> Specifies the option to copy file security descriptor from source file or to set it using the value which is defined by the header value of x-ms-file-permission or x-ms-file-permission-key. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo.IgnoreReadOnly">
            <summary> Specifies the option to overwrite the target file if it already exists and has read-only attribute set. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CopyFileSmbInfo.SetArchiveAttribute">
            <summary> Specifies the option to set archive attribute on a target file. True means archive attribute will be set on a target file despite attribute overrides or a source file state. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.DirectoryItem">
            <summary> A listed directory item. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.DirectoryItem.#ctor(System.String)">
            <summary> Initializes a new instance of DirectoryItem. </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.DirectoryItem.#ctor(System.String,System.String,Azure.Storage.Files.Shares.Models.FileProperty,System.String,System.String)">
            <summary> Initializes a new instance of DirectoryItem. </summary>
            <param name="name"></param>
            <param name="fileId"></param>
            <param name="properties"> File properties. </param>
            <param name="attributes"></param>
            <param name="permissionKey"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.DirectoryItem.Name">
            <summary> Gets the name. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.DirectoryItem.FileId">
            <summary> Gets the file id. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.DirectoryItem.Properties">
            <summary> File properties. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.DirectoryItem.Attributes">
            <summary> Gets the attributes. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.DirectoryItem.PermissionKey">
            <summary> Gets the permission key. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FileHttpHeaders">
            <summary> Parameter group. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileHttpHeaders.#ctor">
            <summary> Initializes a new instance of FileHttpHeaders. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileHttpHeaders.FileContentType">
            <summary> Sets the MIME content type of the file. The default type is 'application/octet-stream'. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileHttpHeaders.FileContentEncoding">
            <summary> Specifies which content encodings have been applied to the file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileHttpHeaders.FileContentLanguage">
            <summary> Specifies the natural languages used by this resource. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileHttpHeaders.FileCacheControl">
            <summary> Sets the file's cache control. The File service stores this value but does not use or modify it. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileHttpHeaders.FileContentMD5">
            <summary> Sets the file's MD5 hash. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileHttpHeaders.FileContentDisposition">
            <summary> Sets the file's Content-Disposition header. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FileItem">
            <summary> A listed file item. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileItem.#ctor(System.String,Azure.Storage.Files.Shares.Models.FileProperty)">
            <summary> Initializes a new instance of FileItem. </summary>
            <param name="name"></param>
            <param name="properties"> File properties. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="properties" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileItem.#ctor(System.String,System.String,Azure.Storage.Files.Shares.Models.FileProperty,System.String,System.String)">
            <summary> Initializes a new instance of FileItem. </summary>
            <param name="name"></param>
            <param name="fileId"></param>
            <param name="properties"> File properties. </param>
            <param name="attributes"></param>
            <param name="permissionKey"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileItem.Name">
            <summary> Gets the name. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileItem.FileId">
            <summary> Gets the file id. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileItem.Properties">
            <summary> File properties. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileItem.Attributes">
            <summary> Gets the attributes. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileItem.PermissionKey">
            <summary> Gets the permission key. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FileLastWrittenMode">
            <summary> The FileLastWrittenMode. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.FileLastWrittenMode.Now">
            <summary> Now. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.FileLastWrittenMode.Preserve">
            <summary> Preserve. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FileProperty">
            <summary> File properties. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileProperty.#ctor(System.Int64)">
            <summary> Initializes a new instance of FileProperty. </summary>
            <param name="contentLength"> Content length of the file. This value may not be up-to-date since an SMB client may have modified the file locally. The value of Content-Length may not reflect that fact until the handle is closed or the op-lock is broken. To retrieve current property values, call Get File Properties. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileProperty.#ctor(System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary> Initializes a new instance of FileProperty. </summary>
            <param name="contentLength"> Content length of the file. This value may not be up-to-date since an SMB client may have modified the file locally. The value of Content-Length may not reflect that fact until the handle is closed or the op-lock is broken. To retrieve current property values, call Get File Properties. </param>
            <param name="creationTime"></param>
            <param name="lastAccessTime"></param>
            <param name="lastWriteTime"></param>
            <param name="changeTime"></param>
            <param name="lastModified"></param>
            <param name="etag"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileProperty.ContentLength">
            <summary> Content length of the file. This value may not be up-to-date since an SMB client may have modified the file locally. The value of Content-Length may not reflect that fact until the handle is closed or the op-lock is broken. To retrieve current property values, call Get File Properties. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileProperty.CreationTime">
            <summary> Gets the creation time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileProperty.LastAccessTime">
            <summary> Gets the last access time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileProperty.LastWriteTime">
            <summary> Gets the last write time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileProperty.ChangeTime">
            <summary> Gets the change time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileProperty.LastModified">
            <summary> Gets the last modified. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileProperty.Etag">
            <summary> Gets the etag. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FileRange">
            <summary> An Azure Storage file range. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileRange.#ctor(System.Int64,System.Int64)">
            <summary> Initializes a new instance of FileRange. </summary>
            <param name="start"> Start of the range. </param>
            <param name="end"> End of the range. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileRange.Start">
            <summary> Start of the range. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileRange.End">
            <summary> End of the range. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FilesAndDirectoriesListSegment">
            <summary> Abstract for entries that can be listed from Directory. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesAndDirectoriesListSegment.#ctor(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.DirectoryItem},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.FileItem})">
            <summary> Initializes a new instance of FilesAndDirectoriesListSegment. </summary>
            <param name="directoryItems"></param>
            <param name="fileItems"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="directoryItems" /> or <paramref name="fileItems" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesAndDirectoriesListSegment.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Storage.Files.Shares.Models.DirectoryItem},System.Collections.Generic.IReadOnlyList{Azure.Storage.Files.Shares.Models.FileItem})">
            <summary> Initializes a new instance of FilesAndDirectoriesListSegment. </summary>
            <param name="directoryItems"></param>
            <param name="fileItems"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FilesAndDirectoriesListSegment.DirectoryItems">
            <summary> Gets the directory items. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FilesAndDirectoriesListSegment.FileItems">
            <summary> Gets the file items. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse">
            <summary> An enumeration of directories and files. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.#ctor(System.String,System.String,System.String,System.String,Azure.Storage.Files.Shares.Models.FilesAndDirectoriesListSegment,System.String)">
            <summary> Initializes a new instance of ListFilesAndDirectoriesSegmentResponse. </summary>
            <param name="serviceEndpoint"></param>
            <param name="shareName"></param>
            <param name="directoryPath"></param>
            <param name="prefix"></param>
            <param name="segment"> Abstract for entries that can be listed from Directory. </param>
            <param name="nextMarker"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serviceEndpoint" />, <paramref name="shareName" />, <paramref name="directoryPath" />, <paramref name="prefix" />, <paramref name="segment" /> or <paramref name="nextMarker" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.FilesAndDirectoriesListSegment,System.String,System.String)">
            <summary> Initializes a new instance of ListFilesAndDirectoriesSegmentResponse. </summary>
            <param name="serviceEndpoint"></param>
            <param name="shareName"></param>
            <param name="shareSnapshot"></param>
            <param name="directoryPath"></param>
            <param name="prefix"></param>
            <param name="marker"></param>
            <param name="maxResults"></param>
            <param name="segment"> Abstract for entries that can be listed from Directory. </param>
            <param name="nextMarker"></param>
            <param name="directoryId"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.ServiceEndpoint">
            <summary> Gets the service endpoint. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.ShareName">
            <summary> Gets the share name. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.ShareSnapshot">
            <summary> Gets the share snapshot. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.DirectoryPath">
            <summary> Gets the directory path. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.Prefix">
            <summary> Gets the prefix. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.Marker">
            <summary> Gets the marker. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.MaxResults">
            <summary> Gets the max results. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.Segment">
            <summary> Abstract for entries that can be listed from Directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.NextMarker">
            <summary> Gets the next marker. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.DirectoryId">
            <summary> Gets the directory id. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ListHandlesResponse">
            <summary> An enumeration of handles. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ListHandlesResponse.#ctor(System.String)">
            <summary> Initializes a new instance of ListHandlesResponse. </summary>
            <param name="nextMarker"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextMarker" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ListHandlesResponse.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Storage.Files.Shares.Models.ShareFileHandle},System.String)">
            <summary> Initializes a new instance of ListHandlesResponse. </summary>
            <param name="handleList"></param>
            <param name="nextMarker"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListHandlesResponse.HandleList">
            <summary> Gets the handle list. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListHandlesResponse.NextMarker">
            <summary> Gets the next marker. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ListSharesResponse">
            <summary> An enumeration of shares. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ListSharesResponse.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of ListSharesResponse. </summary>
            <param name="serviceEndpoint"></param>
            <param name="nextMarker"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="serviceEndpoint" /> or <paramref name="nextMarker" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ListSharesResponse.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IReadOnlyList{Azure.Storage.Files.Shares.Models.ShareItemInternal},System.String)">
            <summary> Initializes a new instance of ListSharesResponse. </summary>
            <param name="serviceEndpoint"></param>
            <param name="prefix"></param>
            <param name="marker"></param>
            <param name="maxResults"></param>
            <param name="shareItems"></param>
            <param name="nextMarker"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListSharesResponse.ServiceEndpoint">
            <summary> Gets the service endpoint. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListSharesResponse.Prefix">
            <summary> Gets the prefix. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListSharesResponse.Marker">
            <summary> Gets the marker. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListSharesResponse.MaxResults">
            <summary> Gets the max results. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListSharesResponse.ShareItems">
            <summary> Gets the share items. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ListSharesResponse.NextMarker">
            <summary> Gets the next marker. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareAccessPolicy">
            <summary> An Access policy. </summary>
            <summary>
            Share Access policy.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.#ctor">
            <summary> Initializes a new instance of ShareAccessPolicy. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.#ctor(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.String)">
            <summary> Initializes a new instance of ShareAccessPolicy. </summary>
            <param name="policyStartsOn"> The date-time the policy is active. </param>
            <param name="policyExpiresOn"> The date-time the policy expires. </param>
            <param name="permissions"> The permissions for the ACL policy. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.PolicyStartsOn">
            <summary>
            The date-time the policy is active.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.PolicyExpiresOn">
            <summary>
            The date-time the policy expires.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.Permissions">
            <summary>
            The permissions for the ACL policy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.StartsOn">
            <summary>
            The date-time the policy is active.
            This value is non-nullable, please use <see cref="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.PolicyStartsOn" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.ExpiresOn">
            <summary>
            The date-time the policy expires.
            This value is non-nullable, please use <see cref="P:Azure.Storage.Files.Shares.Models.ShareAccessPolicy.PolicyStartsOn" />.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareAccessTier">
            <summary> The ShareAccessTier. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Storage.Files.Shares.Models.ShareAccessTier" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareAccessTier.TransactionOptimized">
            <summary> TransactionOptimized. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareAccessTier.Hot">
            <summary> Hot. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareAccessTier.Cool">
            <summary> Cool. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.op_Equality(Azure.Storage.Files.Shares.Models.ShareAccessTier,Azure.Storage.Files.Shares.Models.ShareAccessTier)">
            <summary> Determines if two <see cref="T:Azure.Storage.Files.Shares.Models.ShareAccessTier" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.op_Inequality(Azure.Storage.Files.Shares.Models.ShareAccessTier,Azure.Storage.Files.Shares.Models.ShareAccessTier)">
            <summary> Determines if two <see cref="T:Azure.Storage.Files.Shares.Models.ShareAccessTier" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.op_Implicit(System.String)~Azure.Storage.Files.Shares.Models.ShareAccessTier">
            <summary> Converts a string to a <see cref="T:Azure.Storage.Files.Shares.Models.ShareAccessTier" />. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.Equals(Azure.Storage.Files.Shares.Models.ShareAccessTier)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareAccessTier.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareCorsRule">
            <summary> CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain. </summary>
            <summary>
            ShareCorsRule.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedOrigins">
            <summary> The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedMethods">
            <summary> The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated). </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.AllowedHeaders">
            <summary> The request headers that the origin domain may specify on the CORS request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.ExposedHeaders">
            <summary> The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCorsRule.MaxAgeInSeconds">
            <summary> The maximum amount time that a browser should cache the preflight OPTIONS request. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareCorsRule.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareErrorCode">
            <summary> Error codes returned by the service. </summary>
            <summary>
            Error codes returned by the service.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Storage.Files.Shares.Models.ShareErrorCode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountAlreadyExists">
            <summary> AccountAlreadyExists. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountBeingCreated">
            <summary> AccountBeingCreated. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AccountIsDisabled">
            <summary> AccountIsDisabled. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthenticationFailed">
            <summary> AuthenticationFailed. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationFailure">
            <summary> AuthorizationFailure. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ConditionHeadersNotSupported">
            <summary> ConditionHeadersNotSupported. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ConditionNotMet">
            <summary> ConditionNotMet. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.EmptyMetadataKey">
            <summary> EmptyMetadataKey. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InsufficientAccountPermissions">
            <summary> InsufficientAccountPermissions. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InternalError">
            <summary> InternalError. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidAuthenticationInfo">
            <summary> InvalidAuthenticationInfo. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidHeaderValue">
            <summary> InvalidHeaderValue. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidHttpVerb">
            <summary> InvalidHttpVerb. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidInput">
            <summary> InvalidInput. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidMd5">
            <summary> InvalidMd5. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidMetadata">
            <summary> InvalidMetadata. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidQueryParameterValue">
            <summary> InvalidQueryParameterValue. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidRange">
            <summary> InvalidRange. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidResourceName">
            <summary> InvalidResourceName. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidUri">
            <summary> InvalidUri. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidXmlDocument">
            <summary> InvalidXmlDocument. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidXmlNodeValue">
            <summary> InvalidXmlNodeValue. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.Md5Mismatch">
            <summary> Md5Mismatch. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MetadataTooLarge">
            <summary> MetadataTooLarge. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingContentLengthHeader">
            <summary> MissingContentLengthHeader. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredQueryParameter">
            <summary> MissingRequiredQueryParameter. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredHeader">
            <summary> MissingRequiredHeader. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MissingRequiredXmlNode">
            <summary> MissingRequiredXmlNode. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.MultipleConditionHeadersNotSupported">
            <summary> MultipleConditionHeadersNotSupported. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OperationTimedOut">
            <summary> OperationTimedOut. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OutOfRangeInput">
            <summary> OutOfRangeInput. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.OutOfRangeQueryParameterValue">
            <summary> OutOfRangeQueryParameterValue. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.RequestBodyTooLarge">
            <summary> RequestBodyTooLarge. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceTypeMismatch">
            <summary> ResourceTypeMismatch. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.RequestUrlFailedToParse">
            <summary> RequestUrlFailedToParse. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceAlreadyExists">
            <summary> ResourceAlreadyExists. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ResourceNotFound">
            <summary> ResourceNotFound. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ServerBusy">
            <summary> ServerBusy. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedHeader">
            <summary> UnsupportedHeader. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedXmlNode">
            <summary> UnsupportedXmlNode. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedQueryParameter">
            <summary> UnsupportedQueryParameter. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.UnsupportedHttpVerb">
            <summary> UnsupportedHttpVerb. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.CannotDeleteFileOrDirectory">
            <summary> CannotDeleteFileOrDirectory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ClientCacheFlushDelay">
            <summary> ClientCacheFlushDelay. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.DeletePending">
            <summary> DeletePending. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.DirectoryNotEmpty">
            <summary> DirectoryNotEmpty. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.FileLockConflict">
            <summary> FileLockConflict. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.InvalidFileOrDirectoryPathName">
            <summary> InvalidFileOrDirectoryPathName. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ParentNotFound">
            <summary> ParentNotFound. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ReadOnlyAttribute">
            <summary> ReadOnlyAttribute. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareAlreadyExists">
            <summary> ShareAlreadyExists. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareBeingDeleted">
            <summary> ShareBeingDeleted. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareDisabled">
            <summary> ShareDisabled. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareNotFound">
            <summary> ShareNotFound. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.SharingViolation">
            <summary> SharingViolation. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotInProgress">
            <summary> ShareSnapshotInProgress. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotCountExceeded">
            <summary> ShareSnapshotCountExceeded. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareSnapshotOperationNotSupported">
            <summary> ShareSnapshotOperationNotSupported. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ShareHasSnapshots">
            <summary> ShareHasSnapshots. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.ContainerQuotaDowngradeNotAllowed">
            <summary> ContainerQuotaDowngradeNotAllowed. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationSourceIPMismatch">
            <summary> AuthorizationSourceIPMismatch. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationProtocolMismatch">
            <summary> AuthorizationProtocolMismatch. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationPermissionMismatch">
            <summary> AuthorizationPermissionMismatch. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationServiceMismatch">
            <summary> AuthorizationServiceMismatch. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.AuthorizationResourceTypeMismatch">
            <summary> AuthorizationResourceTypeMismatch. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareErrorCode.FeatureVersionMismatch">
            <summary> FeatureVersionMismatch. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Equality(Azure.Storage.Files.Shares.Models.ShareErrorCode,Azure.Storage.Files.Shares.Models.ShareErrorCode)">
            <summary> Determines if two <see cref="T:Azure.Storage.Files.Shares.Models.ShareErrorCode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Inequality(Azure.Storage.Files.Shares.Models.ShareErrorCode,Azure.Storage.Files.Shares.Models.ShareErrorCode)">
            <summary> Determines if two <see cref="T:Azure.Storage.Files.Shares.Models.ShareErrorCode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.op_Implicit(System.String)~Azure.Storage.Files.Shares.Models.ShareErrorCode">
            <summary> Converts a string to a <see cref="T:Azure.Storage.Files.Shares.Models.ShareErrorCode" />. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.Equals(Azure.Storage.Files.Shares.Models.ShareErrorCode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareErrorCode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileHandle">
            <summary> A listed Azure Storage handle item. </summary>
            <summary>
            ShareFileHandle.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileHandle.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of ShareFileHandle. </summary>
            <param name="handleId"> XSMB service handle ID. </param>
            <param name="path"> File or directory name including full path starting from share root. </param>
            <param name="fileId"> FileId uniquely identifies the file or directory. </param>
            <param name="sessionId"> SMB session ID in context of which the file handle was opened. </param>
            <param name="clientIp"> Client IP that opened the handle. </param>
            <param name="openedOn"> Time when the session that previously opened the handle has last been reconnected. (UTC). </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="handleId" />, <paramref name="path" />, <paramref name="fileId" />, <paramref name="sessionId" /> or <paramref name="clientIp" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileHandle.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary> Initializes a new instance of ShareFileHandle. </summary>
            <param name="handleId"> XSMB service handle ID. </param>
            <param name="path"> File or directory name including full path starting from share root. </param>
            <param name="fileId"> FileId uniquely identifies the file or directory. </param>
            <param name="parentId"> ParentId uniquely identifies the parent directory of the object. </param>
            <param name="sessionId"> SMB session ID in context of which the file handle was opened. </param>
            <param name="clientIp"> Client IP that opened the handle. </param>
            <param name="openedOn"> Time when the session that previously opened the handle has last been reconnected. (UTC). </param>
            <param name="lastReconnectedOn"> Time handle was last connected to (UTC). </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.HandleId">
            <summary> XSMB service handle ID. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.Path">
            <summary> File or directory name including full path starting from share root. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.FileId">
            <summary> FileId uniquely identifies the file or directory. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.ParentId">
            <summary> ParentId uniquely identifies the parent directory of the object. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.SessionId">
            <summary> SMB session ID in context of which the file handle was opened. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.ClientIp">
            <summary> Client IP that opened the handle. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.OpenedOn">
            <summary>
            Time when the session that previously opened the handle has last been reconnected. (UTC).
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHandle.LastReconnectedOn">
            <summary>
            Time handle was last connected to (UTC).
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileRangeList">
            <summary> The list of file ranges. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileRangeList.#ctor">
            <summary> Initializes a new instance of ShareFileRangeList. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileRangeList.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Storage.Files.Shares.Models.FileRange},System.Collections.Generic.IReadOnlyList{Azure.Storage.Files.Shares.Models.ClearRange})">
            <summary> Initializes a new instance of ShareFileRangeList. </summary>
            <param name="ranges"></param>
            <param name="clearRanges"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRangeList.Ranges">
            <summary> Gets the ranges. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRangeList.ClearRanges">
            <summary> Gets the clear ranges. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions">
            <summary> Parameter group. </summary>
            <summary>
            Specifies lease access conditions for a file.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.#ctor">
            <summary> Initializes a new instance of ShareFileRequestConditions. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.LeaseId">
            <summary>
            Optionally limit requests to resources with an active lease
            matching this Id.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions.ToString">
            <summary>
            Converts the value of the current RequestConditions object to
            its equivalent string representation.
            </summary>
            <returns>
            A string representation of the RequestConditions.
            </returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareItemInternal">
            <summary> A listed Azure Storage share item. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareItemInternal.#ctor(System.String,Azure.Storage.Files.Shares.Models.SharePropertiesInternal)">
            <summary> Initializes a new instance of ShareItemInternal. </summary>
            <param name="name"></param>
            <param name="properties"> Properties of a share. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="name" /> or <paramref name="properties" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareItemInternal.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.String,Azure.Storage.Files.Shares.Models.SharePropertiesInternal,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary> Initializes a new instance of ShareItemInternal. </summary>
            <param name="name"></param>
            <param name="snapshot"></param>
            <param name="deleted"></param>
            <param name="version"></param>
            <param name="properties"> Properties of a share. </param>
            <param name="metadata"> Dictionary of &lt;string&gt;. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItemInternal.Name">
            <summary> Gets the name. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItemInternal.Snapshot">
            <summary> Gets the snapshot. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItemInternal.Deleted">
            <summary> Gets the deleted. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItemInternal.Version">
            <summary> Gets the version. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItemInternal.Properties">
            <summary> Properties of a share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItemInternal.Metadata">
            <summary> Dictionary of &lt;string&gt;. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareMetrics">
            <summary> Storage Analytics metrics for file service. </summary>
            <summary>
            ShareMetrics.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareMetrics.#ctor(System.String,System.Boolean,System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareRetentionPolicy)">
            <summary> Initializes a new instance of ShareMetrics. </summary>
            <param name="version"> The version of Storage Analytics to configure. </param>
            <param name="enabled"> Indicates whether metrics are enabled for the File service. </param>
            <param name="includeApis"> Indicates whether metrics should generate summary statistics for called API operations. </param>
            <param name="retentionPolicy"> The retention policy. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareMetrics.Version">
            <summary> The version of Storage Analytics to configure. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareMetrics.Enabled">
            <summary> Indicates whether metrics are enabled for the File service. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareMetrics.RetentionPolicy">
            <summary> The retention policy. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareMetrics.IncludeApis">
            <summary>
            Indicates whether metrics should generate summary statistics for called API operations.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareMetrics.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareMetrics.#ctor">
            <summary>
            Creates a new ShareMetrics instance.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareMetrics.#ctor(System.Boolean)">
            <summary>
            Creates a new ShareMetrics instance.
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.SharePermission">
            <summary> A permission (a security descriptor) at the share level. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.SharePermission.#ctor(System.String)">
            <summary> Initializes a new instance of SharePermission. </summary>
            <param name="permission"> The permission in the Security Descriptor Definition Language (SDDL). </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="permission" /> is null. </exception>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePermission.Permission">
            <summary> The permission in the Security Descriptor Definition Language (SDDL). </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.SharePropertiesInternal">
            <summary> Properties of a share. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.#ctor(System.DateTimeOffset,System.String,System.Int32)">
            <summary> Initializes a new instance of SharePropertiesInternal. </summary>
            <param name="lastModified"></param>
            <param name="etag"></param>
            <param name="quota"></param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="etag" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.#ctor(System.DateTimeOffset,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTimeOffset},System.String,System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseStatus},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseState},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseDuration},System.String,System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash})">
            <summary> Initializes a new instance of SharePropertiesInternal. </summary>
            <param name="lastModified"></param>
            <param name="etag"></param>
            <param name="quota"></param>
            <param name="provisionedIops"></param>
            <param name="provisionedIngressMBps"></param>
            <param name="provisionedEgressMBps"></param>
            <param name="provisionedBandwidthMiBps"></param>
            <param name="nextAllowedQuotaDowngradeTime"></param>
            <param name="deletedTime"></param>
            <param name="remainingRetentionDays"></param>
            <param name="accessTier"></param>
            <param name="accessTierChangeTime"></param>
            <param name="accessTierTransitionState"></param>
            <param name="leaseStatus"> The current lease status of the share. </param>
            <param name="leaseState"> Lease state of the share. </param>
            <param name="leaseDuration"> When a share is leased, specifies whether the lease is of infinite or fixed duration. </param>
            <param name="enabledProtocols"></param>
            <param name="rootSquash"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.LastModified">
            <summary> Gets the last modified. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.Etag">
            <summary> Gets the etag. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.Quota">
            <summary> Gets the quota. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.ProvisionedIops">
            <summary> Gets the provisioned iops. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.ProvisionedIngressMBps">
            <summary> Gets the provisioned ingress m bps. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.ProvisionedEgressMBps">
            <summary> Gets the provisioned egress m bps. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.ProvisionedBandwidthMiBps">
            <summary> Gets the provisioned bandwidth mi bps. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.NextAllowedQuotaDowngradeTime">
            <summary> Gets the next allowed quota downgrade time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.DeletedTime">
            <summary> Gets the deleted time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.RemainingRetentionDays">
            <summary> Gets the remaining retention days. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.AccessTier">
            <summary> Gets the access tier. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.AccessTierChangeTime">
            <summary> Gets the access tier change time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.AccessTierTransitionState">
            <summary> Gets the access tier transition state. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.LeaseStatus">
            <summary> The current lease status of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.LeaseState">
            <summary> Lease state of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.LeaseDuration">
            <summary> When a share is leased, specifies whether the lease is of infinite or fixed duration. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.EnabledProtocols">
            <summary> Gets the enabled protocols. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SharePropertiesInternal.RootSquash">
            <summary> Gets the root squash. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareProtocolSettings">
            <summary> Protocol settings. </summary>
            <summary>
            Protocol settings.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareProtocolSettings.#ctor(Azure.Storage.Files.Shares.Models.ShareSmbSettings)">
            <summary> Initializes a new instance of ShareProtocolSettings. </summary>
            <param name="smb"> Settings for SMB protocol. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProtocolSettings.Smb">
            <summary> Settings for SMB protocol. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareProtocolSettings.#ctor">
            <summary>
            Creates a new ShareProtocolSettings instance.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareProtocolSettings.#ctor(System.Boolean)">
            <summary>
            Creates a new ShareProtocolSettings instance.
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy">
            <summary> The retention policy. </summary>
            <summary>
            ShareRetentionPolicy.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.#ctor(System.Boolean,System.Nullable{System.Int32})">
            <summary> Initializes a new instance of ShareRetentionPolicy. </summary>
            <param name="enabled"> Indicates whether a retention policy is enabled for the File service. If false, metrics data is retained, and the user is responsible for deleting it. </param>
            <param name="days"> Indicates the number of days that metrics data should be retained. All data older than this value will be deleted. Metrics data is deleted on a best-effort basis after the retention period expires. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.Enabled">
            <summary> Indicates whether a retention policy is enabled for the File service. If false, metrics data is retained, and the user is responsible for deleting it. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.Days">
            <summary> Indicates the number of days that metrics data should be retained. All data older than this value will be deleted. Metrics data is deleted on a best-effort basis after the retention period expires. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.#ctor">
            <summary>
            Creates a new ShareRetentionPolicy instance.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareRetentionPolicy.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareRootSquash">
            <summary> The ShareRootSquash. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareRootSquash.NoRootSquash">
            <summary> NoRootSquash. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareRootSquash.RootSquash">
            <summary> RootSquash. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareRootSquash.AllSquash">
            <summary> AllSquash. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareServiceProperties">
            <summary> Storage service properties. </summary>
            <summary>
            ShareServiceProperties.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareServiceProperties.#ctor(Azure.Storage.Files.Shares.Models.ShareMetrics,Azure.Storage.Files.Shares.Models.ShareMetrics,System.Collections.Generic.IList{Azure.Storage.Files.Shares.Models.ShareCorsRule},Azure.Storage.Files.Shares.Models.ShareProtocolSettings)">
            <summary> Initializes a new instance of ShareServiceProperties. </summary>
            <param name="hourMetrics"> A summary of request statistics grouped by API in hourly aggregates for files. </param>
            <param name="minuteMetrics"> A summary of request statistics grouped by API in minute aggregates for files. </param>
            <param name="cors"> The set of CORS rules. </param>
            <param name="protocol"> Protocol settings. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.HourMetrics">
            <summary> A summary of request statistics grouped by API in hourly aggregates for files. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.MinuteMetrics">
            <summary> A summary of request statistics grouped by API in minute aggregates for files. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.Protocol">
            <summary> Protocol settings. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareServiceProperties.Cors">
            <summary>
            The set of CORS rules.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareServiceProperties.#ctor">
            <summary>
            Creates a new ShareServiceProperties instance.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareServiceProperties.#ctor(System.Boolean)">
            <summary>
            Creates a new ShareServiceProperties instance.
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier">
            <summary> Signed identifier. </summary>
            <summary>
            ShareSignedIdentifier.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.#ctor(System.String,Azure.Storage.Files.Shares.Models.ShareAccessPolicy)">
            <summary> Initializes a new instance of ShareSignedIdentifier. </summary>
            <param name="id"> A unique id. </param>
            <param name="accessPolicy"> The access policy. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.Id">
            <summary> A unique id. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.AccessPolicy">
            <summary> The access policy. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.#ctor">
            <summary>
            Creates a new ShareSignedIdentifier instance.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareSignedIdentifier.#ctor(System.Boolean)">
            <summary>
            Creates a new ShareSignedIdentifier instance.
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareSmbSettings">
            <summary> Settings for SMB protocol. </summary>
            <summary>
            Settings for SMB protocol.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareSmbSettings.#ctor(Azure.Storage.Files.Shares.Models.SmbMultichannel)">
            <summary> Initializes a new instance of ShareSmbSettings. </summary>
            <param name="multichannel"> Settings for SMB Multichannel. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSmbSettings.Multichannel">
            <summary> Settings for SMB Multichannel. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareSmbSettings.#ctor">
            <summary>
            Creates a new ShareSmbSettings instance.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareSmbSettings.#ctor(System.Boolean)">
            <summary>
            Creates a new ShareSmbSettings instance.
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareStatistics">
            <summary> Stats for the share. </summary>
            <summary>
            Stats for the share.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareStatistics.#ctor(System.Int32)">
            <summary> Initializes a new instance of ShareStatistics. </summary>
            <param name="shareUsageBytes"> The approximate size of the data stored in bytes. Note that this value may not include all recently created or recently resized files. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareStatistics.ShareUsageBytes">
            <summary>
            Warning: ShareUsageBytes may exceed int.MaxValue.  Use ShareUsageInBytes instead.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareStatistics.ShareUsageInBytes">
            <summary>
            The approximate size of the data stored in bytes, rounded up to the nearest gigabyte. Note that this value may not include all recently created or recently resized files.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.SmbMultichannel">
            <summary> Settings for SMB multichannel. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.SmbMultichannel.#ctor">
            <summary> Initializes a new instance of SmbMultichannel. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.SmbMultichannel.#ctor(System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of SmbMultichannel. </summary>
            <param name="enabled"> If SMB multichannel is enabled. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SmbMultichannel.Enabled">
            <summary> If SMB multichannel is enabled. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.SourceModifiedAccessConditions">
            <summary> Parameter group. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.SourceModifiedAccessConditions.#ctor">
            <summary> Initializes a new instance of SourceModifiedAccessConditions. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SourceModifiedAccessConditions.SourceIfMatchCrc64">
            <summary> Specify the crc64 value to operate only on range with a matching crc64 checksum. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.SourceModifiedAccessConditions.SourceIfNoneMatchCrc64">
            <summary> Specify the crc64 value to operate only on range without a matching crc64 checksum. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.StorageError">
            <summary> The StorageError. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.StorageError.#ctor">
            <summary> Initializes a new instance of StorageError. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.StorageError.#ctor(System.String)">
            <summary> Initializes a new instance of StorageError. </summary>
            <param name="message"></param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.StorageError.Message">
            <summary> Gets the message. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareModelFactory">
            <summary> Model factory for read-only models. </summary>
            <summary>
            ShareModelFactory provides utilities for mocking.
            </summary>
            <summary>
            ShareModelFactory provides utilities for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileRangeInfo(System.DateTimeOffset,Azure.ETag,System.Int64,System.Collections.Generic.IEnumerable{Azure.HttpRange})">
            <summary>
            Creates a new ShareFileRangeInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.StorageClosedHandlesSegment(System.String,System.Int32)">
            <summary>
            Creates a new StorageClosedHandlesSegment instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new ShareProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseStatus},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseState},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseDuration},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{Azure.Storage.Files.Shares.Models.ShareProtocols},System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash})">
            <summary>
            Creates a new ShareProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Nullable{Azure.ETag},System.Nullable{System.DateTimeOffset},System.String,System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseStatus},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseState},System.Nullable{Azure.Storage.Files.Shares.Models.ShareLeaseDuration},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new ShareProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new ShareProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareProperties(System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag},System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new ShareProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareItem(System.String,Azure.Storage.Files.Shares.Models.ShareProperties,System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            Creates a new ShareItem instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareItem(System.String,Azure.Storage.Files.Shares.Models.ShareProperties,System.String)">
            <summary>
            Creates a new ShareItem instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileHandle(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates a new ShareFileHandle instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileCopyInfo(Azure.ETag,System.DateTimeOffset,System.String,Azure.Storage.Files.Shares.Models.CopyStatus)">
            <summary>
            Creates a new ShareFileCopyInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.PermissionInfo(System.String)">
            <summary>
            Creates a new PermissionInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileLease(Azure.ETag,System.DateTimeOffset,System.String)">
            <summary>
            Creates a new ShareFileLease instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileUploadInfo(Azure.ETag,System.DateTimeOffset,System.Byte[],System.Boolean)">
            <summary>
            Creates a new ShareFileUploadInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareInfo(Azure.ETag,System.DateTimeOffset)">
            <summary>
            Creates a new ShareInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareSnapshotInfo(System.String,Azure.ETag,System.DateTimeOffset)">
            <summary>
            Creates a new ShareSnapshotInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareStatistics(System.Int64)">
            <summary>
            Creates a new ShareStatistics instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.StorageClosedHandlesSegment(System.String,System.Int32,System.Int32)">
            <summary>
            Creates a new StorageClosedHandlesSegment instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.FileLeaseReleaseInfo(Azure.ETag,System.DateTimeOffset)">
            <summary>
            Creates a new FileLeaseReleaseInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareFileItemProperties(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{Azure.ETag})">
            <summary>
            Creates a new ShareFileItemProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareModelFactory.ShareStatistics(System.Int32)">
            <summary>
            Creates a new PermissionInfo instance for mocking.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult">
            <summary>
            The result of a force close handle or force close all handles operation.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CloseHandlesResult.ClosedHandlesCount">
            <summary>
            The number of file handles that were closed.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.CloseHandlesResult.FailedHandlesCount">
            <summary>
            The number of file handles that fialed to close.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.CloseHandlesResult.#ctor">
            <summary>
            Prevent direct instantiation of ClosedHandlesInfo instances.
            You can use FileModelFactory.ClosedHandlesInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FileModelFactory">
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileModelFactory.ClosedHandlesInfo(System.Int32)">
            <summary>
            Creates a new ClosedHandlesInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileModelFactory.ClosedHandlesInfo(System.Int32,System.Int32)">
            <summary>
            Creates a new ClosedHandlesInfo instance for mocking.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.CopyableFileSmbProperties">
            <summary>
            Smb Properties to copy from the source file.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyableFileSmbProperties.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyableFileSmbProperties.FileAttributes">
            <summary>
            File Attributes.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyableFileSmbProperties.CreatedOn">
            <summary>
            Created On.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyableFileSmbProperties.LastWrittenOn">
            <summary>
            Last Written On.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyableFileSmbProperties.ChangedOn">
            <summary>
            Changed On.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyableFileSmbProperties.All">
            <summary>
            All.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.CopyStatus">
            <summary>
            State of the copy operation identified by 'x-ms-copy-id'.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyStatus.Pending">
            <summary>
            pending
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyStatus.Success">
            <summary>
            success
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyStatus.Aborted">
            <summary>
            aborted
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.CopyStatus.Failed">
            <summary>
            failed
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo">
            <summary>
            FileLeaseReleaseInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo.LastModified">
            <summary>
            Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileLeaseReleaseInfo.#ctor">
            <summary>
            Prevent direct instantiation of FileLeaseReleaseInfo instances.
            You can use ShareModelFactory.FileLeaseReleaseInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FileSmbProperties">
            <summary>
            The SMB properties for a file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileAttributes">
            <summary>
            The file system attributes for this file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FilePermissionKey">
            <summary>
            The key of the file permission.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileCreatedOn">
            <summary>
            The creation time of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileLastWrittenOn">
            <summary>
            The last write time of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileChangedOn">
            <summary>
            The change time of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.FileId">
            <summary>
            The fileId of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.FileSmbProperties.ParentId">
            <summary>
            The parentId of the file
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileSmbProperties.#ctor">
            <summary>
            Creates a new FileSmbProperties instance.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileSmbProperties.Equals(System.Object)">
            <summary>
            Checks if two FileSmbProperties are equal.
            </summary>
            <param name="other">The other instance to compare to.</param>
            <returns></returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FileSmbProperties.GetHashCode">
            <summary>
            Gets the hash code for the FileSmbProperties.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.SharesModelFactory">
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.SharesModelFactory.FileSmbProperties(System.Nullable{System.DateTimeOffset},System.String,System.String)">
            <summary>
            Creates a new FileSmbProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.SharesModelFactory.StorageDirectoryInfo(Azure.ETag,System.DateTimeOffset,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String)">
            <summary>
            Creates a new StorageDirectoryInfo instance for mocking.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ListFilesIncludeType">
            <summary> The ListFilesIncludeType. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ListFilesIncludeType.Timestamps">
            <summary> Timestamps. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ListFilesIncludeType.Etag">
            <summary> Etag. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ListFilesIncludeType.Attributes">
            <summary> Attributes. </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ListFilesIncludeType.PermissionKey">
            <summary> PermissionKey. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.StorageHandlesSegment">
            <summary>
            An enumeration of handles.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.StorageHandlesSegment.NextMarker">
            <summary>
            NextMarker
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.StorageHandlesSegment.Handles">
            <summary>
            Handles
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.StorageHandlesSegment.#ctor">
            <summary>
            Creates a new StorageHandlesSegment instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.StorageHandlesSegment.#ctor(System.Boolean)">
            <summary>
            Creates a new StorageHandlesSegment instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.NtfsFileAttributes">
            <summary>
            NTFS file attributes for Files and Directories.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.ReadOnly">
            <summary>
            The File or Directory is read-only.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Hidden">
            <summary>
            The File or Directory is hidden, and thus is not included in an ordinary directory listing.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.System">
            <summary>
            The File or Directory is a systemfile.  That is, the file is part of the operating system
            or is used exclusively by the operating system.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.None">
            <summary>
            The file  or directory is a standard file that has no special attributes. This attribute is
            valid only if it is used alone.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Directory">
            <summary>
            The file is a directory.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Archive">
            <summary>
            The file is a candidate for backup or removal.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Temporary">
            <summary>
            The file or directory is temporary. A temporary file contains data that is needed while an
            application is executing but is not needed after the application is finished.
            File systems try to keep all the data in memory for quicker access rather than
            flushing the data back to mass storage. A temporary file should be deleted by
            the application as soon as it is no longer needed.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.Offline">
            <summary>
            The file or directory is offline. The data of the file is not immediately available.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.NotContentIndexed">
            <summary>
            The file or directory will not be indexed by the operating system's content indexing service.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.NtfsFileAttributes.NoScrubData">
            <summary>
            The file or directory is excluded from the data integrity scan. When this value
            is applied to a directory, by default, all new files and subdirectories within
            that directory are excluded from data integrity.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.PermissionCopyMode">
            <summary>
            Specifies the option to copy file security descriptor from source file or to set it using the value which is defined by the header value of x-ms-file-permission or x-ms-file-permission-key.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.PermissionCopyMode.Source">
            <summary>
            source
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.PermissionCopyMode.Override">
            <summary>
            override
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.PermissionInfo">
            <summary>
            PermissionInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.PermissionInfo.FilePermissionKey">
            <summary>
            Key of the permission set for the directory/file.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.PermissionInfo.#ctor">
            <summary>
            Prevent direct instantiation of PermissionInfo instances.
            You can use ShareModelFactory.PermissionInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareCreateOptions">
            <summary>
            Optional parameters for creating a Share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.Metadata">
            <summary>
            Optional custom metadata to set for this share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.QuotaInGB">
            <summary>
            Optional. Maximum size of the share in gigabytes.  If unspecified, use the service's default value.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.AccessTier">
            <summary>
            Optional.  Specifies the access tier of the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.Protocols">
            <summary>
            The protocols to enable for the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareCreateOptions.RootSquash">
            <summary>
            The root squash to set for the share.  Only valid for NFS shares.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareDeleteOptions">
            <summary>
            Optional parameters for deleteing a Share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDeleteOptions.ShareSnapshotsDeleteOption">
            <summary>
            A value indicating whether to delete a share's snapshots or leased snapshots in addition
            to the share itself.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDeleteOptions.Conditions">
            <summary>
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
            on deleting the share.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions">
            <summary>
            Optional parameters for <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions.Prefix">
            <summary>
            Optional string that filters the results to return only
            files and directories whose name begins with the specified prefix.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions.Traits">
            <summary>
            Optional.  Specifies traits to include in the <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileItem" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions.IncludeExtendedInfo">
            <summary>
            Optional.  Specified that extended info should be included in the <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileItem" />.
            If set to true, the Content-Length property will be up to date.  Implicitly set to true
            if any <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileTraits" /> are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo">
            <summary>
            Subset of the directory's properties.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.ETag">
            <summary>
            The ETag contains a value which represents the version of the directory, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.LastModified">
            <summary>
            Returns the date and time the directory was last modified. Any operation that modifies the directory or
            its properties updates the last modified time. Operations on files do not affect the last modified time of the directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.SmbProperties">
            <summary>
            The directory's SMB properties.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareDirectoryInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties">
            <summary>
            Properites for a directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.Metadata">
            <summary>
            A set of name-value pairs that contain metadata for the directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.LastModified">
            <summary>
            Returns DateTimeOffest the directory was last modified. Operations on files within the directory
            do not affect the last modified time of the directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.IsServerEncrypted">
            <summary>
            Set to true if the directory metadata is completely encrypted using the specified algorithm.
            Otherwise, the value is set to false.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.SmbProperties">
            <summary>
            The SMB properties for the directory.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareDirectoryProperties.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.FilesModelFactory">
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            FilesModelFactory provides utilities for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageDirectoryProperties(System.Collections.Generic.IDictionary{System.String,System.String},Azure.ETag,System.DateTimeOffset,System.Boolean,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String)">
            <summary>
            Creates a new StorageDirectoryProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileDownloadProperties(System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Azure.ETag,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.Shares.Models.CopyStatus,System.Byte[],System.Boolean)">
            <summary>
            Creates a new StorageFileDownloadProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileDownloadInfo(System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.String},System.String,System.DateTimeOffset,System.String,System.String,System.String,System.Uri,Azure.Storage.Files.Shares.Models.CopyStatus,System.Byte[],System.Boolean,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.DateTimeOffset,System.Byte[],System.DateTimeOffset,Azure.ETag,System.DateTimeOffset,System.String,System.String,System.String,System.String,System.Int64,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.IO.Stream,System.String)">
            <summary>
            Creates a new StorageFileDownloadInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileInfo(Azure.ETag,System.DateTimeOffset,System.Boolean,System.String,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String)">
            <summary>
            Creates a new StorageFileInfo instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.ShareFileItem(System.Boolean,System.String,System.Nullable{System.Int64},System.String,Azure.Storage.Files.Shares.Models.ShareFileItemProperties,System.Nullable{Azure.Storage.Files.Shares.Models.NtfsFileAttributes},System.String)">
            <summary>
            Creates a new StorageFileItem instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileItem(System.Boolean,System.String,System.Nullable{System.Int64})">
            <summary>
            Creates a new StorageFileItem instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.FilesModelFactory.StorageFileProperties(System.DateTimeOffset,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64,System.String,Azure.ETag,System.Byte[],System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.DateTimeOffset,System.String,System.String,System.String,System.String,Azure.Storage.Files.Shares.Models.CopyStatus,System.Boolean,System.String,System.DateTimeOffset,System.DateTimeOffset,System.DateTimeOffset,System.String,System.String,System.String)">
            <summary>
            Creates a new StorageFileProperties instance for mocking.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo">
            <summary>
            ShareFileCopyInfo.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.ETag">
            <summary>
            If the copy is completed, contains the ETag of the destination file. If the copy is not complete, contains the ETag of the empty file created at the start of the copy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.LastModified">
            <summary>
            Returns the date/time that the copy operation to the destination file completed.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.CopyId">
            <summary>
            String identifier for this copy operation. Use with Get File or Get File Properties to check the status of this copy operation, or pass to Abort Copy File to abort a pending copy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.CopyStatus">
            <summary>
            State of the copy operation identified by x-ms-copy-id.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileCopyInfo.#ctor">
            <summary>
            Prevent direct instantiation of ShareFileCopyInfo instances.
            You can use ShareModelFactory.ShareFileCopyInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions">
            <summary>
            Optional parameters for ShareFileClient.StartCopy() and .StartCopyAsync().
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions.Metadata">
            <summary>
            Optional custom metadata to set on the destination file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions.SmbProperties">
            <summary>
            Optional SMB properties to set on the destination file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions.FilePermission">
            <summary>
            Optional file permission to set for the destination file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions.FilePermissionCopyMode">
            <summary>
            Specifies the option to copy file security descriptor from source file or
            to set it using the value which is defined by the header value of FilePermission
            or FilePermissionKey.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions.IgnoreReadOnly">
            <summary>
            Optional boolean specifying to overwrite the target file if it already
            exists and has read-only attribute set.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions.Archive">
            <summary>
            Optional boolean Specifying to set archive attribute on a target file. True
            means archive attribute will be set on a target file despite attribute
            overrides or a source file state.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions.Conditions">
            <summary>
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
            on copying the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileCopyOptions.SmbPropertiesToCopy">
            <summary>
            SMB properties to copy from the source file.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails">
            <summary>
            Details returned when downloading a File
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LastModified">
            <summary>
            Returns the date and time the file was last modified. Any operation that modifies the file or its properties updates the last modified time.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.Metadata">
            <summary>
            A set of name-value pairs associated with this file as user-defined metadata.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentRange">
             <summary>
             Indicates the range of bytes returned if the client requested a subset of the file by setting the Range request header.
            
             The format of the Content-Range is expected to comeback in the following format.
             [unit] [start]-[end]/[fileSize]
             (e.g. bytes 1024-3071/10240)
            
             The [end] value will be the inclusive last byte (e.g. header "bytes 0-7/8" is the entire 8-byte file).
             </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentEncoding">
            <summary>
            Returns the value that was specified for the Content-Encoding request header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CacheControl">
            <summary>
            Returned if it was previously specified for the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentDisposition">
            <summary>
            Returns the value that was specified for the 'x-ms-content-disposition' header and specifies how to process the response.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.ContentLanguage">
            <summary>
            Returns the value that was specified for the Content-Language request header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.AcceptRanges">
            <summary>
            Indicates that the service supports requests for partial file content.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyCompletedOn">
            <summary>
            Conclusion time of the last attempted Copy File operation where this file was the destination file. This value can specify the time of a completed, aborted, or failed copy attempt.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyStatusDescription">
            <summary>
            Only appears when x-ms-copy-status is failed or pending. Describes cause of fatal or non-fatal copy operation failure.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyId">
            <summary>
            String identifier for the last attempted Copy File operation where this file was the destination file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyProgress">
            <summary>
            Contains the number of bytes copied and the total bytes in the source in the last attempted Copy File operation where this file was the destination file. Can show between 0 and Content-Length bytes copied.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopySource">
            <summary>
            URL up to 2KB in length that specifies the source file used in the last attempted Copy File operation where this file was the destination file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.CopyStatus">
            <summary>
            State of the copy operation identified by 'x-ms-copy-id'.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.FileContentHash">
            <summary>
            If the file has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole file's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the file data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the file is unencrypted, or if only parts of the file/application metadata are encrypted).
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseDuration">
            <summary>
            When a file is leased, specifies whether the lease is of infinite or fixed duration.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseState">
            <summary>
            Lease state of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.LeaseStatus">
            <summary>
            The current lease status of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.SmbProperties">
            <summary>
            The SMB properties for the file
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileDownloadDetails.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo">
            <summary>
            The properties and content returned from downloading a file
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentLength">
            <summary>
            The number of bytes present in the response body.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Content">
            <summary>
            Content
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentType">
            <summary>
            The content type specified for the file. The default content type is 'application/octet-stream'
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.ContentHash">
            <summary>
            If the file has an MD5 hash and this operation is to read the full content, this response header is returned so that the client can check for message content integrity.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Details">
            <summary>
            Details returned when downloading a file
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Dispose">
            <summary>
            Disposes the StorageFileDownloadInfo by calling Dispose on the underlying Content stream.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions">
            <summary>
            Optional parameters for Get Range List Diff.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.Range">
            <summary>
            Optional. Specifies the range of bytes over which to list ranges, inclusively.
            If omitted, then all ranges for the file are returned.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.Snapshot">
            <summary>
            Optionally specifies the share snapshot to retrieve ranges
            information from. For more information on working with share snapshots,
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-share">
            Create a snapshot of a share</see>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.Conditions">
            <summary>
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
            on getting the range.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions.PreviousSnapshot">
            <summary>
            Specifies that the response will contain only ranges that were
            changed between target file and previous snapshot.  Changed ranges
            include both updated and cleared ranges. The target file may be a
            snapshot, as long as the snapshot specified by
            previousSnapshot is the older of the two.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions">
            <summary>
            Optional parameters for Get Range List.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions.Range">
            <summary>
            Optional. Specifies the range of bytes over which to list ranges, inclusively.
            If omitted, then all ranges for the file are returned.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions.Snapshot">
            <summary>
            Optionally specifies the share snapshot to retrieve ranges
            information from. For more information on working with share snapshots,
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-share">
            Create a snapshot of a share</see>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions.Conditions">
            <summary>
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
            on getting the range.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders">
             <summary>
             Standard HTTP properties supported by the files.
             These properties are represented as standard HTTP headers use standard
             names, as specified in the Header Field Definitions section 14 of the
             HTTP/1.1 protocol specification.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/setting-and-retrieving-properties-and-metadata-for-blob-resources">
             Setting and retrieving properties and metadata for service resources</see>.
             </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentType">
            <summary>
            The MIME content type of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentHash">
            <summary>
            An MD5 hash of the file content. This hash is used to verify the
            integrity of the file content during transport.  When this header is
            specified, the storage service checks the hash that has arrived
            with the one that was sent. If the two hashes do not match, the
            operation will fail with error code 400 (Bad Request).
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentEncoding">
            <summary>
            Specifies which content encodings have been applied to the file.
            This value is returned to the client when the Get File operation
            is performed on the file resource. The client can use this value
            when returned to decode the file content.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentLanguage">
            <summary>
            Specifies the natural languages used by this resource.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.ContentDisposition">
            <summary>
            Conveys additional information about how to process the response
            payload, and also can be used to attach additional metadata.  For
            example, if set to attachment, it indicates that the user-agent
            should not display the response, but instead show a Save As dialog
            with a filename other than the file name specified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.CacheControl">
            <summary>
            Specify directives for caching mechanisms.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.Equals(System.Object)">
            <summary>
            Check if two FileHttpHeaders instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders.GetHashCode">
            <summary>
            Get a hash code for the FileHttpHeaders.
            </summary>
            <returns>Hash code for the FileHttpHeaders.</returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileInfo">
            <summary>
            Subset of the file's properties.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.ETag">
            <summary>
            The ETag contains a value which represents the version of the file, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.LastModified">
            <summary>
            Returns the date and time the file was last modified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileInfo.SmbProperties">
            <summary>
            The file's SMB properties.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileItem">
            <summary>
            Describes a file or directory returned by
            <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItem.IsDirectory">
            <summary>
            Gets a value indicating whether this item is a directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItem.Name">
            <summary>
            Gets the name of this item.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItem.Id">
            <summary>
            Gets the ID.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItem.Properties">
            <summary>
            Gets the properties of this item.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItem.FileAttributes">
            <summary>
            Gets the file attributes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItem.PermissionKey">
            <summary>
            Gets the permission key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItem.FileSize">
            <summary>
            Gets an optional value indicating the file size, if this item is
            a file.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileItemProperties">
            <summary>
            Properties of a <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileItem" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItemProperties.CreatedOn">
            <summary>
            The time this item was created.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItemProperties.LastAccessedOn">
            <summary>
            The time this item was last accessed.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItemProperties.LastWrittenOn">
            <summary>
            The time this item was last written on.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItemProperties.ChangedOn">
            <summary>
            The time this time was changed.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItemProperties.LastModified">
            <summary>
            The time the item as last last modified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileItemProperties.ETag">
            <summary>
            The ETag of the item.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileLease">
            <summary>
            ShareFileLease.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileLease.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileLease.LastModified">
            <summary>
            Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileLease.LeaseId">
            <summary>
            Uniquely identifies a file's lease.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileLease.LeaseTime">
            <summary>
            Gets the approximate time remaining in the lease period, in
            seconds.  This is only provided when breaking a lease.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileLease.#ctor">
            <summary>
            Prevent direct instantiation of ShareFileLease instances.
            You can use ShareModelFactory.ShareFileLease instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException">
            <summary>
            An exception thrown if <see cref="T:System.IO.Stream" /> returned from <code>ShareFileClient.OpenRead</code> or <code>ShareFileClient.OpenReadAsync</code>
            observed that a file content has been modified during the read.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileModifiedException.ResourceUri">
            <summary>
            Gets the URI of the resurce that has been modified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileModifiedException.ExpectedETag">
            <summary>
            Gets the ETag value that was expected during the read.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileModifiedException.ActualETag">
            <summary>
            Gets the ETag value that was received from the service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileModifiedException.Range">
            <summary>
            Gets the range that was requested for the service.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileModifiedException.#ctor(System.String,System.Uri,Azure.ETag,Azure.ETag,Azure.HttpRange)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException" />.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="resourceUri">The URI of the resource that has been modified.</param>
            <param name="expectedETag">The ETag value that was expected during the read.</param>
            <param name="actualETag">The ETag value that was received from the service.</param>
            <param name="range">The range that was requested for the service.</param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileModifiedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</summary><param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param><param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param><exception cref="T:System.ArgumentNullException"><paramref name="info" /> is <see langword="null" />.</exception><exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileModifiedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary><param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param><param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param><exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</exception>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions">
            <summary>
            Optional parameters for <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.OpenReadAsync(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions.Position">
            <summary>
            The position within the file to begin the stream.
            Defaults to the beginning of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions.BufferSize">
            <summary>
            The buffer size to use when the stream downloads parts
            of the file.  Defaults to 4 MB.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions.Conditions">
            <summary>
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions on
            the download of the file.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="allowModifications">
            If false, a <see cref="T:Azure.RequestFailedException" /> will be thrown if the file is modified while
            it is being read from.
            </param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions">
            <summary>
            Optional parameters for File Open Write.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.BufferSize">
            <summary>
            The size of the buffer to use.  Default is 4 MB,
            max is 4 MB.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.OpenConditions">
            <summary>
            Access conditions used to open the write stream.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.ProgressHandler">
            <summary>
            Optional <see cref="T:System.IProgress`1" /> to provide
            progress updates about data transfers.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions.MaxSize">
            <summary>
            Required if overwrite is set to true, or the underlying
            file is being created for the first time.
            Specifies the size of the new Page Blob.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileProperties">
            <summary>
            Properties for a file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LastModified">
            <summary>
            The DateTimeOffset when the file was last modified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.Metadata">
            <summary>
            A set of name-value pairs associated with this file as user-defined metadata.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentLength">
            <summary>
            The size of the file in bytes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentType">
            <summary>
            The content type specified for the file. The default content type is 'application/octet-stream'
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ETag">
            <summary>
            The ETag contains a value that you can use to perform operations conditionally, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentHash">
            <summary>
            If the Content-MD5 header has been set for the file, the Content-MD5 response header is returned so that the client can check for message content integrity.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentEncoding">
            <summary>
            If the Content-Encoding request header has previously been set for the file, the Content-Encoding value is returned in this header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CacheControl">
            <summary>
            If the Cache-Control request header has previously been set for the file, the Cache-Control value is returned in this header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentDisposition">
            <summary>
            Returns the value that was specified for the 'x-ms-content-disposition' header and specifies how to process the response.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.ContentLanguage">
            <summary>
            Returns the value that was specified for the Content-Language request header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyCompletedOn">
            <summary>
            Conclusion time of the last attempted Copy File operation where this file was the destination file. This value can specify the time of a completed, aborted, or failed copy attempt.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyStatusDescription">
            <summary>
            Only appears when x-ms-copy-status is failed or pending. Describes cause of fatal or non-fatal copy operation failure.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyId">
            <summary>
            String identifier for the last attempted Copy File operation where this file was the destination file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyProgress">
            <summary>
            Contains the number of bytes copied and the total bytes in the source in the last attempted Copy File operation where this file was the destination file. Can show between 0 and Content-Length bytes copied.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopySource">
            <summary>
            URL up to 2KB in length that specifies the source file used in the last attempted Copy File operation where this file was the destination file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.CopyStatus">
            <summary>
            State of the copy operation identified by 'x-ms-copy-id'.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the file data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the file is unencrypted, or if only parts of the file/application metadata are encrypted).
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.SmbProperties">
            <summary>
            The SMB properties for the file
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseDuration">
            <summary>
            When a file is leased, specifies whether the lease is of infinite or fixed duration.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseState">
            <summary>
            Lease state of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileProperties.LeaseStatus">
            <summary>
            The current lease status of the file.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileProperties.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo">
            <summary>
            Contains file share range information returned from the ShareFileClient.GetRangeList operations.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.LastModified">
            <summary>
            The date/time that the file was last modified. Any operation that modifies the file, including an update of the file's metadata or properties, changes the file's last modified time.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.ETag">
            <summary>
            The ETag contains a value which represents the version of the file, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.FileContentLength">
            <summary>
            The size of the file in bytes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.Ranges">
            <summary>
            A list of non-overlapping valid ranges, sorted by increasing address range.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.ClearRanges">
            <summary>
            Clear ranges for the file.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileRangeInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType">
            <summary>
            Specify one of the following options: - Update: Writes the bytes specified by the request body into the specified range. The Range and Content-Length headers must match to perform the update. - Clear: Clears the specified range and releases the space used in storage for that range. To clear a range, set the Content-Length header to zero, and set the Range header to a value that indicates the range to clear, up to maximum file size.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType.Update">
            <summary>
            update
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType.Clear">
            <summary>
            clear
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions">
            <summary>
            Optional parameters for renaming a File or Directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions.ReplaceIfExists">
            <summary>
            Optional. A boolean value for if the destination file already exists, whether this request will overwrite the file or not.
            If true, the rename will succeed and will overwrite the destination file. If not provided or if false and the destination
            file does exist, the request will not overwrite the destination file. If provided and the destination file doesn’t exist,
            the rename will succeed.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions.IgnoreReadOnly">
            <summary>
            Optional.  A boolean value that specifies whether the ReadOnly attribute on a preexisting destination file should be respected.
            If true, the rename will succeed, otherwise, a previous file at the destination with the ReadOnly attribute set will cause the
            rename to fail.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions.SourceConditions">
            <summary>
            Source request conditions.  This parameter is only applicable if the source is a file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions.DestinationConditions">
            <summary>
            Destination request conditions.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions.SmbProperties">
            <summary>
            Optional SMB properties to set on the destination file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions.FilePermission">
            <summary>
            Optional file permission to set on the destination file or directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions.Metadata">
            <summary>
            Optional custom metadata to set on the destination.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileRenameOptions.ContentType">
            <summary>
            Optional content type to set on the File.
            Note that this parameter does not apply for Directories.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileTraits">
            <summary>
            Traits to be included when listing shares with the
            <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(System.String,System.Threading.CancellationToken)" /> operations.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareFileTraits.None">
            <summary>
            Default value specifying that no flags are set in <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileTraits" />.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareFileTraits.Timestamps">
            <summary>
            Indicates that timestamps should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareFileTraits.ETag">
            <summary>
            Indicates that ETag should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareFileTraits.Attributes">
            <summary>
            Indicates that attributes should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareFileTraits.PermissionKey">
            <summary>
            Indicates that permission key should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareFileTraits.All">
            <summary>
            Flag specifying that all traits should be included.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo">
            <summary>
            ShareFileUploadInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.ETag">
            <summary>
            The ETag contains a value which represents the version of the file, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.LastModified">
            <summary>
            Returns the date and time the directory was last modified. Any operation that modifies the share or its properties or metadata updates the last modified time. Operations on files do not affect the last modified time of the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.ContentHash">
            <summary>
            This header is returned so that the client can check for message content integrity. The value of this header is computed by the File service; it is not necessarily the same value as may have been specified in the request headers.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.IsServerEncrypted">
            <summary>
            The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareFileUploadInfo.#ctor">
            <summary>
            Prevent direct instantiation of ShareFileUploadInfo instances.
            You can use ShareModelFactory.ShareFileUploadInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions">
            <summary>
            Optional parameters for <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions.Conditions">
            <summary>
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
            on creating the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions.SourceAuthentication">
            <summary>
            Optional.  Source authentication used to access the source blob.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions.FileLastWrittenMode">
            <summary>
            Optional.  Specifies if the file last write time should be set to the current time,
            or the last write time currently associated with the file should be preserved.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeOptions">
            <summary>
            Optional parameters for uploading a file range with
            <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,Azure.Storage.Files.Shares.Models.ShareFileUploadRangeOptions,System.Threading.CancellationToken)" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeOptions.Conditions">
            <summary>
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add
            conditions on the upload of this file range.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeOptions.FileLastWrittenMode">
            <summary>
            Optional.  Specifies if the file last write time should be set to the current time,
            or the last write time currently associated with the file should be preserved.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeOptions.ProgressHandler">
            <summary>
            Optional <see cref="T:System.IProgress`1" /> to provide
            progress updates about data transfers.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeOptions.TransactionalContentHash">
             <summary>
             Optional MD5 hash of the range content.
            
             This hash is used to verify the integrity of the range during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the file.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException" />.
             </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareInfo">
            <summary>
            ShareInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareInfo.ETag">
            <summary>
            The ETag contains a value which represents the version of the share, in quotes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareInfo.LastModified">
            <summary>
            Returns the date and time the share was last modified. Any operation that modifies the share or its properties or metadata updates the last modified time. Operations on files do not affect the last modified time of the share.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareInfo.#ctor">
            <summary>
            Prevent direct instantiation of ShareInfo instances.
            You can use ShareModelFactory.ShareInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareItem">
            <summary>
            A listed Azure Storage share item.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItem.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItem.Snapshot">
            <summary>
            Snapshot.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItem.IsDeleted">
            <summary>
            Deleted.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItem.VersionId">
            <summary>
            Version.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareItem.Properties">
            <summary>
            Properties of a share.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareItem.#ctor">
            <summary>
            Internal constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareLeaseDuration">
            <summary>
            When a share is leased, specifies whether the lease is of infinite or fixed duration.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseDuration.Infinite">
            <summary>
            infinite
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseDuration.Fixed">
            <summary>
            fixed
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareLeaseState">
            <summary>
            Lease state of the share.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Available">
            <summary>
            available
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Leased">
            <summary>
            leased
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Expired">
            <summary>
            expired
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Breaking">
            <summary>
            breaking
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseState.Broken">
            <summary>
            broken
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareLeaseStatus">
            <summary>
            The current lease status of the share.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseStatus.Locked">
            <summary>
            locked
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareLeaseStatus.Unlocked">
            <summary>
            unlocked
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareProperties">
            <summary>
            Properties of a share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.LastModified">
            <summary>
            Last-Modified.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.ETag">
            <summary>
            Etag.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedIops">
            <summary>
            ProvisionedIops.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedIngressMBps">
            <summary>
            ProvisionedIngressMBps.
            This property is deprecated.  See <see cref="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedBandwidthMiBps" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedEgressMBps">
            <summary>
            ProvisionedEgressMBps.
            This property is deprecated.  See <see cref="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedBandwidthMiBps" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.ProvisionedBandwidthMiBps">
            <summary>
            Provisioned bandwidth in metabits/second.
            Only applicable to premium file accounts.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.NextAllowedQuotaDowngradeTime">
            <summary>
            NextAllowedQuotaDowngradeTime.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.DeletedOn">
            <summary>
            DeletedTime.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.RemainingRetentionDays">
            <summary>
            RemainingRetentionDays.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.AccessTier">
            <summary>
            AccessTier.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.AccessTierChangeTime">
            <summary>
            AccessTierChangeTime.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.AccessTierTransitionState">
            <summary>
            AccessTierTransitionState.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.LeaseStatus">
            <summary>
            The current lease status of the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.LeaseState">
            <summary>
            Lease state of the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.LeaseDuration">
            <summary>
            When a share is leased, specifies whether the lease is of infinite or fixed duration.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.Protocols">
            <summary>
            EnabledProtocols.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.RootSquash">
            <summary>
            RootSquash.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.QuotaInGB">
            <summary>
            QuotaInGB.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareProperties.Metadata">
            <summary>
            Metadata.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareProperties.#ctor">
            <summary>
            Internal constructor.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareProtocols">
            <summary>
            Protocols that can be set on a Share.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareProtocols.Smb">
            <summary>
            SMB
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareProtocols.Nfs">
            <summary>
            NFS
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions">
             <summary>
            
             </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.QuotaInGB">
            <summary>
            Optional, the maximum size to set on the share in GB.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.AccessTier">
            <summary>
            Optional, the access tier to set on the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.RootSquash">
            <summary>
            Optional, valid for NFS shares only.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions.Conditions">
            <summary>
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
            on setting the share's properties.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo">
            <summary>
            ShareSnapshotInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.Snapshot">
            <summary>
            This header is a DateTime value that uniquely identifies the share snapshot. The value of this header may be used in subsequent requests to access the share snapshot. This value is opaque.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.ETag">
            <summary>
            The ETag contains a value which represents the version of the share snapshot, in quotes. A share snapshot cannot be modified, so the ETag of a given share snapshot never changes. However, if new metadata was supplied with the Snapshot Share request then the ETag of the share snapshot differs from that of the base share. If no metadata was specified with the request, the ETag of the share snapshot is identical to that of the base share at the time the share snapshot was taken.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.LastModified">
            <summary>
            Returns the date and time the share was last modified. A share snapshot cannot be modified, so the last modified time of a given share snapshot never changes. However, if new metadata was supplied with the Snapshot Share request then the last modified time of the share snapshot differs from that of the base share. If no metadata was specified with the request, the last modified time of the share snapshot is identical to that of the base share at the time the share snapshot was taken.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.ShareSnapshotInfo.#ctor">
            <summary>
            Prevent direct instantiation of ShareSnapshotInfo instances.
            You can use ShareModelFactory.ShareSnapshotInfo instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareSnapshotsDeleteOption">
            <summary>
            Options to delete a share's snapshots.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareSnapshotsDeleteOption.Include">
            <summary>
            The share's snapshots that do not have an active lease will be deleted with the share.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareSnapshotsDeleteOption.IncludeWithLeased">
            <summary>
            All of the share's snapshots, including those with an active lease, will be deleted with the share.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareStates">
            <summary>
            States to determine the shares included with <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesAsync(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" />.
            operation.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareStates.None">
            <summary>
            Default value specifying that no flags are set in <see cref="T:Azure.Storage.Files.Shares.Models.ShareStates" />.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareStates.Snapshots">
            <summary>
            Flag specifying that the share's snapshots should be included.
            Snapshots are listed from oldest to newest.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareStates.Deleted">
            <summary>
            Flag specifying that deleted shares should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareStates.All">
            <summary>
            Flag specifying that shares of all states should be included.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.ShareTraits">
            <summary>
            Traits to be included when listing shares with the
            <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesAsync(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" /> operations.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareTraits.None">
            <summary>
            Default value specifying that no flags are set in <see cref="T:Azure.Storage.Files.Shares.Models.ShareTraits" />.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareTraits.Metadata">
            <summary>
            Flag specifying that the share's metadata should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Models.ShareTraits.All">
            <summary>
            Flag specifying that all traits should be included.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment">
            <summary>
            StorageClosedHandlesSegment.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.Marker">
            <summary>
            A string describing next handle to be closed. It is returned when more handles need to be closed to complete the request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.NumberOfHandlesClosed">
            <summary>
            Contains count of number of handles closed.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.NumberOfHandlesFailedToClose">
            <summary>
            Contains count of number of handles that failed to close.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Models.StorageClosedHandlesSegment.#ctor">
            <summary>
            Prevent direct instantiation of StorageClosedHandlesSegment instances.
            You can use ShareModelFactory.StorageClosedHandlesSegment instead.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ServiceGetPropertiesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ServiceListSharesSegmentHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ServiceRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.String)">
            <summary> Initializes a new instance of ServiceRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="url"> The URL of the service account, share, directory or file that is the target of the desired operation. </param>
            <param name="version"> Specifies the version of the operation to use for this request. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="url" /> or <paramref name="version" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.SetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Sets properties for a storage account's File service endpoint, including properties for Storage Analytics metrics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="storageServiceProperties"> The StorageService properties. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="storageServiceProperties" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.SetProperties(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Sets properties for a storage account's File service endpoint, including properties for Storage Analytics metrics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="storageServiceProperties"> The StorageService properties. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="storageServiceProperties" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.GetPropertiesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets the properties of a storage account's File service, including properties for Storage Analytics metrics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.GetProperties(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Gets the properties of a storage account's File service, including properties for Storage Analytics metrics and CORS (Cross-Origin Resource Sharing) rules. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.ListSharesSegmentAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ListSharesIncludeType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> The List Shares Segment operation returns a list of the shares and share snapshots under the specified account. </summary>
            <param name="prefix"> Filters the results to return only entries whose name begins with the specified prefix. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="include"> Include this parameter to specify one or more datasets to include in the response. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.ListSharesSegment(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ListSharesIncludeType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> The List Shares Segment operation returns a list of the shares and share snapshots under the specified account. </summary>
            <param name="prefix"> Filters the results to return only entries whose name begins with the specified prefix. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="include"> Include this parameter to specify one or more datasets to include in the response. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.ListSharesSegmentNextPageAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ListSharesIncludeType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> The List Shares Segment operation returns a list of the shares and share snapshots under the specified account. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="prefix"> Filters the results to return only entries whose name begins with the specified prefix. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="include"> Include this parameter to specify one or more datasets to include in the response. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ServiceRestClient.ListSharesSegmentNextPage(System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ListSharesIncludeType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> The List Shares Segment operation returns a list of the shares and share snapshots under the specified account. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="prefix"> Filters the results to return only entries whose name begins with the specified prefix. </param>
            <param name="marker"> A string value that identifies the portion of the list to be returned with the next list operation. The operation returns a marker value within the response body if the list returned was not complete. The marker value may then be used in a subsequent call to request the next set of list items. The marker value is opaque to the client. </param>
            <param name="maxresults"> Specifies the maximum number of entries to return. If the request does not specify maxresults, or specifies a value greater than 5,000, the server will return up to 5,000 items. </param>
            <param name="include"> Include this parameter to specify one or more datasets to include in the response. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> is null. </exception>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ServiceSetPropertiesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareAcquireLeaseHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareAcquireLeaseHeaders.LeaseId">
            <summary> Uniquely identifies a share's lease. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareAcquireLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareBreakLeaseHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareBreakLeaseHeaders.LeaseTime">
            <summary> Approximate time remaining in the lease period, in seconds. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareBreakLeaseHeaders.LeaseId">
            <summary> Uniquely identifies a share's lease. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareBreakLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareChangeLeaseHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareChangeLeaseHeaders.LeaseId">
            <summary> Uniquely identifies a share's lease. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareChangeLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareCreateHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties or metadata updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareCreateHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareCreatePermissionHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareCreatePermissionHeaders.FilePermissionKey">
            <summary> Key of the permission set for the directory/file. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareCreateSnapshotHeaders.Snapshot">
            <summary> This header is a DateTime value that uniquely identifies the share snapshot. The value of this header may be used in subsequent requests to access the share snapshot. This value is opaque. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareCreateSnapshotHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. A share snapshot cannot be modified, so the last modified time of a given share snapshot never changes. However, if new metadata was supplied with the Snapshot Share request then the last modified time of the share snapshot differs from that of the base share. If no metadata was specified with the request, the last modified time of the share snapshot is identical to that of the base share at the time the share snapshot was taken. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareCreateSnapshotHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDeleteHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetAccessPolicyHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetAccessPolicyHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPermissionHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.Metadata">
            <summary> A set of name-value pairs that contain the user-defined metadata of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.Quota">
            <summary> Returns the current share quota in GB. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.ProvisionedIops">
            <summary> Returns the current share provisioned ipos. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.ProvisionedIngressMBps">
            <summary> Returns the current share provisioned ingress in megabytes per second. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.ProvisionedEgressMBps">
            <summary> Returns the current share provisioned egress in megabytes per second. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.NextAllowedQuotaDowngradeTime">
            <summary> Returns the current share next allowed quota downgrade time. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.ProvisionedBandwidthMibps">
            <summary> Returns the current share provisioned bandwidth in megabits per second. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.LeaseDuration">
            <summary> When a share is leased, specifies whether the lease is of infinite or fixed duration. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.LeaseState">
            <summary> Lease state of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.LeaseStatus">
            <summary> The current lease status of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.AccessTier">
            <summary> Returns the access tier set on the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.AccessTierChangeTime">
            <summary> Returns the last modified time (in UTC) of the access tier of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.AccessTierTransitionState">
            <summary> Returns the transition state between access tiers, when present. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.EnabledProtocols">
            <summary> The protocols that have been enabled on the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetPropertiesHeaders.RootSquash">
            <summary> Valid for NFS shares only. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetStatisticsHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareGetStatisticsHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareReleaseLeaseHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareReleaseLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareRenewLeaseHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareRenewLeaseHeaders.LeaseId">
            <summary> Uniquely identifies a share's lease. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareRenewLeaseHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.String,System.String)">
            <summary> Initializes a new instance of ShareRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="url"> The URL of the service account, share, directory or file that is the target of the desired operation. </param>
            <param name="version"> Specifies the version of the operation to use for this request. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="url" /> or <paramref name="version" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.CreateAsync(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareAccessTier},System.String,System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash},System.Threading.CancellationToken)">
            <summary> Creates a new share under the specified account. If the share with the same name already exists, the operation fails. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="quota"> Specifies the maximum size of the share, in gigabytes. </param>
            <param name="accessTier"> Specifies the access tier of the share. </param>
            <param name="enabledProtocols"> Protocols to enable on the share. </param>
            <param name="rootSquash"> Root squash to set on the share.  Only valid for NFS shares. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.Create(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareAccessTier},System.String,System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash},System.Threading.CancellationToken)">
            <summary> Creates a new share under the specified account. If the share with the same name already exists, the operation fails. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="quota"> Specifies the maximum size of the share, in gigabytes. </param>
            <param name="accessTier"> Specifies the access tier of the share. </param>
            <param name="enabledProtocols"> Protocols to enable on the share. </param>
            <param name="rootSquash"> Root squash to set on the share.  Only valid for NFS shares. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.GetPropertiesAsync(System.String,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Returns all user-defined metadata and system properties for the specified share or share snapshot. The data returned does not include the share's list of files. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.GetProperties(System.String,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Returns all user-defined metadata and system properties for the specified share or share snapshot. The data returned does not include the share's list of files. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.DeleteAsync(System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.DeleteSnapshotsOptionType},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Operation marks the specified share or share snapshot for deletion. The share or share snapshot and any files contained within it are later deleted during garbage collection. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="deleteSnapshots"> Specifies the option include to delete the base share and all of its snapshots. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.Delete(System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.DeleteSnapshotsOptionType},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Operation marks the specified share or share snapshot for deletion. The share or share snapshot and any files contained within it are later deleted during garbage collection. </summary>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="deleteSnapshots"> Specifies the option include to delete the base share and all of its snapshots. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.AcquireLeaseAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="duration"> Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. </param>
            <param name="proposedLeaseId"> Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.AcquireLease(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="duration"> Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change. </param>
            <param name="proposedLeaseId"> Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.ReleaseLeaseAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.ReleaseLease(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.ChangeLeaseAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="proposedLeaseId"> Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.ChangeLease(System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="proposedLeaseId"> Proposed lease ID, in a GUID string format. The File service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.RenewLeaseAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.RenewLease(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="leaseId"> Specifies the current lease ID on the resource. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="leaseId" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.BreakLeaseAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="breakPeriod"> For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.BreakLease(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="breakPeriod"> For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately. </param>
            <param name="sharesnapshot"> The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.CreateSnapshotAsync(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary> Creates a read-only snapshot of a share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.CreateSnapshot(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary> Creates a read-only snapshot of a share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.CreatePermissionAsync(Azure.Storage.Files.Shares.Models.SharePermission,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Create a permission (a security descriptor). </summary>
            <param name="sharePermission"> A permission (a security descriptor) at the share level. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sharePermission" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.CreatePermission(Azure.Storage.Files.Shares.Models.SharePermission,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Create a permission (a security descriptor). </summary>
            <param name="sharePermission"> A permission (a security descriptor) at the share level. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="sharePermission" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.GetPermissionAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Returns the permission (security descriptor) for a given key. </summary>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="filePermissionKey" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.GetPermission(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary> Returns the permission (security descriptor) for a given key. </summary>
            <param name="filePermissionKey"> Key of the permission to be set for the directory/file. </param>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="filePermissionKey" /> is null. </exception>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.SetPropertiesAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareAccessTier},System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Sets properties for the specified share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="quota"> Specifies the maximum size of the share, in gigabytes. </param>
            <param name="accessTier"> Specifies the access tier of the share. </param>
            <param name="rootSquash"> Root squash to set on the share.  Only valid for NFS shares. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.SetProperties(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareAccessTier},System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Sets properties for the specified share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="quota"> Specifies the maximum size of the share, in gigabytes. </param>
            <param name="accessTier"> Specifies the access tier of the share. </param>
            <param name="rootSquash"> Root squash to set on the share.  Only valid for NFS shares. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.SetMetadataAsync(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Sets one or more user-defined name-value pairs for the specified share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.SetMetadata(System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Sets one or more user-defined name-value pairs for the specified share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="metadata"> A name-value pair to associate with a file storage object. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.GetAccessPolicyAsync(System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Returns information about stored access policies specified on the share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.GetAccessPolicy(System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Returns information about stored access policies specified on the share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.SetAccessPolicyAsync(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Sets a stored access policy for use with shared access signatures. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="shareAcl"> The ACL for the share. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.SetAccessPolicy(System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Sets a stored access policy for use with shared access signatures. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="shareAcl"> The ACL for the share. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.GetStatisticsAsync(System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Retrieves statistics related to the share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.GetStatistics(System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary> Retrieves statistics related to the share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="leaseAccessConditions"> Parameter group. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.RestoreAsync(System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary> Restores a previously deleted Share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="deletedShareName"> Specifies the name of the previously-deleted share. </param>
            <param name="deletedShareVersion"> Specifies the version of the previously-deleted share. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareRestClient.Restore(System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary> Restores a previously deleted Share. </summary>
            <param name="timeout"> The timeout parameter is expressed in seconds. For more information, see &lt;a href="https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;. </param>
            <param name="deletedShareName"> Specifies the name of the previously-deleted share. </param>
            <param name="deletedShareVersion"> Specifies the version of the previously-deleted share. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareRestoreHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareRestoreHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareSetAccessPolicyHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareSetAccessPolicyHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareSetMetadataHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareSetMetadataHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareSetPropertiesHeaders.LastModified">
            <summary> Returns the date and time the share was last modified. Any operation that modifies the share or its properties updates the last modified time. Operations on files do not affect the last modified time of the share. </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareSetPropertiesHeaders.Version">
            <summary> Indicates the version of the File service used to execute the request. </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.ShareExtensions">
            <summary>
            File service helpers.
            </summary>
            <summary>
            File service helpers.
            </summary>
            <summary>
            File enum extensions.
            </summary>
            <summary>
            File enum extensions.
            </summary>
            <summary>
            File enum extensions.
            </summary>
            <summary>
            File enum extensions.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareExtensions.AsIncludeItems(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates)">
            <summary>
            Convert the details into ListSharesIncludeType values.
            </summary>
            <returns>ListSharesIncludeType values</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareExtensions.ToAttributesString(Azure.Storage.Files.Shares.Models.NtfsFileAttributes)">
            <summary>
            ToString
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareExtensions.ToFileAttributes(System.String)">
            <summary>
            Parses a NTFS attributes string to a nullable FileNtfsAttributes.
            </summary>
            <param name="attributesString">string to parse</param>
            <returns></returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareExtensions.ToPermissionsString(Azure.Storage.Sas.ShareAccountSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.ShareSasBuilder.Permissions" />.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareExtensions.ToPermissionsString(Azure.Storage.Sas.ShareFileSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.ShareSasBuilder.Permissions" />.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareExtensions.ToPermissionsString(Azure.Storage.Sas.ShareSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.ShareSasBuilder.Permissions" />.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.ShareClient">
            <summary>
            The <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> allows you to manipulate Azure
            Storage shares and their directories and files.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareClient.Uri">
            <summary>
            Gets the share's primary <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> endpoint.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareClient.ClientConfiguration">
            <summary>
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareClient.ShareRestClient">
            <summary>
            ShareRestClient.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the share client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareClient.Name">
            <summary>
            Gets the name of the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareClient.CanGenerateSasUri">
            <summary>
            Determines whether the client is able to generate a SAS.
            If the client is authenticated with a <see cref="T:Azure.Storage.StorageSharedKeyCredential" />.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>
             </param>
             <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>
             </param>
             <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            class.
            </summary>
            <param name="shareUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> referencing the share that includes the
            name of the account and the name of the share.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            class.
            </summary>
            <param name="shareUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> referencing the share that includes the
            name of the account and the name of the share.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            class.
            </summary>
            <param name="shareUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> referencing the share that includes the
            name of the account and the name of the share.
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
            <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Files.Shares.ShareClientOptions,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            class.
            </summary>
            <param name="shareUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> referencing the share that includes the
            name of the account and the name of the share.
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <param name="storageSharedKeyCredential">
            The shared key credential used to sign requests.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            class.
            </summary>
            <param name="shareUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> referencing the share that includes the
            name of the account and the name of the share.
            </param>
            <param name="clientConfiguration">
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.WithSnapshot(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
             class with an identical <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> source but the specified
             <paramref name="snapshot" /> timestamp.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-share">
             Snapshot Share</see>.
             </summary>
             <remarks>
             Pass null or empty string to remove the snapshot returning a URL to the base share.
             </remarks>
             <param name="snapshot">
             The snapshot identifier.
             </param>
             <returns>
             A new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> instance.
             </returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetDirectoryClient(System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> object by appending
            <paramref name="directoryName" /> to the end of <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" />.  The
            new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />.
            </summary>
            <param name="directoryName">The name of the directory.</param>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetRootDirectoryClient">
            <summary>
            Create a <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> object for the root of the
            share.  The new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> uses the same request
            policy pipeline as the <see cref="T:Azure.Storage.Files.Shares.ShareClient" />.
            </summary>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.Create(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.Create(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateAsync(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.CreateAsync(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="quotaInGB">
             Optional. Maximum size of the share in bytes.  If unspecified, use the service's default value.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="quotaInGB">
             Optional. Maximum size of the share in bytes.  If unspecified, use the service's default value.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateInternal(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareAccessTier},System.Nullable{Azure.Storage.Files.Shares.Models.ShareProtocols},System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash},System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.CreateInternal(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareAccessTier},System.Nullable{Azure.Storage.Files.Shares.Models.ShareProtocols},System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash},System.Boolean,System.Threading.CancellationToken,System.String)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="quotaInGB">
             Optional. Maximum size of the share in bytes.  If unspecified, use the service's default value.
             </param>
             <param name="accessTier">
             Optional.  Specifies the access tier of the share.
             </param>
             <param name="enabledProtocols">
             The protocols to enable on the share.
             </param>
             <param name="rootSquash">
             Squash root to set on the share.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExists(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExists(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.  If the share already exists, <c>null</c>.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExistsAsync(Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.  If the share already exists, <c>null</c>.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="quotaInGB">
             Optional. Maximum size of the share in bytes.  If unspecified, use the service's default value.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.  If the share already exists, <c>null</c>.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" /> operation creates a new share
             under the specified account. If a share with the same name
             already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="quotaInGB">
             Optional. Maximum size of the share in bytes.  If unspecified, use the service's default value.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created share.  If the share already exists, <c>null</c>.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.Exists(System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> to see if the associated share
            exists on the storage account in the storage service.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the share exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareClient.ExistsAsync(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> to see if the associated share
            exists on the storage account in the storage service.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the share exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteIfExists(Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion, if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteIfExistsAsync(Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion, if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteIfExists(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion, if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="includeSnapshots">
             A value indicating whether to delete a share's snapshots in addition
             to the share itself.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteIfExistsAsync(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion, if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="includeSnapshots">
             A value indicating whether to delete a share's snapshots in addition
             to the share itself.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateSnapshot(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Creates a read-only snapshot of a share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-share">
             Snapshot Share</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created snapshot.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateSnapshotAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Creates a read-only snapshot of a share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-share">
             Snapshot Share</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created snapshot.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.Delete(Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteAsync(Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.Delete(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="includeSnapshots">
             A value indicating whether to delete a share's snapshots in addition
             to the share itself.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteAsync(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="includeSnapshots">
             A value indicating whether to delete a share's snapshots in addition
             to the share itself.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteInternal(System.Nullable{System.Boolean},System.Nullable{Azure.Storage.Files.Shares.Models.ShareSnapshotsDeleteOption},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="includeSnapshots">
             If this share snapshots should be deleted.  This parameter is for backwards compatibility.
             </param>
             <param name="shareSnapshotsDeleteOption">
             Parameter indicating if the share's snapshots or leased snapshots should be deleted.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on deleting the share.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetProperties(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GetProperties(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-properties">
             Get Share Properties</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on getting share properties.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             share's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-properties">
             Get Share Properties</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on getting share properties.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             share's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetProperties(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GetProperties(System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-properties">
             Get Share Properties</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             share's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GetPropertiesAsync(System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-properties">
             Get Share Properties</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             share's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetProperties(Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions,System.Threading.CancellationToken)">
             <summary>
             Sets properties of the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-properties">
             Set Share Properties</see>.
             </summary>
             <param name="options">
             Properties to set on the share.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareSetPropertiesOptions,System.Threading.CancellationToken)">
             <summary>
             Sets properties of the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-properties">
             Set Share Properties</see>.
             </summary>
             <param name="options">
             Properties to set on the share.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetPropertiesInternal(System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareAccessTier},System.Nullable{Azure.Storage.Files.Shares.Models.ShareRootSquash},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.String,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Sets access tier of the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-properties">
             Set Share Properties</see>.
             </summary>
             <param name="quotaInGB">
             Optional. The maximum size of the share.
             If unspecified, use the service's default value.
             </param>
             <param name="accessTier">
             Access tier to set on the share.
             </param>
             <param name="rootSquash">
             The root squash to set for the share.  Only valid for NFS shares.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on setting the quota.
             </param>
             <param name="operationName">
             The name of the calling operation.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetQuota(System.Int32,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Sets the maximum size of the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-properties">
             Set Share Properties</see>.
             </summary>
             <param name="quotaInGB">
             Optional. The maximum size of the share.
             If unspecified, use the service's default value.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on setting the quota.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetQuotaAsync(System.Int32,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Sets the maximum size of the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-properties">
             Set Share Properties</see>.
             </summary>
             <param name="quotaInGB">
             Optional. The maximum size of the share.
             If unspecified, use the service's default value.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on setting the quota.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetQuota(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Sets the maximum size of the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-properties">
             Set Share Properties</see>.
             </summary>
             <param name="quotaInGB">
             Optional. The maximum size of the share.
             If unspecified, use the service's default value.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetQuotaAsync(System.Int32,System.Threading.CancellationToken)">
             <summary>
             Sets the maximum size of the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-properties">
             Set Share Properties</see>.
             </summary>
             <param name="quotaInGB">
             Optional. The maximum size of the share.
             If unspecified, use the service's default value.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation sets user-defined metadata for the specified share as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-metadata">
             Set Share Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this share.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on setting share metadata.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation sets user-defined metadata for the specified share as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-metadata">
             Set Share Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this share.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on setting share metadata.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified share as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-metadata">
             Set Share Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this share.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified share as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-metadata">
             Set Share Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this share.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicy(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicy(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation gets the
             permissions for this share. The permissions indicate whether
             share data may be accessed publicly.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-acl">
             Get Share ACL</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on getting share access policy.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> of <see cref="T:System.Collections.Generic.IEnumerable`1" />
             describing the share's access policy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicyAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicyAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation gets the
             permissions for this share. The permissions indicate whether
             share data may be accessed publicly.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-acl">
             Get Share ACL</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on getting share access policy.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> of <see cref="T:System.Collections.Generic.IEnumerable`1" />
             describing the share's access policy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicy(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicy(System.Threading.CancellationToken)" /> operation gets the
             permissions for this share. The permissions indicate whether
             share data may be accessed publicly.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-acl">
             Get Share ACL</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> of <see cref="T:System.Collections.Generic.IEnumerable`1" />
             describing the share's access policy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicyAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GetAccessPolicyAsync(System.Threading.CancellationToken)" /> operation gets the
             permissions for this share. The permissions indicate whether
             share data may be accessed publicly.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-acl">
             Get Share ACL</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> of <see cref="T:System.Collections.Generic.IEnumerable`1" />
             describing the share's access policy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation sets the permissions for the specified share. The permissions indicate
             whether share data may be accessed publicly.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-acl">
             Set Share ACL</see>.
             </summary>
             <param name="permissions">
             Stored access policies that you can use to provide fine grained
             control over share permissions.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on setting the access policy.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation sets the permissions for the specified share. The permissions indicate
             whether share data may be accessed publicly.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-acl">
             Set Share ACL</see>.
             </summary>
             <param name="permissions">
             Stored access policies that you can use to provide fine grained
             control over share permissions.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on setting the access policy.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},System.Threading.CancellationToken)" />
             operation sets the permissions for the specified share. The permissions indicate
             whether share data may be accessed publicly.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-acl">
             Set Share ACL</see>.
             </summary>
             <param name="permissions">
             Stored access policies that you can use to provide fine grained
             control over share permissions.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Files.Shares.Models.ShareSignedIdentifier},System.Threading.CancellationToken)" />
             operation sets the permissions for the specified share. The permissions indicate
             whether share data may be accessed publicly.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-share-acl">
             Set Share ACL</see>.
             </summary>
             <param name="permissions">
             Stored access policies that you can use to provide fine grained
             control over share permissions.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetStatistics(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Retrieves statistics related to the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-stats">
             Get Share Stats</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on getting share stats.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             share statistics.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetStatisticsAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Retrieves statistics related to the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-stats">
             Get Share Stats</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on getting share stats.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             share statistics.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetStatistics(System.Threading.CancellationToken)">
             <summary>
             Retrieves statistics related to the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-stats">
             Get Share Stats</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             share statistics.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetStatisticsAsync(System.Threading.CancellationToken)">
             <summary>
             Retrieves statistics related to the share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-share-stats">
             Get Share Stats</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             share statistics.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetPermission(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the file permission in Security Descriptor Definition Language (SDDL).
            </summary>
            <param name="filePermissionKey">
            The file permission key.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> file permission.
            </returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetPermissionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the file permission in Security Descriptor Definition Language (SDDL).
            </summary>
            <param name="filePermissionKey">
            The file permission key.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> file permission.
            </returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreatePermission(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a permission (a security descriptor) at the share level. The created security descriptor
            can be used for the files/directories in the share.
            </summary>
            <param name="permission">
            File permission in the Security Descriptor Definition Language (SDDL). SDDL must have an owner, group,
            and discretionary access control list (DACL). The provided SDDL string format of the security descriptor
            should not have domain relative identifier (like 'DU', 'DA', 'DD' etc) in it.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> with ID of the newly created file permission.
            </returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreatePermissionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a permission (a security descriptor) at the share level. The created security descriptor
            can be used for the files/directories in the share.
            </summary>
            <param name="permission">
            File permission in the Security Descriptor Definition Language (SDDL). SDDL must have an owner, group,
            and discretionary access control list (DACL). The provided SDDL string format of the security descriptor
            should not have domain relative identifier (like 'DU', 'DA', 'DD' etc) in it.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> with ID of the newly created file permission.
            </returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateDirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.CreateDirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new
             directory in this share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="directoryName">T
             The name of the directory to create.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the
             newly created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.CreateDirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.CreateDirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new
             directory in this share.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="directoryName">T
             The name of the directory to create.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the
             newly created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteDirectory(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.DeleteDirectory(System.String,System.Threading.CancellationToken)" /> operation removes the specified empty
             directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="directoryName">T
             The name of the directory to delete.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.DeleteDirectoryAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.DeleteDirectoryAsync(System.String,System.Threading.CancellationToken)" /> operation removes the specified empty
             directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="directoryName">T
             The name of the directory to delete.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GenerateSasUri(Azure.Storage.Sas.ShareSasPermissions,System.DateTimeOffset)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GenerateSasUri(Azure.Storage.Sas.ShareSasPermissions,System.DateTimeOffset)" />
             returns a <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> that generates a Share Service
             Shared Access Signature (SAS) Uri based on the
             Client properties and parameters passed.
             The SAS is signed by the shared key credential of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.Shares.ShareClient.CanGenerateSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a service SAS</see>.
             </summary>
             <param name="permissions">
             Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Storage.Sas.ShareSasPermissions" />.
             </param>
             <param name="expiresOn">
             Required. Specifies the time at which the SAS becomes invalid. This field
             must be omitted if it has been specified in an associated stored access policy.
             </param>
             <returns>
             A <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> containing the SAS Uri.
             </returns>
             <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)" /> returns a <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" />
             that generates a Blob Container Service Shared Access Signature (SAS) Uri
             based on the Client properties and builder passed.
             The SAS is signed by the shared key credential of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.Shares.ShareClient.CanGenerateSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>.
             </summary>
             <param name="builder">
             Used to generate a Shared Access Signature (SAS)
             </param>
             <returns>
             A <see cref="P:Azure.Storage.Files.Shares.ShareClient.Uri" /> containing the SAS Uri.
             </returns>
             <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClient.GetParentServiceClientCore">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareClient" />.
            </summary>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> instance.</returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Specialized.SpecializedShareExtensions">
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> for
            creating <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> instances.
            </summary>
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> for
            creating <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> instances.
            </summary>
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> for
            creating <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> instances.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.SpecializedShareExtensions.GetParentServiceClient(Azure.Storage.Files.Shares.ShareClient)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareClient" />.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Files.Shares.ShareClient" />.</param>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.SpecializedShareExtensions.GetParentShareClient(Azure.Storage.Files.Shares.ShareDirectoryClient)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />.</param>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.SpecializedShareExtensions.GetParentDirectoryClient(Azure.Storage.Files.Shares.ShareDirectoryClient)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />.</param>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.SpecializedShareExtensions.GetParentShareClient(Azure.Storage.Files.Shares.ShareFileClient)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />.</param>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.SpecializedShareExtensions.GetParentShareDirectoryClient(Azure.Storage.Files.Shares.ShareFileClient)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />.
            </summary>
            <param name="client">The <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />.</param>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> instance.</returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient">
            <summary>
            The <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> allows you to manipulate Azure
            Storage leases on files.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.FileClient">
            <summary>
            The <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> to manage leases for.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ShareClient">
            <summary>
            The <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ShareClient" /> to manage leases for.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Uri">
            <summary>
            Gets the URI of the object being leased.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId">
            <summary>
            Gets the Lease ID for this lease.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ClientConfiguration">
            <summary>
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.InfiniteLeaseDuration">
            <summary>
            The <see cref="T:System.TimeSpan" /> representing an infinite lease duration.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> class
            for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor(Azure.Storage.Files.Shares.ShareFileClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> class.
            </summary>
            <param name="client">
            A <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> representing the file being leased.
            </param>
            <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.#ctor(Azure.Storage.Files.Shares.ShareClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> class.
            </summary>
            <param name="client">
            A <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ShareClient" /> representing the share being leased.
            </param>
            <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Acquire(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Acquire(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" /> operation acquires a lease on
             the file.
            
             If the file does not have an active lease, the File service
             creates a lease on the file and returns it.  If the
             file has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
            
             </summary>
             <param name="duration">
             Specifies the duration of the lease, in seconds, or specify
             <see cref="F:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.InfiniteLeaseDuration" /> for a lease that never expires.
             A non-infinite lease can be between 15 and 60 seconds.
             Files only support infinite lease.
             A lease duration cannot be changed using <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.RenewAsync(System.Threading.CancellationToken)" />
             or <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ChangeAsync(System.String,System.Threading.CancellationToken)" />.
             <param name="cancellationToken">
             </param>
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)" /> operation acquires a lease on
             the file.
            
             If the file does not have an active lease, the File service
             creates a lease on the file and returns it.  If the
             file has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />.
            
             </summary>
             <param name="duration">
             Specifies the duration of the lease, in seconds, or specify
             <see cref="F:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.InfiniteLeaseDuration" /> for a lease that never expires.
             A non-infinite lease can be between 15 and 60 seconds.
             Files only support infinite lease.
             A lease duration cannot be changed using <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.RenewAsync(System.Threading.CancellationToken)" />
             or <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ChangeAsync(System.String,System.Threading.CancellationToken)" />.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Acquire(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Threading.CancellationToken)" /> operation acquires a lease on
             the file.
            
             If the file does not have an active lease, the File service
             creates a lease on the file and returns it.  If the
             file has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
            
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.AcquireAsync(System.Threading.CancellationToken)" /> operation acquires a lease on
             the file.
            
             If the file does not have an active lease, the File service
             creates a lease on the file and returns it.  If the
             file has an active lease, you can only request a new lease
             using the active lease ID as <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />.
            
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Release(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Release(System.Threading.CancellationToken)" /> operation releases the
             files's previously-acquired lease.
            
             The lease may be released if the <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
             matches that associated with the file.  Releasing the
             lease allows another client to immediately acquire the lease for the
             file as soon as the release is complete.
            
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated blob or container.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ReleaseAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ReleaseAsync(System.Threading.CancellationToken)" /> operation releases the
             files's previously-acquired lease.
            
             The lease may be released if the <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
             matches that associated with the file.  Releasing the
             lease allows another client to immediately acquire the lease for the
             file as soon as the release is complete.
            
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ReleaseInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ReleaseInternal(System.Boolean,System.Threading.CancellationToken)" /> operation releases the
             files's previously-acquired lease.
            
             The lease may be released if the <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" />
             matches that associated with the file.  Releasing the
             lease allows another client to immediately acquire the lease for the
             file as soon as the release is complete.
            
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             updated file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Change(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Change(System.String,System.Threading.CancellationToken)" /> operation changes the lease
             of an active lease.  A change must include the current
             <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" /> and a new <paramref name="proposedId" />.
            
             </summary>
             <param name="proposedId">
             An optional proposed lease ID, in a GUID string format. A
             <see cref="T:Azure.RequestFailedException" /> will be thrown if the
             proposed lease ID is not in the correct format.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ChangeAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.ChangeAsync(System.String,System.Threading.CancellationToken)" /> operation changes the lease
             of an active lease.  A change must include the current
             <see cref="P:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.LeaseId" /> and a new <paramref name="proposedId" />.
            
             </summary>
             <param name="proposedId">
             An optional proposed lease ID, in a GUID string format. A
             <see cref="T:Azure.RequestFailedException" /> will be thrown if the
             proposed lease ID is not in the correct format.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Break(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Break(System.Threading.CancellationToken)" /> operation breaks the files's
             previously-acquired lease (if it exists).
            
             Once a lease is broken, it cannot be renewed.  Any authorized
             request can break the lease; the request is not required to
             specify a matching lease ID.
            
             A lease that has been broken can also be released.  A client can
             immediately acquire a file lease that has been
             released.
            
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the broken lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.BreakAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.BreakAsync(System.Threading.CancellationToken)" /> operation breaks the files's
             previously-acquired lease (if it exists).
            
             Once a lease is broken, it cannot be renewed.  Any authorized
             request can break the lease; the request is not required to
             specify a matching lease ID.
            
             A lease that has been broken can also be released.  A client can
             immediately acquire a file lease that has been
             released.
            
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the broken lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Renew(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.Renew(System.Threading.CancellationToken)" /> operation renews the
             shares's previously-acquired lease.  This API does not
             support files.
            
             The lease can be renewed if the leaseId
             matches that associated with the share.  Note that the
             lease may be renewed even if it has expired as long as the share
             has not been leased again since the expiration of that
             lease.  When you renew a lease, the lease duration clock resets.
            
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.RenewAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient.RenewAsync(System.Threading.CancellationToken)" /> operation renews the
             shares's previously-acquired lease.  This API does not
             support files.
            
             The lease can be renewed if the leaseId
             matches that associated with the share.  Note that the
             lease may be renewed even if it has expired as long as the share
             has not been leased again since the expiration of that
             lease.  When you renew a lease, the lease duration clock resets.
            
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the lease.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions">
            <summary>
            Add easy to discover methods to <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> for
            easily creating <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" />
            instances.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions.GetShareLeaseClient(Azure.Storage.Files.Shares.ShareFileClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> class.
            </summary>
            <param name="client">
            A <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> representing the file being leased.
            </param>
            <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.Specialized.SpecializedFileExtensions.GetShareLeaseClient(Azure.Storage.Files.Shares.ShareClient,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.Specialized.ShareLeaseClient" /> class.
            </summary>
            <param name="client">
            A <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> representing the share being leased.
            </param>
            <param name="leaseId">
            An optional lease ID.  If no lease ID is provided, a random lease
            ID will be created.
            </param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.ShareClientOptions">
            <summary>
            Provides the client configuration options for connecting to Azure File
            Storage.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.LatestVersion">
            <summary>
            The Latest service version supported by this client library.
            </summary>
        </member>
        <member name="T:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion">
            <summary>
            The versions of Azure File Storage supported by this client
            library.  For more, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/versioning-for-the-azure-storage-services">
            Versioning for the Azure Storage services</see>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2019_02_02">
            <summary>
            The 2019-02-02 service version described at
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/version-2019-02-02">
            Version 2019-02-02</see>
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2019_07_07">
            <summary>
            The 2019-07-07 service version described at
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/version-2019-07-07">
            Version 2019-07-07</see>
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2019_12_12">
            <summary>
            The 2019-12-12 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2020_02_10">
            <summary>
            The 2020-02-10 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2020_04_08">
            <summary>
            The 2020-04-08 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2020_06_12">
            <summary>
            The 2020-06-12 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2020_08_04">
            <summary>
            The 2020-08-14 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2020_10_02">
            <summary>
            The 2020-10-02 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2020_12_06">
            <summary>
            The 2020-12-06 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2021_02_12">
            <summary>
            The 2021-02-12 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2021_04_10">
            <summary>
            The 2021-04-10 serivce version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion.V2021_06_08">
            <summary>
            The 2021-06-08 service version.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareClientOptions.Version">
            <summary>
            Gets the <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion" /> of the service API used when
            making requests.  For more, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/versioning-for-the-azure-storage-services">
            Versioning for the Azure Storage services</see>.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareClientOptions.#ctor(Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" />
            class.
            </summary>
            <param name="version">
            The <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion" /> of the service API used when
            making requests.
            </param>
        </member>
        <member name="T:Azure.Storage.Files.Shares.ShareDirectoryClient">
            <summary>
            A DirectoryClient represents a URI to the Azure Storage File service allowing you to manipulate a directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri">
            <summary>
            Gets the directory's primary <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> endpoint.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDirectoryClient.ClientConfiguration">
            <summary>
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDirectoryClient.DirectoryRestClient">
            <summary>
            DirectoryRestClient.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDirectoryClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the directory client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDirectoryClient.ShareName">
            <summary>
            Gets the share name corresponding to the directory client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Name">
            <summary>
            Gets the name of the directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Path">
            <summary>
            Gets the path of the directory.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareDirectoryClient.CanGenerateSasUri">
            <summary>
            Determines whether the client is able to generate a SAS.
            If the client is authenticated with a <see cref="T:Azure.Storage.StorageSharedKeyCredential" />.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>
             </param>
             <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
             <param name="directoryPath">
             The path of the directory in the storage account to reference.
             </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>
             </param>
             <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
             <param name="directoryPath">
             The path of the directory in the storage account to reference.
             </param>
             <param name="options">
             Optional <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" /> that define the transport
             pipeline policies for authentication, retries, etc., that are
             applied to every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class.
            </summary>
            <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
            <param name="options">
            Optional <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class.
            </summary>
            <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class.
            </summary>
            <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
            <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Files.Shares.ShareClientOptions,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class.
            </summary>
            <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <param name="storageSharedKeyCredential">
            The shared key credential used to sign requests.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class.
            </summary>
            <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
            <param name="clientConfiguration">
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.WithSnapshot(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
             class with an identical <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> source but the specified
             <paramref name="snapshot" /> timestamp.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-share">
             Snapshot Share</see>.
             </summary>
             <remarks>
             Pass null or empty string to remove the snapshot returning a URL to the base directory.
             </remarks>
             <param name="snapshot">
             The snapshot identifier.
             </param>
             <returns>
             A new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> instance.
             </returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFileClient(System.String)">
            <summary>
            Creates a new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> object by appending
            <paramref name="fileName" /> to the end of <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.  The
            new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />.
            </summary>
            <param name="fileName">The name of the file.</param>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetSubdirectoryClient(System.String)">
            <summary>
            Creates a new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> object by appending
            <paramref name="subdirectoryName" /> to the end of <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> uses the same request policy
            pipeline as the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />.
            </summary>
            <param name="subdirectoryName">The name of the subdirectory.</param>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new directory
             at the specified <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new directory
             at the specified <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Boolean,System.Threading.CancellationToken,System.String)" /> operation creates a new directory
             at the specified <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new directory,
             if it does not already exists.  If the directory already exists, it is not
             modified.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new directory,
             if it does not already exists.  If the directory already exists, it is not
             modified.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExistsInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateIfNotExistsInternal(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Boolean,System.Threading.CancellationToken,System.String)" /> operation creates a new directory,
             if it does not already exists.  If the directory already exists, it is not
             modified.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set on the directory.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the newly
             created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Exists(System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> to see if the associated directory
            exists in the share on the storage account in the storage service.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the directory exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> to see if the associated directory
            exists in the share on the storage account in the storage service.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the directory exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExists(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExists(System.Threading.CancellationToken)" /> operation removes the specified
             empty directory, if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             True if the directory existed.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExistsAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExistsAsync(System.Threading.CancellationToken)" /> operation removes the specified
             empty directory, if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             True if the directory existed.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExistsInternal(System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteIfExistsInternal(System.Boolean,System.Threading.CancellationToken,System.String)" /> operation removes the specified
             empty directory, if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             True if the directory existed.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Delete(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Delete(System.Threading.CancellationToken)" /> operation removes the specified empty directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteAsync(System.Threading.CancellationToken)" /> operation removes the specified empty directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteInternal(System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteInternal(System.Boolean,System.Threading.CancellationToken,System.String)" /> operation removes the specified
             empty directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetProperties(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetProperties(System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata and system properties for the specified
             directory. The data returned does not include the directory's
             list of subdirectories or files.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-directory-properties">
             Get Directory Properties</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             directory and its properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetPropertiesAsync(System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata and system properties for the specified
             directory. The data returned does not include the directory's
             list of subdirectories or files.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-directory-properties">
             Get Directory Properties</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             directory and its properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeaders(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeaders(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation sets system
             properties on the directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-directory-properties">
             Set Directory Properties</see>.
             </summary>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set for the directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeadersAsync(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetHttpHeadersAsync(Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation sets system
             properties on the directory.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-directory-properties">Set Directory Properties</see>.
             </summary>
             <param name="smbProperties">
             Optional SMB properties to set for the directory.
             </param>
             <param name="filePermission">
             Optional file permission to set for the directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets one or more
             user-defined name-value pairs for the specified directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-directory-metadata">
             Set Directory Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets one or more
             user-defined name-value pairs for the specified directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-directory-metadata">
             Set Directory Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this directory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> if successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectories(Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions,System.Threading.CancellationToken)" />
             operation returns an async sequence of files and subdirectories in this directory.
             Enumerating the files and directories may make multiple requests
             to the service while fetching all the values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-directories-and-files">
             List Directories and Files</see>.
             </summary>
             <param name="options">
             Optional parameters.  <see cref="T:Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions" />.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing  the items in the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions,System.Threading.CancellationToken)" />
             operation returns an async collection of files and subdirectories in this directory.
             Enumerating the files and directories may make multiple requests
             to the service while fetching all the values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-directories-and-files">
             List Directories and Files</see>.
             </summary>
             <param name="options">
             Optional parameters.  <see cref="T:Azure.Storage.Files.Shares.Models.ShareDirectoryGetFilesAndDirectoriesOptions" />.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.AsyncPageable`1" /> describing the
             items in the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectories(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectories(System.String,System.Threading.CancellationToken)" />
             operation returns an async sequence of files and subdirectories in this directory.
             Enumerating the files and directories may make multiple requests
             to the service while fetching all the values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-directories-and-files">
             List Directories and Files</see>.
             </summary>
             <param name="prefix">
             Optional string that filters the results to return only
             files and directories whose name begins with the specified prefix.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing  the items in the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesAsync(System.String,System.Threading.CancellationToken)" />
             operation returns an async collection of files and subdirectories in this directory.
             Enumerating the files and directories may make multiple requests
             to the service while fetching all the values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-directories-and-files">
             List Directories and Files</see>.
             </summary>
             <param name="prefix">
             Optional string that filters the results to return only
             files and directories whose name begins with the specified prefix.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.AsyncPageable`1" /> describing the
             items in the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesInternal(System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareFileTraits},System.Nullable{System.Boolean},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetFilesAndDirectoriesInternal(System.String,System.String,System.Nullable{System.Int32},System.Nullable{Azure.Storage.Files.Shares.Models.ShareFileTraits},System.Nullable{System.Boolean},System.Boolean,System.Threading.CancellationToken)" /> operation returns a
             single segment of files and subdirectories in this directory, starting
             from the specified <paramref name="marker" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-directories-and-files">
             List Directories and Files</see>.
             </summary>
             <param name="marker">
             An optional string value that identifies the segment of the list
             of items to be returned with the next listing operation.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Files.Shares.Models.ListFilesAndDirectoriesSegmentResponse.NextMarker" />
             if the listing operation did not return all items remaining to be
             listed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker" /> parameter
             in a subsequent call to request the next segment of list items.
             </param>
             <param name="prefix">
             Optional string that filters the results to return only
             files and directories whose name begins with the specified prefix.
             </param>
             <param name="pageSizeHint">
             Gets or sets a value indicating the size of the page that should be
             requested.
             </param>
             <param name="traits">
             Specifies traits to include in the <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileItem" />.
             </param>
             <param name="includeExtendedInfo">
             If extended info should be included in the <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileItem" />.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing a
             segment of the items in the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation returns an async sequence
             of the open handles on a directory or a file.  Enumerating the
             handles may make multiple requests to the service while fetching
             all the values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-handles">
             List Handles</see>.
             </summary>
             <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing the handles in the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation returns an async
             sequence of the open handles on a directory or a file.
             Enumerating the handles may make multiple requests to the service
             while fetching all the values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-handles">
             List Handles</see>.
             </summary>
             <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.AsyncPageable`1" /> describing the
             handles on the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesInternal(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation returns a list of open
             handles on a directory or a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-handles">
             List Handles</see>.
             </summary>
             <param name="marker">
             An optional string value that identifies the segment of the list
             of items to be returned with the next listing operation.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Files.Shares.Models.StorageHandlesSegment.NextMarker" />
             if the listing operation did not return all items remaining to be
             listed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker" /> parameter
             in a subsequent call to request the next segment of list items.
             </param>
             <param name="maxResults">
             Optional. Specifies the maximum number of handles taken on files and/or directories to return.
             </param>
             <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing a
             segment of the handles in the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" /> operation closes a handle opened on a directory
             or a file at the service. It supports closing a single handle specified by <paramref name="handleId" />.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/force-close-handles">
             Force Close Handles</see>.
             </summary>
             <param name="handleId">
             Specifies the handle ID to be closed.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" /> operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" /> operation closes a handle opened on a directory
             or a file at the service. It supports closing a single handle specified by <paramref name="handleId" />.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/force-close-handles">
             Force Close Handles</see>.
             </summary>
             <param name="handleId">
             Specifies the handle ID to be closed.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" /> operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation closes all handles opened on a directory
             or a file at the service. It optionally supports recursively closing handles on subresources
             when the resource is a directory.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/force-close-handles">
             Force Close Handles</see>.
             </summary>
             <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandles(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation closes all handles opened on a directory
             or a file at the service. It optionally supports recursively closing handles on subresources
             when the resource is a directory.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> to force close handles that
             block operations, such as renaming a directory. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             FFor more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/force-close-handles">
             Force Close Handles</see>.
             </summary>
             <param name="recursive">
             Optional. A boolean value that specifies if the operation should also apply to the files and subdirectories of the directory specified.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.ForceCloseAllHandlesAsync(System.Nullable{System.Boolean},System.Threading.CancellationToken)" /> operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.Rename(System.String,Azure.Storage.Files.Shares.Models.ShareFileRenameOptions,System.Threading.CancellationToken)">
            <summary>
            Renames a directory.
            This API does not support renaming a directory from one share to another, or between storage accounts.
            </summary>
            <param name="destinationPath">
            The destination path to rename the directory to.
            </param>
            <param name="options">
            Optional parameters.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> pointed at the newly renamed directory.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.RenameAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRenameOptions,System.Threading.CancellationToken)">
            <summary>
            Renames a directory.
            This API does not support renaming a directory from one share to another, or between storage accounts.
            </summary>
            <param name="destinationPath">
            The destination path to rename the directory to.
            </param>
            <param name="options">
            Optional parameters.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> pointed at the newly renamed directory.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectory(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new
             subdirectory under this directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="subdirectoryName">The name of the subdirectory.</param>
             <param name="metadata">
             Optional custom metadata to set for this directory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the subdirectory.
             </param>
             <param name="filePermission">
             Optional file permission to set for the subdirectory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the
             newly created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateSubdirectoryAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" /> operation creates a new
             subdirectory under this directory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-directory">
             Create Directory</see>.
             </summary>
             <param name="subdirectoryName">The name of the subdirectory.</param>
             <param name="metadata">
             Optional custom metadata to set for the subdirectory.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the subdirectory.
             </param>
             <param name="filePermission">
             Optional file permission to set for the subdirectory.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the
             newly created directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectory(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectory(System.String,System.Threading.CancellationToken)" /> operation removes the
             specified empty subdirectory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="subdirectoryName">The name of the subdirectory.</param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectoryAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteSubdirectoryAsync(System.String,System.Threading.CancellationToken)" /> operation removes the
             specified empty subdirectory.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-directory">
             Delete Directory</see>.
             </summary>
             <param name="subdirectoryName">The name of the subdirectory.</param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if successful.
             </returns>
             <remarks>
             Note that the directory must be empty before it can be deleted.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFile(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-file">
             Create File</see>.
             </summary>
             <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
             <param name="fileName">The name of the file.</param>
             <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFile(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-file">
             Create File</see>.
             </summary>
             <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)" />.
             </remarks>
             <param name="fileName">The name of the file.</param>
             <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFileAsync(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-file">
             Create File</see>.
             </summary>
             <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
             <param name="fileName">The name of the file.</param>
             <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.CreateFileAsync(System.String,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-file">
             Create File</see>.
             </summary>
             <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
             <param name="fileName">The name of the file.</param>
             <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation immediately removes the file from the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="fileName">The name of the file.</param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,System.Threading.CancellationToken)" />
             operation immediately removes the file from the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="fileName">The name of the file.</param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFile(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation immediately removes the file from the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="fileName">The name of the file.</param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.DeleteFileAsync(System.String,System.Threading.CancellationToken)" />
             operation immediately removesthe file from the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="fileName">The name of the file.</param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will bse thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GenerateSasUri(Azure.Storage.Sas.ShareFileSasPermissions,System.DateTimeOffset)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GenerateSasUri(Azure.Storage.Sas.ShareFileSasPermissions,System.DateTimeOffset)" />
             returns a <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> that generates a Share Directory Service
             Shared Access Signature (SAS) Uri based on the Client properties and
             parameters passed. The SAS is signed by the shared key credential
             of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.CanGenerateSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a service SAS</see>.
             </summary>
             <param name="permissions">
             Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Storage.Sas.ShareFileSasPermissions" />.
             </param>
             <param name="expiresOn">
             Required. Specifies the time at which the SAS becomes invalid. This field
             must be omitted if it has been specified in an associated stored access policy.
             </param>
             <returns>
             A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> containing the SAS Uri.
             </returns>
             <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)" /> returns a
             <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> that generates a Share Directory Service
             Shared Access Signature (SAS) Uri based on the Client properties
             and and builder. The SAS is signed by the shared key credential
             of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.CanGenerateSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>.
             </summary>
             <param name="builder">
             Used to generate a Shared Access Signature (SAS)
             </param>
             <returns>
             A <see cref="P:Azure.Storage.Files.Shares.ShareDirectoryClient.Uri" /> containing the SAS Uri.
             </returns>
             <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetParentShareClientCore">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />.
            </summary>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareDirectoryClient.GetParentDirectoryClientCore">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />.
            </summary>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> instance.</returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.ShareFileClient">
            <summary>
            The <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> allows you to manipulate Azure Storage files.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareFileClient.Uri">
            <summary>
            Gets the directory's primary <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> endpoint.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareFileClient.ClientConfiguration">
            <summary>
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareFileClient.FileRestClient">
            <summary>
            FileRestClient.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareFileClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the file client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareFileClient.ShareName">
            <summary>
            Gets the share name corresponding to the file client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareFileClient.Name">
            <summary>
            Gets the name of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareFileClient.Path">
            <summary>
            Gets the path of the file.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareFileClient.CanGenerateSasUri">
            <summary>
            Determines whether the client is able to generate a SAS.
            If the client is authenticated with a <see cref="T:Azure.Storage.StorageSharedKeyCredential" />.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.String,System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, see
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>
             </param>
             <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
             <param name="filePath">
             The path of the file in the storage account to reference.
             </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.String,System.String,System.String,Azure.Storage.Files.Shares.ShareClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, see
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>
             </param>
             <param name="shareName">
             The name of the share in the storage account to reference.
             </param>
             <param name="filePath">
             The path of the file in the storage account to reference.
             </param>
             <param name="options">
             Optional <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" /> that define the transport
             pipeline policies for authentication, retries, etc., that are
             applied to every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> class.
            </summary>
            <param name="fileUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> referencing the file that includes the
            name of the account, the name of the share, and the path of the
            file.
            </param>
            <param name="options">
            Optional <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> class.
            </summary>
            <param name="fileUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> referencing the file that includes the
            name of the account, the name of the share, and the path of the
            file.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> class.
            </summary>
            <param name="fileUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> referencing the file that includes the
            name of the account, the name of the share, and the path of the
            file.
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
            <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
            <param name="options">
            Optional <see cref="T:Azure.Storage.Files.Shares.ShareClientOptions" /> that define the transport
            pipeline policies for authentication, retries, etc., that are
            applied to every request.
            </param>
            <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Files.Shares.ShareClientOptions,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />
            class.
            </summary>
            <param name="fileUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> referencing the file that includes the
            name of the account, the name of the share, and the path of the
            file.
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <param name="storageSharedKeyCredential">
            The shared key credential used to sign requests.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> class.
            </summary>
            <param name="fileUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> referencing the file that includes the
            name of the account, the name of the share, and the path of the file.
            </param>
            <param name="clientConfiguration">
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.WithSnapshot(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />
             class with an identical <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> source but the specified
             <paramref name="shareSnapshot" /> timestamp.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/snapshot-share">
             Snapshot Share</see>.
             </summary>
             <remarks>
             Pass null or empty string to remove the snapshot returning a URL to the base file.
             </remarks>
             <param name="shareSnapshot">
             The snapshot identifier.
             </param>
             <returns>
             A new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> instance.
             </returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Create(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-file">
             Create File</see>.
             </summary>
             <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
             <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Create(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-file">
             Create File</see>.
             </summary>
             <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
             <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.CreateAsync(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-file">
             Create File</see>.
             </summary>
             <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
             <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.CreateAsync(System.Int64,Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             Creates a new file or replaces an existing file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-file">
             Create File</see>.
             </summary>
             <remarks>
             This method only initializes the file.
             To add content, use <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />.
             </remarks>
             <param name="maxSize">
             Required. Specifies the maximum size for the file.
             </param>
             <param name="httpHeaders">
             Optional standard HTTP header properties that can be set for the file.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Exists(System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> to see if the associated file
            exists in the share on the storage account.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the file exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.Exists(System.Threading.CancellationToken)" /> operation can be called on a
            <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> to see if the associated file
            exists in the share on the storage account.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the file exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteIfExists(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteIfExists(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation immediately removes the file from the storage account,
             if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             True if the file existed.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteIfExistsAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteIfExists(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation immediately removes the file from the storage account,
             if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             True if the file existed.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopy(System.Uri,Azure.Storage.Files.Shares.Models.ShareFileCopyOptions,System.Threading.CancellationToken)">
             <summary>
             Copies a blob or file to a destination file within the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/copy-file">
             Copy File</see>.
             </summary>
             <param name="sourceUri">
             Required. Specifies the URL of the source file or blob.
             </param>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file copy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopy(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Nullable{Azure.Storage.Files.Shares.Models.PermissionCopyMode},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Copies a blob or file to a destination file within the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/copy-file">
             Copy File</see>.
             </summary>
             <param name="sourceUri">
             Required. Specifies the URL of the source file or blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB paramters to set on the target file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="filePermissionCopyMode">
             Specifies the option to copy file security descriptor from source file or
             to set it using the value which is defined by the header value of FilePermission
             or FilePermissionKey.
             </param>
             <param name="ignoreReadOnly">
             Optional boolean specifying to overwrite the target file if it already
             exists and has read-only attribute set.
             </param>
             <param name="setArchiveAttribute">
             Optional boolean Specifying to set archive attribute on a target file. True
             means archive attribute will be set on a target file despite attribute
             overrides or a source file state.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file copy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopy(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Copies a blob or file to a destination file within the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/copy-file">
             Copy File</see>.
             </summary>
             <param name="sourceUri">
             Required. Specifies the URL of the source file or blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file copy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopyAsync(System.Uri,Azure.Storage.Files.Shares.Models.ShareFileCopyOptions,System.Threading.CancellationToken)">
             <summary>
             Copies a blob or file to a destination file within the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/copy-file">
             Copy File</see>.
             </summary>
             <param name="sourceUri">
             Required. Specifies the URL of the source file or blob.
             </param>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file copy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopyAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Nullable{Azure.Storage.Files.Shares.Models.PermissionCopyMode},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Copies a blob or file to a destination file within the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/copy-file">
             Copy File</see>.
             </summary>
             <param name="sourceUri">
             Required. Specifies the URL of the source file or blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set on the target file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="filePermissionCopyMode">
             Specifies the option to copy file security descriptor from source file or
             to set it using the value which is defined by the header value of FilePermission
             or FilePermissionKey.
             </param>
             <param name="ignoreReadOnly">
             Optional boolean specifying to overwrite the target file if it already
             exists and has read-only attribute set.
             </param>
             <param name="setArchiveAttribute">
             Optional boolean Specifying to set archive attribute on a target file. True
             means archive attribute will be set on a target file despite attribute
             overrides or a source file state.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file copy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.StartCopyAsync(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Copies a blob or file to a destination file within the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/copy-file">
             Copy File</see>.
             </summary>
             <param name="sourceUri">
             Required. Specifies the URL of the source file or blob.
             </param>
             <param name="metadata">
             Optional custom metadata to set for the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file copy.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopy(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Attempts to cancel a pending copy that was previously started and leaves a destination file with zero length and full metadata.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/abort-copy-file">
             Abort Copy File</see>.
             </summary>
             <param name="copyId">
             String identifier for the copy operation.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully aborting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopy(System.String,System.Threading.CancellationToken)">
             <summary>
             Attempts to cancel a pending copy that was previously started and leaves a destination file with zero length and full metadata.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/abort-copy-file">
             Abort Copy File</see>.
             </summary>
             <param name="copyId">
             String identifier for the copy operation.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully aborting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopyAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Attempts to cancel a pending copy that was previously started and leaves a destination file with zero length and full metadata.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/abort-copy-file">
             Abort Copy File</see>.
             </summary>
             <param name="copyId">
             String identifier for the copy operation.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully aborting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.AbortCopyAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             Attempts to cancel a pending copy that was previously started and leaves a destination file with zero length and full metadata.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/abort-copy-file">
             Abort Copy File</see>.
             </summary>
             <param name="copyId">
             String identifier for the copy operation.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully aborting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Download(Azure.HttpRange,System.Boolean,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.Download(Azure.HttpRange,System.Boolean,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation reads or downloads a file from the system, including its metadata and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-file">
             Get File</see>.
             </summary>
             <param name="range">
             Optional. Only download the bytes of the file in the specified
             range.  If not provided, download the entire file.
             </param>
             <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException" />
             is thrown.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Download(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.Download(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" /> operation reads
             or downloads a file from the system, including its metadata and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-file">
             Get File</see>.
             </summary>
             <param name="range">
             Optional. Only download the bytes of the file in the specified
             range.  If not provided, download the entire file.
             </param>
             <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException" />
             is thrown.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.DownloadAsync(Azure.HttpRange,System.Boolean,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.DownloadAsync(Azure.HttpRange,System.Boolean,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation reads or downloads a file from the system, including its metadata and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-file">
             Get File</see>.
             </summary>
             <param name="range">
             Optional. Only download the bytes of the file in the specified
             range.  If not provided, download the entire file.
             </param>
             <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException" />
             is thrown.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.DownloadAsync(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.DownloadAsync(Azure.HttpRange,System.Boolean,System.Threading.CancellationToken)" /> operation reads
             or downloads a file from the system, including its metadata and properties.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-file">
             Get File</see>.
             </summary>
             <param name="range">
             Optional. Only download the bytes of the file in the specified
             range.  If not provided, download the entire file.
             </param>
             <param name="rangeGetContentHash">
             When set to true and specified together with the <paramref name="range" />,
             the service returns the MD5 hash for the range, as long as the
             range is less than or equal to 4 MB in size.  If this value is
             specified without <paramref name="range" /> or set to true when the
             range exceeds 4 MB in size, a <see cref="T:Azure.RequestFailedException" />
             is thrown.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             downloaded file.  <see cref="P:Azure.Storage.Files.Shares.Models.ShareFileDownloadInfo.Content" /> contains
             the file's data.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenRead(Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions,System.Threading.CancellationToken)">
             <summary>
             Opens a stream for reading from the file.  The stream will only download
             the file as the stream is read from.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             Returns a stream that will download the file as the stream
             is read from.
             </returns>
             <remarks>
             The stream returned might throw <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException" />
             if the file is concurrently modified and <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions" /> don't allow modification.
            
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if other failures occur.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenReadAsync(Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions,System.Threading.CancellationToken)">
             <summary>
             Opens a stream for reading from the file.  The stream will only download
             the file as the stream is read from.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             Returns a stream that will download the file as the stream
             is read from.
             </returns>
             <remarks>
             The stream returned might throw <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException" />
             if the file is concurrently modified and <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileOpenReadOptions" /> don't allow modification.
            
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if other failures occur.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenRead(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Opens a stream for reading from the file.  The stream will only download
             the file as the stream is read from.
             </summary>
             <param name="position">
             The position within the file to begin the stream.
             Defaults to the beginning of the file.
             </param>
             <param name="bufferSize">
             The buffer size to use when the stream downloads parts
             of the file.  Defaults to 1 MB.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions on
             the download of this file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             Returns a stream that will download the file as the stream
             is read from.
             </returns>
             <remarks>
             The stream returned might throw <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException" />
             if the file is concurrently modified.
            
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if other failures occur.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenRead(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             Opens a stream for reading from the file.  The stream will only download
             the file as the stream is read from.
             </summary>
             <param name="allowfileModifications">
             If true, you can continue streaming a blob even if it has been modified.
             </param>
             <param name="position">
             The position within the file to begin the stream.
             Defaults to the beginning of the file.
             </param>
             <param name="bufferSize">
             The buffer size to use when the stream downloads parts
             of the file.  Defaults to 1 MB.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             Returns a stream that will download the file as the stream
             is read from.
             </returns>
             <remarks>
             The stream returned might throw <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException" />
             if the file is concurrently modified.
            
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if other failures occur.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenReadAsync(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Opens a stream for reading from the file.  The stream will only download
             the file as the stream is read from.
             </summary>
             <param name="position">
             The position within the file to begin the stream.
             Defaults to the beginning of the file.
             </param>
             <param name="bufferSize">
             The buffer size to use when the stream downloads parts
             of the file.  Defaults to 1 MB.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions on
             the download of the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             Returns a stream that will download the file as the stream
             is read from.
             </returns>
             <remarks>
             The stream returned might throw <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException" />
             if the file is concurrently modified.
            
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if other failures occur.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenReadAsync(System.Boolean,System.Int64,System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             Opens a stream for reading from the file.  The stream will only download
             the file as the stream is read from.
             </summary>
             <param name="allowfileModifications">
             If true, you can continue streaming a blob even if it has been modified.
             </param>
             <param name="position">
             The position within the file to begin the stream.
             Defaults to the beginning of the file.
             </param>
             <param name="bufferSize">
             The buffer size to use when the stream downloads parts
             of the file.  Defaults to 1 MB.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             Returns a stream that will download the file as the stream
             is read from.
             </returns>
             <remarks>
             The stream returned might throw <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException" />
             if the file is concurrently modified.
            
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if other failures occur.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenReadInteral(System.Int64,System.Nullable{System.Int32},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Opens a stream for reading from the file.  The stream will only download
             the file as the stream is read from.
             </summary>
             <param name="position">
             The position within the file to begin the stream.
             Defaults to the beginning of the file.
             </param>
             <param name="bufferSize">
             The buffer size to use when the stream downloads parts
             of the file.  Defaults to 1 MB.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions on
             the download of the file.
             </param>
             <param name="allowModifications">
             Whether to allow modifications during the read.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             Returns a stream that will download the file as the stream
             is read from.
             </returns>
             <remarks>
             The stream returned might throw <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileModifiedException" />
             if the file is concurrently modified and allowModifications is false.
            
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if other failures occur.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Delete(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.Delete(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation immediately removes the file from the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Delete(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.Delete(System.Threading.CancellationToken)" /> operation immediately
             removes the file from the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation
             immediately removes the file from the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.DeleteAsync(System.Threading.CancellationToken)" /> operation
             immediately removes the file from the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-file2">
             Delete File</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetProperties(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetProperties(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation returns all user-defined metadata, standard HTTP properties,
             and system properties for the file. It does not return the content of the
             file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-file-properties">
             Get File Properties</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             file's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetProperties(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetProperties(System.Threading.CancellationToken)" /> operation
             returns all user-defined metadata, standard HTTP properties,
             and system properties for the file. It does not return the
             content of the file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-file-properties">
             Get File Properties</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             file's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation returns all user-defined metadata, standard HTTP properties, and system
             properties for the file. It does not return the content of the file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-file-properties">
             Get File Properties</see>.
             </summary>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             file's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetPropertiesAsync(System.Threading.CancellationToken)" /> operation returns all
             user-defined metadata, standard HTTP properties, and system
             properties for the file. It does not return the content of the
             file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-file-properties">
             Get File Properties</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             file's properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeaders(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeaders(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation sets system properties on the file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-properties">
             Set File Properties</see>.
             </summary>
             <param name="newSize">
             Optional. Resizes a file to the specified size.
             If the specified byte value is less than the current size
             of the file, then all ranges above the specified byte value
             are cleared.
             </param>
             <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeaders(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeaders(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
             operation sets system
             properties on the file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-properties">
             Set File Properties</see>.
             </summary>
             <param name="newSize">
             Optional. Resizes a file to the specified size.
             If the specified byte value is less than the current size
             of the file, then all ranges above the specified byte value
             are cleared.
             </param>
             <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>s
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation sets system properties on the file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-properties">
             Set File Properties</see>.
             </summary>
             <param name="newSize">
             Optional. Resizes a file to the specified size.
             If the specified byte value is less than the current size
             of the file, then all ranges above the specified byte value
             are cleared.
             </param>
             <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.SetHttpHeadersAsync(System.Nullable{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileHttpHeaders,Azure.Storage.Files.Shares.Models.FileSmbProperties,System.String,System.Threading.CancellationToken)" />
             operation sets system properties on the file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-properties">
             Set File Properties</see>.
             </summary>
             <param name="newSize">
             Optional. Resizes a file to the specified size.
             If the specified byte value is less than the current size
             of the file, then all ranges above the specified byte value
             are cleared.
             </param>
             <param name="httpHeaders">
             Optional. The standard HTTP header system properties to set.  If not specified, existing values will be cleared.
             </param>
             <param name="smbProperties">
             Optional SMB properties to set for the file.
             </param>
             <param name="filePermission">
             Optional file permission to set for the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified file as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-metadata">
             Set File Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this file.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified file as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-metadata">
             Set File Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified file as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-metadata">
             Set File Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this file.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" /> operation sets user-defined
             metadata for the specified file as one or more name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-metadata">
             Set File Metadata</see>.
             </summary>
             <param name="metadata">
             Custom metadata to set for this file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the updated
             file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.ClearRange(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ClearRange(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation clears the <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="range">
             Specifies the range of bytes to be cleared. Both the start and end of the range must be specified.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.ClearRangeAsync(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ClearRangeAsync(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation clears the <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="range">
             Specifies the range of bytes to be cleared. Both the start and end of the range must be specified.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,Azure.Storage.Files.Shares.Models.ShareFileUploadRangeOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation writes <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,Azure.Storage.Files.Shares.Models.ShareFileUploadRangeOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation writes <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation writes <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the range content.
            
             This hash is used to verify the integrity of the range during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the file.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException" />.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation writes <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the range content.
            
             This hash is used to verify the integrity of the range during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the file.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException" />.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},System.Threading.CancellationToken)" />
             operation writes <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="writeType">Required. Specifies whether to update or clear the range.
             </param>
             <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the range content.  Must not be used when <paramref name="writeType" /> is set to <see cref="F:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType.Clear" />.
            
             This hash is used to verify the integrity of the range during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the file.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException" />.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeAsync(Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRange(Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType,Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},System.Threading.CancellationToken)" />
             operation writes <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="writeType">Required. Specifies whether to update or clear the range.
             </param>
             <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
             <param name="transactionalContentHash">
             Optional MD5 hash of the range content.  Must not be used when <paramref name="writeType" /> is set to <see cref="F:Azure.Storage.Files.Shares.Models.ShareFileRangeWriteType.Clear" />.
            
             This hash is used to verify the integrity of the range during transport. When this hash
             is specified, the storage service compares the hash of the content
             that has arrived with this value.  Note that this MD5 hash is not
             stored with the file.  If the two hashes do not match, the
             operation will fail with a <see cref="T:Azure.RequestFailedException" />.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeInternal(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Nullable{Azure.Storage.Files.Shares.Models.FileLastWrittenMode},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeInternal(Azure.HttpRange,System.IO.Stream,System.Byte[],System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Nullable{Azure.Storage.Files.Shares.Models.FileLastWrittenMode},System.Boolean,System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a <paramref name="range" /> of a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="range">
             Specifies the range of bytes to be written. Both the start and end of the range must be specified.
             </param>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the range to upload.
             </param>
             <param name="rangeContentMD5">
             Transactional range content MD5 hash.
             </param>
             <param name="progressHandler">
             Progress handler for upload operation.
             </param>
             <param name="conditions">
             Request conditions for upload range.
             </param>
             <param name="fileLastWrittenMode">
             Optional.  Specifies if the file last write time should be set to the current time,
             or the last write time currently associated with the file should be preserved.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions,System.Threading.CancellationToken)" />
            operation writes a range from an Azure File to another Azure file. This API is supported only for version 2019-02-02 and higher.
            </summary>
            <param name="sourceUri">
            Required. Specifies the URL of the source file, up to 2 KB in length.
            If source is an Azure blob or Azure file, it must either be public or must be authenticated via a
            shared access signature. If the source is public, no authentication is required to perform the operation.
            </param>
            <param name="range">
            Specifies the range of bytes to be written. Both the start and end of the range must be specified.
            </param>
            <param name="sourceRange">
            Specifies the range of bytes to be written from. Both the start and end of the range must be specified.
            </param>
            <param name="options">
            Optional parameters.  <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions" />.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> describing the
            state of the file.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
            operation writes a range from an Azure File to another Azure file. This API is supported only for version 2019-02-02 and higher.
            </summary>
            <param name="sourceUri">
            Required. Specifies the URL of the source file, up to 2 KB in length.
            If source is an Azure blob or Azure file, it must either be public or must be authenticated via a
            shared access signature. If the source is public, no authentication is required to perform the operation.
            </param>
            <param name="range">
            Specifies the range of bytes to be written. Both the start and end of the range must be specified.
            </param>
            <param name="sourceRange">
            Specifies the range of bytes to be written from. Both the start and end of the range must be specified.
            </param>
            <param name="options">
            Optional parameters.  <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileUploadRangeFromUriOptions" />.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> describing the
            state of the file.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
            operation writes a range from an Azure File to another Azure file. This API is supported only for version 2019-02-02 and higher.
            </summary>
            <param name="sourceUri">
            Required. Specifies the URL of the source file, up to 2 KB in length.
            If source is an Azure blob or Azure file, it must either be public or must be authenticated via a
            shared access signature. If the source is public, no authentication is required to perform the operation.
            </param>
            <param name="range">
            Specifies the range of bytes to be written. Both the start and end of the range must be specified.
            </param>
            <param name="sourceRange">
            Specifies the range of bytes to be written from. Both the start and end of the range must be specified.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
            on creating the file.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> describing the
            state of the file.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUri(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" />
            operation writes a range from an Azure File to another Azure file. This API is supported only for version 2019-02-02 and higher.
            </summary>
            <param name="sourceUri">
            Required. Specifies the URL of the source file, up to 2 KB in length.
            If source is an Azure blob or Azure file, it must either be public or must be authenticated via a
            shared access signature. If the source is public, no authentication is required to perform the operation.
            </param>
            <param name="range">
            Specifies the range of bytes to be written. Both the start and end of the range must be specified.
            </param>
            <param name="sourceRange">
            Specifies the range of bytes to be written from. Both the start and end of the range must be specified.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> describing the
            state of the file.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
            operation writes a range from an Azure File to another Azure file. This API is supported only for version 2019-02-02 and higher.
            </summary>
            <param name="sourceUri">
            Required. Specifies the URL of the source file, up to 2 KB in length.
            If source is an Azure blob or Azure file, it must either be public or must be authenticated via a
            shared access signature. If the source is public, no authentication is required to perform the operation.
            </param>
            <param name="range">
            Specifies the range of bytes to be written. Both the start and end of the range must be specified.
            </param>
            <param name="sourceRange">
            Specifies the range of bytes to be written from. Both the start and end of the range must be specified.
            </param>
            <param name="conditions">
            Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
            on creating the file.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> describing the
            state of the file.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadRangeFromUriAsync(System.Uri,Azure.HttpRange,Azure.HttpRange,System.Threading.CancellationToken)" />
            operation writes a range from an Azure File to another Azure file. This API is supported only for version 2019-02-02 and higher.
            </summary>
            <param name="sourceUri">
            Required. Specifies the URL of the source file, up to 2 KB in length.
            If source is an Azure blob or Azure file, it must either be public or must be authenticated via a
            shared access signature. If the source is public, no authentication is required to perform the operation.
            </param>
            <param name="range">
            Specifies the range of bytes to be written. Both the start and end of the range must be specified.
            </param>
            <param name="sourceRange">
            Specifies the range of bytes to be written from. Both the start and end of the range must be specified.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> describing the
            state of the file.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Upload(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.Upload(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation writes <paramref name="content" /> to a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the file to upload.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Upload(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.Upload(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" />
             operation writes <paramref name="content" /> to a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the file to upload.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the file to upload.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadAsync(System.IO.Stream,System.IProgress{System.Int64},System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content of the file to upload.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.UploadInternal(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Int32,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.UploadInternal(System.IO.Stream,System.IProgress{System.Int64},Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Int32,System.Boolean,System.Threading.CancellationToken)" /> operation writes
             <paramref name="content" /> to a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-range">
             Put Range</see>.
             </summary>
             <param name="content">
             A <see cref="T:System.IO.Stream" /> containing the content to upload.
             </param>
             <param name="progressHandler">
             Optional <see cref="T:System.IProgress`1" /> to provide
             progress updates about data transfers.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="singleRangeThreshold">
             The maximum size stream that we'll upload as a single range.  The
             default value is 4MB.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate notifications
             that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             state of the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeList(Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions,System.Threading.CancellationToken)">
             <summary>
             Returns the list of valid ranges for a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-ranges">
             List Ranges</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListAsync(Azure.Storage.Files.Shares.Models.ShareFileGetRangeListOptions,System.Threading.CancellationToken)">
             <summary>
             Returns the list of valid ranges for a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-ranges">
             List Ranges</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeList(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Returns the list of valid ranges for a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-ranges">
             List Ranges</see>.
             </summary>
             <param name="range">
             Optional. Specifies the range of bytes over which to list ranges, inclusively.
             If omitted, then all ranges for the file are returned.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeList(Azure.HttpRange,System.Threading.CancellationToken)">
             <summary>
             Returns the list of valid ranges for a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-ranges">
             List Ranges</see>.
             </summary>
             <param name="range">
             Optional. Specifies the range of bytes over which to list ranges, inclusively.
             If omitted, then all ranges for the file are returned.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListAsync(Azure.HttpRange,Azure.Storage.Files.Shares.Models.ShareFileRequestConditions,System.Threading.CancellationToken)">
             <summary>
             Returns the list of valid ranges for a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-ranges">
             List Ranges</see>.
             </summary>
             <param name="range">
             Optional. Specifies the range of bytes over which to list ranges, inclusively.
             If omitted, then all ranges for the file are returned.
             </param>
             <param name="conditions">
             Optional <see cref="T:Azure.Storage.Files.Shares.Models.ShareFileRequestConditions" /> to add conditions
             on creating the file.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListAsync(Azure.HttpRange,System.Threading.CancellationToken)">
             <summary>
             Returns the list of valid ranges for a file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-ranges">
             List Ranges</see>.
             </summary>
             <param name="range">
             Optional. Specifies the range of bytes over which to list ranges, inclusively.
             If omitted, then all ranges for the file are returned.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListDiff(Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions,System.Threading.CancellationToken)">
             <summary>
             Returns the list of ranges that have changed in the file since previousSnapshot
             was taken.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-ranges">
             List Ranges</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetRangeListDiffAsync(Azure.Storage.Files.Shares.Models.ShareFileGetRangeListDiffOptions,System.Threading.CancellationToken)">
             <summary>
             Returns the list of ranges that have changed in the file since previousSnapshot
             was taken.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-ranges">
             List Ranges</see>.
             </summary>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the
             valid ranges for this file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandles(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandles(System.Threading.CancellationToken)" /> operation returns an async sequence
             of the open handles on a directory or a file.  Enumerating the
             handles may make multiple requests to the service while fetching
             all the values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-handles">
             List Handles</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing the handles in the directory.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesAsync(System.Threading.CancellationToken)" /> operation returns an async
             sequence of the open handles on a directory or a file.
             Enumerating the handles may make multiple requests to the service
             while fetching all the values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-handles">
             List Handles</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.AsyncPageable`1" /> describing the
             handles on the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesInternal(System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesInternal(System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)" /> operation returns a list of open
             handles on the file.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-handles">
             List Handles</see>.
             </summary>
             <remarks>
             </remarks>
             <param name="marker">
             An optional string value that identifies the segment of the list
             of items to be returned with the next listing operation.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Files.Shares.Models.StorageHandlesSegment.NextMarker" />
             if the listing operation did not return all items remaining to be
             listed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker" /> parameter
             in a subsequent call to request the next segment of list items.
             </param>
             <param name="maxResults">
             Optional. Specifies the maximum number of handles to return.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing a
             segment of the handles on the file.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" /> operation closes a handle opened on a file
             at the service. It supports closing a single handle specified by <paramref name="handleId" />.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesAsync(System.Threading.CancellationToken)" /> to force close handles that
             block operations. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/force-close-handles">
             Force Close Handles</see>.
             </summary>
             <param name="handleId">
             Specifies the handle ID to be closed.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandle(System.String,System.Threading.CancellationToken)" /> operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" /> operation closes a handle opened on a file
             at the service. It supports closing a single handle specified by <paramref name="handleId" />.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesAsync(System.Threading.CancellationToken)" /> to force close handles that
             block operations. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/force-close-handles">
             Force Close Handles</see>.
             </summary>
             <param name="handleId">
             Specifies the handle ID to be closed.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseHandleAsync(System.String,System.Threading.CancellationToken)" /> operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandles(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandles(System.Threading.CancellationToken)" /> operation closes all handles opened on a file
             at the service.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesAsync(System.Threading.CancellationToken)" /> to force close handles that
             block operations. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/force-close-handles">
             Force Close Handles</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandles(System.Threading.CancellationToken)" /> operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandlesAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandlesAsync(System.Threading.CancellationToken)" /> operation closes all handles opened on a file
             at the service.
            
             This API is intended to be used alongside <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GetHandlesAsync(System.Threading.CancellationToken)" /> to force close handles that
             block operations. These handles may have leaked or been lost track of by
             SMB clients. The API has client-side impact on the handle being closed, including user visible
             errors due to failed attempts to read or write files. This API is not intended for use as a replacement
             or alternative for SMB close.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/force-close-handles">
             Force Close Handles</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Files.Shares.Models.CloseHandlesResult" /> describing the status of the
             <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.ForceCloseAllHandlesAsync(System.Threading.CancellationToken)" /> operation.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.Rename(System.String,Azure.Storage.Files.Shares.Models.ShareFileRenameOptions,System.Threading.CancellationToken)">
            <summary>
            Renames a file.
            This API does not support renaming a file from one share to another, or between storage accounts.
            </summary>
            <param name="destinationPath">
            The destination path to rename the file to.
            </param>
            <param name="options">
            Optional parameters.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> pointed at the newly renamed File.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.RenameAsync(System.String,Azure.Storage.Files.Shares.Models.ShareFileRenameOptions,System.Threading.CancellationToken)">
            <summary>
            Renames a file.
            This API does not support renaming a file from one share to another, or between storage accounts.
            </summary>
            <param name="destinationPath">
            The destination path to rename the file to.
            </param>
            <param name="options">
            Optional parameters.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> pointed at the newly renamed File.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenWrite(System.Boolean,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a stream for writing to the file.
            </summary>
            <param name="overwrite">
            Whether an existing blob should be deleted and recreated.
            </param>
            <param name="position">
            The offset within the blob to begin writing from.
            </param>
            <param name="options">
            Optional parameters.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A stream to write to the file.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.OpenWriteAsync(System.Boolean,System.Int64,Azure.Storage.Files.Shares.Models.ShareFileOpenWriteOptions,System.Threading.CancellationToken)">
            <summary>
            Opens a stream for writing to the file.
            </summary>
            <param name="overwrite">
            Whether an existing blob should be deleted and recreated.
            </param>
            <param name="position">
            The offset within the blob to begin writing from.
            </param>
            <param name="options">
            Optional parameters.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A stream to write to the file.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GenerateSasUri(Azure.Storage.Sas.ShareFileSasPermissions,System.DateTimeOffset)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GenerateSasUri(Azure.Storage.Sas.ShareFileSasPermissions,System.DateTimeOffset)" />
             returns a <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> that generates a Share File Service
             Shared Access Signature (SAS) Uri based on the Client properties and
             parameters passed. The SAS is signed by the shared key credential
             of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.CanGenerateSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a service SAS</see>.
             </summary>
             <param name="permissions">
             Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Storage.Sas.ShareFileSasPermissions" />.
             </param>
             <param name="expiresOn">
             Required. Specifies the time at which the SAS becomes invalid. This field
             must be omitted if it has been specified in an associated stored access policy.
             </param>
             <returns>
             A <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> containing the SAS Uri.
             </returns>
             <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareFileClient.GenerateSasUri(Azure.Storage.Sas.ShareSasBuilder)" /> returns a
             <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.Uri" /> that generates a Share File Service
             Shared Access Signature (SAS) Uri based on the Client properties
             and and builder. The SAS is signed by the shared key credential
             of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.Shares.ShareFileClient.CanGenerateSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>.
             </summary>
             <param name="builder">
             Used to generate a Shared Access Signature (SAS)
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Sas.ShareSasBuilder" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetParentShareClientCore">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />.
            </summary>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> instance.</returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareFileClient.GetParentShareDirectoryClientCore">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" /> that pointing to this <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />'s parent container.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            uses the same request policy pipeline as the
            <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" />.
            </summary>
            <returns>A new <see cref="T:Azure.Storage.Files.Shares.ShareFileClient" /> instance.</returns>
        </member>
        <member name="T:Azure.Storage.Files.Shares.ShareServiceClient">
            <summary>
            The <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> allows you to manipulate Azure
            Storage service resources and shares. The storage account provides
            the top-level namespace for the File service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri">
            <summary>
            Gets the file service's primary <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> endpoint.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareServiceClient.ClientConfiguration">
            <summary>
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareServiceClient.ServiceRestClient">
            <summary>
            ServiceRestClient.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareServiceClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the file service client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareServiceClient.CanGenerateAccountSasUri">
            <summary>
            Determines whether the client is able to generate a SAS.
            If the client is authenticated with a <see cref="T:Azure.Storage.StorageSharedKeyCredential" />.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.String,Azure.Storage.Files.Shares.ShareClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information,
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> referencing the file service.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> referencing the file service.
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.AzureSasCredential,Azure.Storage.Files.Shares.ShareClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> referencing the file service.
            Must not contain shared access signature, which should be passed in the second parameter.
            </param>
            <param name="credential">
            The shared access signature credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <remarks>
            This constructor should only be used when shared access signature needs to be updated during lifespan of this client.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.Storage.Files.Shares.ShareClientConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareDirectoryClient" />
            class.
            </summary>
            <param name="directoryUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> referencing the directory that includes the
            name of the account, the name of the share, and the path of the
            directory.
            </param>
            <param name="clientConfiguration">
            <see cref="T:Azure.Storage.Files.Shares.ShareClientConfiguration" />
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Files.Shares.ShareClientOptions,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> referencing the file service.
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <param name="storageSharedKeyCredential">
            The shared key credential used to sign requests.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.GetShareClient(System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> object by appending
            <paramref name="shareName" /> to the end of <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" />.
            The new <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> uses the same request
            policy pipeline as the <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" />.
            </summary>
            <param name="shareName">
            The name of the share to reference.
            </param>
            <returns>
            A <see cref="T:Azure.Storage.Files.Shares.ShareClient" /> for the desired share.
            </returns>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.GetShares(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GetShares(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" /> operation returns an async sequence
             of the shares in the storage account.  Enumerating the shares may
             make multiple requests to the service while fetching all the
             values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-shares">
             List Shares</see>.
             </summary>
             <param name="traits">
             Specifies traits to include in the <see cref="T:Azure.Storage.Files.Shares.Models.ShareItem" />s.
             </param>
             <param name="states">
             Specifies states to include when listing shares.
             </param>
             <param name="prefix">
             String that filters the results to return only shares whose name
             begins with the specified prefix.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Azure.Response`1" />
             describing the shares in the storage account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesAsync(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesAsync(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" /> operation returns an async collection
             of the shares in the storage account.  Enumerating the shares may
             make multiple requests to the service while fetching all the
             values.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-shares">
             List Shares</see>.
             </summary>
             <param name="traits">
             Specifies traits to include in the <see cref="T:Azure.Storage.Files.Shares.Models.ShareItem" />s.
             </param>
             <param name="states">
             Specifies states to include when listing shares.
             </param>
             <param name="prefix">
             String that filters the results to return only shares whose name
             begins with the specified prefix.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.AsyncPageable`1" /> describing the shares in
             the storage account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesInternal(System.String,Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesInternal(System.String,Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)" /> operation returns a
             single segment of shares in the storage account, starting
             from the specified <paramref name="marker" />.  Use an empty
             <paramref name="marker" /> to start enumeration from the beginning
             and the <see cref="P:Azure.Storage.Files.Shares.Models.ListSharesResponse.NextMarker" /> if it's not
             empty to make subsequent calls to <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GetSharesAsync(Azure.Storage.Files.Shares.Models.ShareTraits,Azure.Storage.Files.Shares.Models.ShareStates,System.String,System.Threading.CancellationToken)" />
             to continue enumerating the shares segment by segment.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-shares">
             List Shares</see>.
             </summary>
             <param name="marker">
             An optional string value that identifies the segment of the list
             of shares to be returned with the next listing operation.  The
             operation returns a non-empty <see cref="P:Azure.Storage.Files.Shares.Models.ListSharesResponse.NextMarker" />
             if the listing operation did not return all shares remaining
             to be listed with the current segment.  The NextMarker value can
             be used as the value for the <paramref name="marker" /> parameter
             in a subsequent call to request the next segment of list items.
             </param>
             <param name="traits">
             Specifies traits to include in the <see cref="T:Azure.Storage.Files.Shares.Models.ShareItem" />s.
             </param>
             <param name="states">
             Specifies states to include when listing shares.
             </param>
             <param name="prefix">
             String that filters the results to return only shares whose name
             begins with the specified prefix.
             </param>
             <param name="pageSizeHint">
             Gets or sets a value indicating the size of the page that should be
             requested.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing a
             segment of the shares in the storage account.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.GetProperties(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GetProperties(System.Threading.CancellationToken)" /> operation gets the properties
             of a storage account’s file service, including properties for
             Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties">
             Get File Service Properties</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing
             the service properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)" /> operation gets the properties
             of a storage account’s file service, including properties for
             Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties">
             Get File Service Properties</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> describing
             the service properties.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.SetProperties(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.SetProperties(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Threading.CancellationToken)" /> operation sets properties for
             a storage account’s File service endpoint, including properties
             for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules
             and soft delete settings.  You can also use this operation to set
             the default request version for all incoming requests to the File
             service that do not have a version specified.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-service-properties">
             Set File Service Properties</see>.
             </summary>
             <param name="properties">The file service properties.</param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if the operation was successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.SetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.SetPropertiesAsync(Azure.Storage.Files.Shares.Models.ShareServiceProperties,System.Threading.CancellationToken)" /> operation sets properties for
             a storage account’s File service endpoint, including properties
             for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules
             and soft delete settings.  You can also use this operation to set
             the default request version for all incoming requests to the File
             service that do not have a version specified.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-file-service-properties">
             Set File Service Properties</see>.
             </summary>
             <param name="properties">The file service properties.</param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> if the operation was successful.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShare(System.String,Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShare(System.String,Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" />
             operation creates a new share under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="shareName">
             The name of the share to create.
             </param>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShareAsync(System.String,Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShare(System.String,Azure.Storage.Files.Shares.Models.ShareCreateOptions,System.Threading.CancellationToken)" />
             operation creates a new share under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="shareName">
             The name of the share to create.
             </param>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShare(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShare(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
             operation creates a new share under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="shareName">
             The name of the share to create.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="quotaInGB">
             Optional. Maximum size of the share in bytes.  If unspecified, use the service's default value.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShareAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.CreateShareAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
             operation creates a new share under the specified account. If a share with the same name
             already exists, the operation fails.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-share">
             Create Share</see>.
             </summary>
             <param name="shareName">
             The name of the share to create.
             </param>
             <param name="metadata">
             Optional custom metadata to set for this share.
             </param>
             <param name="quotaInGB">
             Optional. Maximum size of the share in bytes.  If unspecified, use the service's default value.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> referencing the newly
             created share.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShare(System.String,Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             Currently, this method will always delete snapshots.
             There's no way to specify a separate value for x-ms-delete-snapshots.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="shareName">
             The name of the share to delete.
             </param>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShareAsync(System.String,Azure.Storage.Files.Shares.Models.ShareDeleteOptions,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             Currently, this method will always delete snapshots.  There's no way to specify a separate value for x-ms-delete-snapshots.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="shareName">
             The name of the share to delete.
             </param>
             <param name="options">
             Optional parameters.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShare(System.String,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             Currently, this method will always delete snapshots.
             There's no way to specify a separate value for x-ms-delete-snapshots.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="shareName">
             The name of the share to delete.
             </param>
             <param name="includeSnapshots">
             A value indicating whether to delete a share's snapshots in addition
             to the share itself.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.DeleteShareAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Marks the specified share or share snapshot for deletion.
             The share or share snapshot and any files contained within it are later deleted during garbage collection
             which could take several minutes.
            
             Currently, this method will always delete snapshots.  There's no way to specify a separate value for x-ms-delete-snapshots.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-share">
             Delete Share</see>.
             </summary>
             <param name="shareName">
             The name of the share to delete.
             </param>
             <param name="includeSnapshots">
             A value indicating whether to delete a share's snapshots in addition
             to the share itself.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response" /> on successfully marking for deletion.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.UndeleteShare(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restores a previously deleted Share.
            This API is only functional is Share Soft Delete is enabled
            for the storage account associated with the share.
            </summary>
            <param name="deletedShareName">
            The name of the share to restore.
            </param>
            <param name="deletedShareVersion">
            The version of the share to restore.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> pointed at the restored Share.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.UndeleteShareAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restores a previously deleted Share.
            This API is only functional is Share Soft Delete is enabled
            for the storage account associated with the share.
            </summary>
            <param name="deletedShareName">
            The name of the share to restore.
            </param>
            <param name="deletedShareVersion">
            The version of the share to restore.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            A <see cref="T:Azure.Response`1" /> pointed at the restored Share.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs
            </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasResourceTypes)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasResourceTypes)" />
             returns a <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> that generates a Share Account
             Shared Access Signature (SAS) based on the Client properties
             and parameters passed. The SAS is signed by the
             shared key credential of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.CanGenerateAccountSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas">
             Constructing an Account SAS</see>.
             </summary>
             <param name="permissions">
             Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Storage.Sas.AccountSasPermissions" />.
             </param>
             <param name="expiresOn">
             Required. The time at which the shared access signature becomes invalid.
             </param>
             <param name="resourceTypes">
             Specifies the resource types associated with the shared access signature.
             The user is restricted to operations on the specified resources.
             See <see cref="T:Azure.Storage.Sas.AccountSasResourceTypes" />.
             </param>
             <returns>
             A <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> containing the SAS Uri.
             </returns>
             <remarks>
             A <see cref="T:System.Exception" /> will be thrown if a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasBuilder)">
             <summary>
             The <see cref="M:Azure.Storage.Files.Shares.ShareServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasBuilder)" />
             returns a <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.Uri" /> that generates a Share Account
             Shared Access Signature (SAS) based on the Client properties
             and builder passed. The SAS is signed by the
             shared key credential of the client.
            
             To check if the client is able to sign a Service Sas see
             <see cref="P:Azure.Storage.Files.Shares.ShareServiceClient.CanGenerateAccountSasUri" />.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas">
             Constructing an Account SAS</see>.
             </summary>
             <param name="builder">
             Used to generate a Shared Access Signature (SAS)
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Sas.ShareSasBuilder" /> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Files.Shares.ShareUriBuilder">
             <summary>
             The <see cref="T:Azure.Storage.Files.Shares.ShareUriBuilder" /> class provides a convenient way to
             modify the contents of a <see cref="T:System.Uri" /> instance to point to
             different Azure Storage resources like an account, share, or file.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata">
             Naming and Referencing Shares, Directories, Files, and Metadata</see>.
             </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.Scheme">
            <summary>
            Gets or sets the scheme name of the URI.
            Example: "https"
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.Host">
             <summary>
             Gets or sets the Domain Name System (DNS) host name or IP address
             of a server.
            
             Example: "account.file.core.windows.net"
             </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.Port">
            <summary>
            Gets or sets the port number of the URI.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.AccountName">
            <summary>
            Gets or sets the Azure Storage account name.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.ShareName">
             <summary>
             Gets or sets the name of a file storage share.  The value defaults
             to <see cref="F:System.String.Empty" /> if not present in the
             <see cref="T:System.Uri" />.
            
             </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.DirectoryOrFilePath">
            <summary>
            Gets or sets the path of the directory or file.  The value defaults
            to <see cref="F:System.String.Empty" /> if not present in the
            <see cref="T:System.Uri" />.
            Example: "mydirectory/myfile"
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.Snapshot">
            <summary>
            Gets or sets the name of a file snapshot.  The value defaults to
            <see cref="F:System.String.Empty" /> if not present in the <see cref="T:System.Uri" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.Sas">
            <summary>
            Gets or sets the Shared Access Signature query parameters, or null
            if not present in the <see cref="T:System.Uri" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.LastDirectoryOrFileName">
            <summary>
            Get the last directory or file name from the <see cref="P:Azure.Storage.Files.Shares.ShareUriBuilder.DirectoryOrFilePath" />, or null if
            not present in the <see cref="T:System.Uri" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Files.Shares.ShareUriBuilder.Query">
            <summary>
            Gets or sets any query information included in the URI that's not
            relevant to addressing Azure storage resources.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareUriBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Files.Shares.ShareUriBuilder" />
            class with the specified <see cref="T:System.Uri" />.
            </summary>
            <param name="uri">
            The <see cref="T:System.Uri" /> to a storage resource.
            </param>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareUriBuilder.ToUri">
            <summary>
            Returns the <see cref="T:System.Uri" /> constructed from the
            <see cref="T:Azure.Storage.Files.Shares.ShareUriBuilder" />'s fields. The <see cref="P:System.Uri.Query" />
            property contains the SAS and additional query parameters.
            </summary>
        </member>
        <member name="M:Azure.Storage.Files.Shares.ShareUriBuilder.ToString">
            <summary>
            Returns the display string for the specified
            <see cref="T:Azure.Storage.Files.Shares.ShareUriBuilder" /> instance.
            </summary>
            <returns>
            The display string for the specified <see cref="T:Azure.Storage.Files.Shares.ShareUriBuilder" />
            instance.
            </returns>
        </member>
        <member name="T:Azure.Storage.Sas.ShareAccountSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.ShareAccountSasPermissions" /> contains the list of
            permissions that can be set for a file account's access policy.  Use
            <see cref="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareAccountSasPermissions)" />
            to set the permissions on the <see cref="T:Azure.Storage.Sas.ShareSasBuilder" />.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareAccountSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareAccountSasPermissions.Add">
            <summary>
            Indicates that Add is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareAccountSasPermissions.Create">
            <summary>
            Indicates that Create is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareAccountSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareAccountSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareAccountSasPermissions.List">
            <summary>
            Indicates that List is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareAccountSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.ShareFileSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.ShareFileSasPermissions" /> contains the list of
            permissions that can be set for a file's access policy.  Use
            <see cref="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareFileSasPermissions)" />
            to set the permissions on the <see cref="T:Azure.Storage.Sas.ShareSasBuilder" />.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareFileSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareFileSasPermissions.Create">
            <summary>
            Indicates that Create is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareFileSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareFileSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareFileSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.ShareSasBuilder">
             <summary>
             <see cref="T:Azure.Storage.Sas.ShareSasBuilder" /> is used to generate a Shared Access
             Signature (SAS) for an Azure Storage share, directory, or file.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Creating a Service SAS</see>.
             </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.Version">
            <summary>
            The storage service version to use to authenticate requests made
            with this shared access signature, and the service version to use
            when handling requests made with this shared access signature.
            </summary>
            <remarks>
            This property has been deprecated and we will always use the latest
            storage SAS version of the Storage service supported. This change
            does not have any impact on how your application generates or makes
            use of SAS tokens.
            </remarks>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.Protocol">
            <summary>
            The optional signed protocol field specifies the protocol
            permitted for a request made with the SAS.  Possible values are
            <see cref="F:Azure.Storage.Sas.SasProtocol.HttpsAndHttp" />, <see cref="F:Azure.Storage.Sas.SasProtocol.Https" />,
            and <see cref="F:Azure.Storage.Sas.SasProtocol.None" />.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.StartsOn">
            <summary>
            Optionally specify the time at which the shared access signature
            becomes valid.  If omitted when DateTimeOffset.MinValue is used,
            start time for this call is assumed to be the time when the
            storage service receives the request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.ExpiresOn">
            <summary>
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.Permissions">
            <summary>
            The permissions associated with the shared access signature. The
            user is restricted to operations allowed by the permissions. This
            field must be omitted if it has been specified in an associated
            stored access policy.  The <see cref="T:Azure.Storage.Sas.ShareFileSasPermissions" />,
            <see cref="T:Azure.Storage.Sas.ShareSasPermissions" />, or <see cref="T:Azure.Storage.Sas.ShareAccountSasPermissions" />
            can be used to create the permissions string.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.IPRange">
            <summary>
            Specifies an IP address or a range of IP addresses from which to
            accept requests. If the IP address from which the request
            originates does not match the IP address or address range
            specified on the SAS token, the request is not authenticated.
            When specifying a range of IP addresses, note that the range is
            inclusive.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.Identifier">
            <summary>
            An optional unique value up to 64 characters in length that
            correlates to an access policy specified for the share.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.ShareName">
            <summary>
            The name of the share being made accessible.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.FilePath">
            <summary>
            The path of the file or directory being made accessible, or <see cref="F:System.String.Empty" />
            for a share SAS.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.Resource">
             <summary>
             Specifies which resources are accessible via the shared access
             signature.
            
             Specify "f" if the shared resource is a file. This grants access
             to the content and metadata of the file.
            
             Specify "s" if the shared resource is a share. This grants access
             to the content and metadata of any file in the share, and to the
             list of directories and files in the share.
             </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.CacheControl">
            <summary>
            Override the value returned for Cache-Control response header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.ContentDisposition">
            <summary>
            Override the value returned for Content-Disposition response
            header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.ContentEncoding">
            <summary>
            Override the value returned for Cache-Encoding response header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.ContentLanguage">
            <summary>
            Override the value returned for Cache-Language response header.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.ShareSasBuilder.ContentType">
            <summary>
            Override the value returned for Cache-Type response header.
            </summary>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Sas.ShareSasBuilder" />
            class.
            </summary>
            <remarks>
            This constructor has been deprecated. Please consider using
            <see cref="M:Azure.Storage.Sas.ShareSasBuilder.#ctor(Azure.Storage.Sas.ShareSasPermissions,System.DateTimeOffset)" />
            to create a Service SAS. This change does not have any impact on how
            your application generates or makes use of SAS tokens.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.#ctor(Azure.Storage.Sas.ShareFileSasPermissions,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Sas.ShareSasBuilder" />
            class to create a Azure File Sas.
            </summary>
            <param name="permissions">
            The permissions associated with the shared access signature. The
            user is restricted to operations allowed by the permissions. This
            field must be omitted if it has been specified in an associated
            stored access policy.
            </param>
            <param name="expiresOn">
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.#ctor(Azure.Storage.Sas.ShareSasPermissions,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Sas.ShareSasBuilder" />
            class to create a File Share Sas.
            </summary>
            <param name="permissions">
            The permissions associated with the shared access signature. The
            user is restricted to operations allowed by the permissions.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </param>
            <param name="expiresOn">
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareFileSasPermissions)">
            <summary>
            Sets the permissions for a file SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.ShareFileSasPermissions" /> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareAccountSasPermissions)">
            <summary>
            Sets the permissions for a file account level SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.ShareAccountSasPermissions" /> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareSasPermissions)">
            <summary>
            Sets the permissions for a share SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.ShareSasPermissions" /> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(System.String,System.Boolean)">
            <summary>
            Sets the permissions for the SAS using a raw permissions string.
            </summary>
            <param name="rawPermissions">
            Raw permissions string for the SAS.
            </param>
            <param name="normalize">
            If the permissions should be validated and correctly ordered.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(System.String)">
            <summary>
            Sets the permissions for the SAS using a raw permissions string.
            </summary>
            <param name="rawPermissions">Raw permissions string for the SAS.</param>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Use an account's <see cref="T:Azure.Storage.StorageSharedKeyCredential" /> to sign this
            shared access signature values to produce the proper SAS query
            parameters for authenticating requests.
            </summary>
            <param name="sharedKeyCredential">
            The storage account's <see cref="T:Azure.Storage.StorageSharedKeyCredential" />.
            </param>
            <returns>
            The <see cref="T:Azure.Storage.Sas.SasQueryParameters" /> used for authenticating requests.
            </returns>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.Equals(System.Object)">
            <summary>
            Check if two FileSasBuilder instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.ShareSasBuilder.GetHashCode">
            <summary>
            Get a hash code for the FileSasBuilder.
            </summary>
            <returns>Hash code for the FileSasBuilder.</returns>
        </member>
        <member name="T:Azure.Storage.Sas.ShareSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.ShareSasPermissions" /> contains the list of
            permissions that can be set for a file's access policy.  Use
            <see cref="M:Azure.Storage.Sas.ShareSasBuilder.SetPermissions(Azure.Storage.Sas.ShareSasPermissions)" />
            to set the permissions on the <see cref="T:Azure.Storage.Sas.ShareSasBuilder" />.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareSasPermissions.Create">
            <summary>
            Indicates that Create is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareSasPermissions.List">
            <summary>
            Indicates that List is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.ShareSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.SasExtensions">
            <summary>
            Extension methods for Sas.
            </summary>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ToPermissionsString(Azure.Storage.Sas.AccountSasResourceTypes)">
            <summary>
            Creates a string representing which resource types are allowed
            for <see cref="P:Azure.Storage.Sas.AccountSasBuilder.ResourceTypes" />.
            </summary>
            <returns>
            A string representing which resource types are allowed.
            </returns>
            <remarks>
            The order here matches the order used by the portal when generating SAS signatures.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ParseResourceTypes(System.String)">
            <summary>
            Parse a string representing which resource types are accessible
            from a shared access signature.
            </summary>
            <param name="s">
            A string representing which resource types are accessible.
            </param>
            <returns>
            An <see cref="T:Azure.Storage.Sas.AccountSasResourceTypes" /> instance.
            </returns>
            <remarks>
            The order here matches the order used by the portal when generating SAS signatures.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ToProtocolString(Azure.Storage.Sas.SasProtocol)">
            <summary>
            Gets a string representation of the protocol.
            </summary>
            <returns>A string representation of the protocol.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ParseProtocol(System.String)">
            <summary>
            Parse a string representation of a protocol.
            </summary>
            <param name="s">A string representation of a protocol.</param>
            <returns>A <see cref="T:Azure.Storage.Sas.SasProtocol" />.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ToPermissionsString(Azure.Storage.Sas.AccountSasServices)">
            <summary>
            Creates a string representing which services can be used for
            <see cref="P:Azure.Storage.Sas.AccountSasBuilder.Services" />.
            </summary>
            <returns>
            A string representing which services are allowed.
            </returns>
            <remarks>
            The order here matches the order used by the portal when generating SAS signatures.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ParseAccountServices(System.String)">
            <summary>
            Parse a string representing which services are accessible from a
            shared access signature.
            </summary>
            <param name="s">
            A string representing which services are accessible.
            </param>
            <returns>
            An <see cref="T:Azure.Storage.Sas.AccountSasServices" /> instance.
            </returns>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.FormatTimesForSasSigning(System.DateTimeOffset)">
            <summary>
            FormatTimesForSASSigning converts a time.Time to a snapshotTimeFormat string suitable for a
            SASField's StartTime or ExpiryTime fields. Returns "" if value.IsZero().
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.AddToBuilder(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Helper method to add query param key value pairs to StringBuilder
            </summary>
            <param name="sb">StringBuilder instance</param>
            <param name="key">query key</param>
            <param name="value">query value</param>
        </member>
        <member name="T:Azure.Storage.Sas.SasQueryParametersInternals">
            <summary>
            Helper to access protected static members of SasQueryParameters.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.SasQueryParametersInternals.DefaultSasVersionInternal">
            <summary>
            Settable internal property to allow different versions in test.
            </summary>
        </member>
        <member name="T:Azure.Storage.AggregatingProgressIncrementer">
            <summary>
            An accumulator for request and response data transfers.
            </summary>
        </member>
        <member name="M:Azure.Storage.AggregatingProgressIncrementer.Report(System.Int64)">
            <summary>
            Increments the current value and reports it to the progress handler
            </summary>
            <param name="bytes"></param>
        </member>
        <member name="M:Azure.Storage.AggregatingProgressIncrementer.Reset">
            <summary>
            Zeroes out the current accumulation, and reports it to the progress handler
            </summary>
        </member>
        <member name="P:Azure.Storage.AggregatingProgressIncrementer.None">
            <summary>
            Returns an instance that no-ops accumulation.
            </summary>
        </member>
        <member name="P:Azure.Storage.AggregatingProgressIncrementer.Current">
            <summary>
            Returns a long instance representing the current progress value.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.MaxIdleTimeMs">
            <summary>
            The maximum allowed time between read or write calls to the stream for IdleCancellingStream.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultSasVersion">
            <summary>
            Gets the default service version to use when building shared access
            signatures.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultBufferSize">
            <summary>
            The default size of staged blocks when uploading small blobs.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.LargeBufferSize">
            <summary>
            The size of staged blocks when uploading large blobs.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.LargeUploadThreshold">
            <summary>
            The threshold where we switch from staging <see cref="F:Azure.Storage.Constants.DefaultBufferSize" />
            buffers to staging <see cref="F:Azure.Storage.Constants.LargeBufferSize" /> buffers.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultStreamingDownloadSize">
            <summary>
            The minimum number of bytes to download in Open Read.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultStreamCopyBufferSize">
            <summary>
            Different .NET implementations have different default sizes for <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
            and it's overloads. This is the default for .NET Core to be applied everywhere for test consistency.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultDownloadCopyBufferSize">
            <summary>
            The size of the buffer to use when copying streams during a
            download operation.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.BlockNameFormat">
            <summary>
            The default format we use for block names.  There are 50,000
            maximum blocks so we pad the size with up to 4 leading zeros.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.ConnectionStrings">
            <summary>
            Storage Connection String constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.ConnectionStrings.BlobEndpointPortNumber">
            <summary>
            The default port numbers for development storage credentials
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.HeaderNames">
            <summary>
            Header Name constant values.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.Blob">
            <summary>
            Blob constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Blob.Container.RootName">
            <summary>
            The Azure Storage name used to identify a storage account's root container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Blob.Container.LogsName">
            <summary>
            The Azure Storage name used to identify a storage account's logs container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Blob.Container.WebName">
            <summary>
            The Azure Storage name used to identify a storage account's web content container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Blob.Lease.InfiniteLeaseDuration">
            <summary>
            Lease Duration is set as infinite when passed -1.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.File">
            <summary>
            File constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.File.Lease.InfiniteLeaseDuration">
            <summary>
            Lease Duration is set as infinite when passed -1.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.DataLake">
            <summary>
            Data Lake constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.BlobUriSuffix">
            <summary>
            The blob URI suffix.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.BlobUriPeriodSuffix">
            <summary>
            The blob URI suffix.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.DfsUriSuffix">
            <summary>
            The DFS URI suffix.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.DfsUriPeriodSuffix">
            <summary>
            The DFS URI suffix.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.ErrorKey">
            <summary>
            The key of the object json object returned for errors.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.ErrorCodeKey">
            <summary>
            The key of the error code returned for errors.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.ErrorMessageKey">
            <summary>
            The key of the error message returned for errors.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.AlreadyExists">
            <summary>
            The Azure Storage error codes for Datalake Client.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.DefaultConcurrentTransfersCount">
            <summary>
            Default concurrent transfers count.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.Pre_2019_12_12_MaxAppendBytes">
            <summary>
            Max upload bytes for less than Service Version 2019-12-12.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.MaxAppendBytes">
            <summary>
            Max upload bytes.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.IsDirectoryKey">
            <summary>
            Metadata key for isFolder property.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.Queue">
            <summary>
            Queue constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Queue.MaxMessagesDequeue">
            <summary>
            QueueMaxMessagesDequeue indicates the maximum number of messages
            you can retrieve with each call to Dequeue.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Queue.QueueMessageMaxBytes">
            <summary>
            QueueMessageMaxBytes indicates the maximum number of bytes allowed for a message's UTF-8 text.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.ChangeFeed">
            <summary>
            ChangeFeed constant values.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.QuickQuery">
            <summary>
            Quick Query constant values.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.Sas">
            <summary>
            Sas constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Sas.PathStylePorts">
            <summary>
            List of ports used for path style addressing.
            Copied from Microsoft.Azure.Storage.Core.Util
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.Xml">
            <summary>
            XML Element Name constant values.
            </summary>
        </member>
        <member name="T:Azure.Storage.Errors">
            <summary>
            Create exceptions for common error cases.
            </summary>
        </member>
        <member name="T:Azure.Storage.GeoRedundantReadPolicy">
            <summary>
            This policy is used if the SecondaryUri property is passed in on the clientOptions. It allows for storage
            accounts configured with RA-GRS to retry GET or HEAD requests against the secondary storage Uri.
            </summary>
        </member>
        <member name="T:Azure.Storage.HashAlgorithmHasher">
            <summary>
            HashAlgorithm wrapper for IHasher interface
            </summary>
        </member>
        <member name="T:Azure.Storage.Shared.PooledMemoryStream">
            <summary>
            Functions like a readable <see cref="T:System.IO.MemoryStream" /> but uses an ArrayPool to supply the backing memory.
            This stream support buffering long sizes.
            </summary>
        </member>
        <member name="P:Azure.Storage.Shared.PooledMemoryStream.MaxArraySize">
            <summary>
            Size to rent from MemoryPool.
            </summary>
        </member>
        <member name="P:Azure.Storage.Shared.PooledMemoryStream.ArrayPool">
            <summary>
            The backing array pool.
            </summary>
        </member>
        <member name="P:Azure.Storage.Shared.PooledMemoryStream.AbsolutePosition">
            <summary>
            Absolute position of this stream in the larger stream it was chunked from.
            </summary>
        </member>
        <member name="M:Azure.Storage.Shared.PooledMemoryStream.#ctor">
            <summary>
            Parameterless constructor for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Shared.PooledMemoryStream.BufferStreamPartitionInternal(System.IO.Stream,System.Int64,System.Int64,System.Int64,System.Buffers.ArrayPool{System.Byte},System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Buffers a portion of the given stream, returning the buffered stream partition.
            </summary>
            <param name="stream">
            Stream to buffer from.
            </param>
            <param name="minCount">
            Minimum number of bytes to buffer. This method will not return until at least this many bytes have been read from <paramref name="stream" /> or the stream completes.
            </param>
            <param name="maxCount">
            Maximum number of bytes to buffer.
            </param>
            <param name="absolutePosition">
            Current position of the stream, since <see cref="P:System.IO.Stream.Position" /> throws if not seekable.
            </param>
            <param name="arrayPool">
            Pool to rent buffer space from.
            </param>
            <param name="maxArrayPoolRentalSize">
            Max size we can request from the array pool.
            </param>
            <param name="async">
            Whether to perform this operation asynchronously.
            </param>
            <param name="cancellationToken">
            Cancellation token.
            </param>
            <returns>
            The buffered stream partition with memory backed by an array pool.
            </returns>
        </member>
        <member name="T:Azure.Storage.Shared.StorageClientConfiguration">
            <summary>
            Parent class of the *ClientConfiguration classes.
            Contains common properties used to create clients.
            </summary>
        </member>
        <member name="M:Azure.Storage.Shared.StorageClientConfiguration.#ctor">
            <summary>
            Constructor for mocking.
            </summary>
        </member>
        <member name="T:Azure.Storage.Shared.SlicedStream">
            <summary>
            Describes a stream that is a partition of another, larger stream.
            </summary>
        </member>
        <member name="P:Azure.Storage.Shared.SlicedStream.AbsolutePosition">
            <summary>
            Absolute position of the start of this stream in the larger stream it was chunked from.
            </summary>
        </member>
        <member name="T:Azure.Storage.Shared.WindowStream">
            <summary>
            Exposes a predetermined slice of a larger stream using the same Stream interface.
            There should not be access to the base stream while this facade is in use.
            </summary>
        </member>
        <member name="M:Azure.Storage.Shared.WindowStream.ReadByte">
            <summary>Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</summary><returns>The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</returns><exception cref="T:System.NotSupportedException">The stream does not support reading.</exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed.</exception>
            <remarks>
            Implementing this method takes advantage of any optimizations in the wrapped stream's implementation.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Shared.StreamExtensions.GetPositionOrDefault(System.IO.Stream)">
            <summary>
            Some streams will throw if you try to access their length so we wrap
            the check in a TryGet helper.
            </summary>
        </member>
        <member name="T:Azure.Storage.Shared.ISupportsTenantIdChallenges">
            <summary>
            Options to be exposed in client options classes related to bearer token authorization challenge scenarios.
            </summary>
        </member>
        <member name="P:Azure.Storage.Shared.ISupportsTenantIdChallenges.EnableTenantDiscovery">
            <summary>
             Enables tenant discovery through the authorization challenge when the client is configured to use a TokenCredential.
            When enabled, the client will attempt an initial un-authorized request to prompt a challenge in order to discover the correct tenant for the resource.
            </summary>
        </member>
        <member name="T:Azure.Storage.IHasher">
            <summary>
            Interface to wrap either a HashAlgorithm or a NonCryptographicHashAlgorithm
            to provide a common interface for hashing a stream.
            </summary>
        </member>
        <member name="M:Azure.Storage.IHasher.ComputeHash(System.IO.Stream)">
            <summary>
            Hashes the contents of the stream.
            </summary>
            <param name="stream">Content</param>
        </member>
        <member name="T:Azure.Storage.NonCryptographicHashAlgorithmHasher">
            <summary>
            HashAlgorithm wrapper for IHasher interface.
            </summary>
        </member>
        <member name="M:Azure.Storage.StreamExtensions.GetLengthOrDefault(System.IO.Stream)">
            <summary>
            Some streams will throw if you try to access their length so we wrap
            the check in a TryGet helper.
            </summary>
        </member>
        <member name="T:Azure.Storage.ProgressIncrementingStream">
            <summary>
            Wraps a stream, and reports position updates to a progress incrementer
            </summary>
        </member>
        <member name="P:Azure.Storage.SharedAccessSignatureCredentials.SasToken">
            <summary>
            Gets the SAS token used to authenticate requests to the Storage
            service.
            </summary>
        </member>
        <member name="M:Azure.Storage.SharedAccessSignatureCredentials.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Azure.Storage.SharedAccessSignatureCredentials" /> class.
            </summary>
            <param name="sasToken">
            The SAS token used to authenticate requests to the Storage service.
            </param>
        </member>
        <member name="T:Azure.Storage.StorageClientOptions">
            <summary>
            Defines the client configuration options for connecting to Azure
            Storage.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.Initialize(Azure.Core.ClientOptions)">
            <summary>
            Set common ClientOptions defaults for Azure Storage.
            </summary>
            <param name="options">Storage ClientOptions.</param>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.AsPolicy(Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Get an authentication policy to sign Storage requests.
            </summary>
            <param name="credential">Credential to use.</param>
            <returns>An authentication policy.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.AsPolicy``1(Azure.AzureSasCredential,System.Uri)">
            <summary>
            Get an authentication policy to sign Storage requests.
            </summary>
            <param name="credential">Credential to use.</param>
            <param name="resourceUri">Resource Uri. Must not contain shared access signature.</param>
            <returns>An authentication policy.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.AsPolicy(Azure.Core.TokenCredential,Azure.Core.ClientOptions)">
            <summary>
            Get an authentication policy to sign Storage requests.
            </summary>
            <param name="credential">Credential to use.</param>
            <param name="options"> The <see cref="T:Azure.Storage.Shared.ISupportsTenantIdChallenges" /> to apply to the credential. </param>
            <returns>An authentication policy.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.GetAuthenticationPolicy(System.Object,Azure.Core.ClientOptions)">
            <summary>
            Get an optional authentication policy to sign Storage requests.
            </summary>
            <param name="credentials">Optional credentials to use.</param>
            <param name="options"> The <see cref="T:Azure.Core.ClientOptions" /> </param>
            <returns>An optional authentication policy.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.Build(Azure.Core.ClientOptions,Azure.Core.Pipeline.HttpPipelinePolicy,System.Uri)">
            <summary>
            Create an HttpPipeline from Storage ClientOptions.
            </summary>
            <param name="options">The Storage ClientOptions.</param>
            <param name="authentication">Optional authentication policy.</param>
            <param name="geoRedundantSecondaryStorageUri">The secondary URI to be used for retries on failed read requests</param>
            <returns>An HttpPipeline to use for Storage requests.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.Build(Azure.Core.ClientOptions,System.Object,System.Uri)">
            <summary>
            Create an HttpPipeline from Storage ClientOptions.
            </summary>
            <param name="options">The Storage ClientOptions.</param>
            <param name="credentials">Optional authentication credentials.</param>
            <param name="geoRedundantSecondaryStorageUri">The secondary URI to be used for retries on failed read requests</param>
            <returns>An HttpPipeline to use for Storage requests.</returns>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.UseV1MD5">
            <summary>
            Gets or sets a value indicating whether the FISMA MD5 setting will be used.
            </summary>
            <value><c>false</c> to use the FISMA MD5 setting; <c>true</c> to use the .NET default implementation.</value>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.#ctor(System.Object,System.ValueTuple{System.Uri,System.Uri},System.ValueTuple{System.Uri,System.Uri},System.ValueTuple{System.Uri,System.Uri},System.ValueTuple{System.Uri,System.Uri})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.StorageConnectionString" /> class using the specified
            account credentials and service endpoints.
            </summary>
            <param name="storageCredentials">A StorageCredentials object.</param>
            <param name="blobStorageUri">A <see cref="T:System.Uri" /> specifying the Blob service endpoint or endpoints.</param>
            <param name="queueStorageUri">A <see cref="T:System.Uri" /> specifying the Queue service endpoint or endpoints.</param>
            <param name="tableStorageUri">A <see cref="T:System.Uri" /> specifying the Table service endpoint or endpoints.</param>
            <param name="fileStorageUri">A <see cref="T:System.Uri" /> specifying the File service endpoint or endpoints.</param>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.DevelopmentStorageAccount">
            <summary>
            Gets a <see cref="T:Azure.Storage.StorageConnectionString" /> object that references the well-known development storage account.
            </summary>
            <value>A <see cref="T:Azure.Storage.StorageConnectionString" /> object representing the development storage account.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.IsDevStoreAccount">
            <summary>
            Indicates whether this account is a development storage account.
            </summary>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.EndpointSuffix">
            <summary>
            The storage service hostname suffix set by the user, if any.
            </summary>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.Settings">
            <summary>
            The connection string parsed into settings.
            </summary>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.DefaultEndpoints">
            <summary>
            True if the user used a constructor that auto-generates endpoints.
            </summary>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.BlobEndpoint">
            <summary>
            Gets the primary endpoint for the Blob service, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the primary Blob service endpoint.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.QueueEndpoint">
            <summary>
            Gets the primary endpoint for the Queue service, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the primary Queue service endpoint.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.TableEndpoint">
            <summary>
            Gets the primary endpoint for the Table service, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the primary Table service endpoint.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.FileEndpoint">
            <summary>
            Gets the primary endpoint for the File service, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the primary File service endpoint.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.BlobStorageUri">
            <summary>
            Gets the endpoints for the Blob service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the Blob service endpoints.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.QueueStorageUri">
            <summary>
            Gets the endpoints for the Queue service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the Queue service endpoints.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.TableStorageUri">
            <summary>
            Gets the endpoints for the Table service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the Table service endpoints.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.FileStorageUri">
            <summary>
            Gets the endpoints for the File service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri" /> containing the File service endpoints.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.Credentials">
            <summary>
            Gets the credentials used to create this <see cref="T:Azure.Storage.StorageConnectionString" /> object.
            </summary>
            <value>A StorageCredentials object.</value>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString._accountName">
            <summary>
            Private record of the account name for use in ToString(bool).
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.Parse(System.String)">
            <summary>
            Parses a connection string and returns a <see cref="T:Azure.Storage.StorageConnectionString" /> created
            from the connection string.
            </summary>
            <param name="connectionString">A valid connection string.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="connectionString" /> is null or empty.</exception>
            <exception cref="T:System.FormatException">Thrown if <paramref name="connectionString" /> is not a valid connection string.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="connectionString" /> cannot be parsed.</exception>
            <returns>A <see cref="T:Azure.Storage.StorageConnectionString" /> object constructed from the values provided in the connection string.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.TryParse(System.String,Azure.Storage.StorageConnectionString@)">
            <summary>
            Indicates whether a connection string can be parsed to return a <see cref="T:Azure.Storage.StorageConnectionString" /> object.
            </summary>
            <param name="connectionString">The connection string to parse.</param>
            <param name="account">A <see cref="T:Azure.Storage.StorageConnectionString" /> object to hold the instance returned if
            the connection string can be parsed.</param>
            <returns><b>true</b> if the connection string was successfully parsed; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ParseCore(System.String,Azure.Storage.StorageConnectionString@,System.Action{System.String})">
            <summary>
            Internal implementation of Parse/TryParse.
            </summary>
            <param name="connectionString">The string to parse.</param>
            <param name="accountInformation">The <see cref="T:Azure.Storage.StorageConnectionString" /> to return.</param>
            <param name="error">A callback for reporting errors.</param>
            <returns>If true, the parse was successful. Otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructBlobEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default blob endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default blob endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructFileEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default file endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default file endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructQueueEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default queue endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default queue endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructTableEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default queue endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default table endpoint.</returns>
        </member>
        <member name="T:Azure.Storage.StorageExceptionExtensions">
            <summary>
            Provide helpful information about errors calling Azure Storage endpoints.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageExceptionExtensions.GetErrorCode(Azure.Response,System.String)">
            <summary>
            Attempt to get the error code from a response if it's not provided.
            </summary>
            <param name="response">The response.</param>
            <param name="errorCode">An optional error code.</param>
            <returns>The response's error code.</returns>
        </member>
        <member name="M:Azure.Storage.StorageExceptionExtensions.IsUnavailable``1(Azure.Response{``0})">
            <summary>
            Check if a Response will throw an exception if you try to access
            its Value property.
            </summary>
            <typeparam name="T">Type of the Response Value.</typeparam>
            <param name="response">The response to check.</param>
            <returns>True if the response will throw.</returns>
        </member>
        <member name="M:Azure.Storage.StorageExceptionExtensions.AsNoBodyResponse``1(Azure.Response)">
            <summary>
            Create a response that will throw an exception if you try to access
            its Value property.
            </summary>
            <typeparam name="T">Type of the Response Value.</typeparam>
            <param name="rawResponse">The raw response.</param>
            <returns>A response that will throw if accessed.</returns>
        </member>
        <member name="T:Azure.Storage.StorageMemoryPool">
            <summary>
            Private memory pool specific to Azure storage transfers, based on ArrayPool.
            </summary>
        </member>
        <member name="T:Azure.Storage.StorageRequestValidationPipelinePolicy">
            <summary>
            Pipeline policy to verify x-ms-client-request-id and x-ms-client-return-request-id
            headers that are echoed back from a request match.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageRequestValidationPipelinePolicy.#ctor(Azure.Core.ClientOptions)">
            <summary>
            Create a new StorageRequestValidationPipelinePolicy
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageRequestValidationPipelinePolicy.OnReceivedResponse(Azure.Core.HttpMessage)">
            <summary>
            Verify x-ms-client-request-id and x-ms-client-return-request-id headers matches as
            x-ms-client-return-request-id is an echo of x-mis-client-request-id.
            </summary>
            <param name="message">The message that was sent</param>
        </member>
        <member name="T:Azure.Storage.StorageSharedKeyCredentialInternals">
            <summary>
            This class is added to access protected static methods off of the base class
            that should not be exposed directly to customers.
            </summary>
        </member>
        <member name="T:Azure.Storage.StorageSharedKeyPipelinePolicy">
            <summary>
            HttpPipelinePolicy to sign requests using an Azure Storage shared key.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageSharedKeyPipelinePolicy.#ctor(Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Create a new SharedKeyPipelinePolicy
            </summary>
            <param name="credentials">SharedKeyCredentials to authenticate requests.</param>
        </member>
        <member name="M:Azure.Storage.StorageSharedKeyPipelinePolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Sign the request using the shared key credentials.
            </summary>
            <param name="message">The message with the request to sign.</param>
        </member>
        <member name="P:Azure.Storage.StorageResponseClassifier.SecondaryStorageUri">
            <summary>
            The secondary URI to be used for retries on failed read requests
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageResponseClassifier.IsRetriableResponse(Azure.Core.HttpMessage)">
            <summary>
            Overridden version of IsRetriableResponse that allows for Storage specific retry logic.
            </summary>
            <param name="message">The message containing both Response and Request</param>
            <returns></returns>
        </member>
        <member name="M:Azure.Storage.StorageResponseClassifier.IsErrorResponse(Azure.Core.HttpMessage)">
            <summary>
            Specifies if the response contained in the <paramref name="message" /> is not successful.
            </summary>
        </member>
        <member name="T:Azure.Storage.StorageVersionExtensions">
            <summary>
            Helpers to manage Storage service versions.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageVersionExtensions.LatestVersion">
            <summary>
            Gets the latest version of the service supported by this SDK.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageVersionExtensions.MaxVersion">
            <summary>
            Gets the latest version of the service supported by this SDK.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageVersionExtensions.ToVersionString(Azure.Storage.Files.Shares.ShareClientOptions.ServiceVersion)">
            <summary>
            Convert a Storage ServiceVersion enum to an x-ms-version string.
            </summary>
            <param name="version">The service version enum value.</param>
            <returns>The x-ms-version string.</returns>
        </member>
        <member name="T:Azure.Storage.UriExtensions">
            <summary>
            Extension methods used to manipulate URIs.
            </summary>
        </member>
        <member name="M:Azure.Storage.UriExtensions.AppendToPath(System.Uri,System.String)">
            <summary>
            Append a segment to a URIs path.
            </summary>
            <param name="uri">The URI.</param>
            <param name="segment">The relative segment to append.</param>
            <returns>The combined URI.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.GetQueryParameters(System.Uri)">
            <summary>
            Get the (already encoded) query parameters on a URI.
            </summary>
            <param name="uri">The URI.</param>
            <returns>Dictionary mapping query parameters to values.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.GetAccountNameFromDomain(System.Uri,System.String)">
            <summary>
            Get the account name from the domain portion of a Uri.
            </summary>
            <param name="uri">The Uri.</param>
            <param name="serviceSubDomain">The service subdomain used to validate that the
            domain is in the expected format. This should be "blob" for blobs, "file" for files,
            "queue" for queues, "blob" and "dfs" for datalake.</param>
            <returns>Account name or null if not able to be parsed.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.GetAccountNameFromDomain(System.String,System.String)">
            <summary>
            Get the account name from the host.
            </summary>
            <param name="host">Host.</param>
            <param name="serviceSubDomain">The service subdomain used to validate that the
            domain is in the expected format. This should be "blob" for blobs, "file" for files,
            "queue" for queues, "blob" and "dfs" for datalake.</param>
            <returns>Account name or null if not able to be parsed.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.GetPath(System.Uri)">
            <summary>
            If path starts with a slash, remove it
            </summary>
            <param name="uri">The Uri.</param>
            <returns>Sanitized Uri.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.IsHostIPEndPointStyle(System.Uri)">
            <summary>
            Check to see if Uri is using IP Endpoint style.
            </summary>
            <param name="uri">The Uri.</param>
            <returns>True if using IP Endpoint style.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.AppendQueryParameter(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Appends a query parameter to the string builder.
            </summary>
            <param name="sb">string builder instance.</param>
            <param name="key">query parameter key.</param>
            <param name="value">query parameter value.</param>
        </member>
        <member name="M:Azure.Storage.UriQueryParamsCollection.#ctor(System.String)">
            <summary>
            Takes encoded query params string, output decoded params map
            </summary>
            <param name="encodedQueryParamString"></param>
        </member>
        <member name="T:Azure.Storage.LazyLoadingReadOnlyStream`1">
            <summary>
            Used for Open Read APIs.
            </summary>
        </member>
        <member name="T:Azure.Storage.LazyLoadingReadOnlyStream`1.DownloadInternalAsync">
            <summary>
            Delegate for a resource's direct REST download method.
            </summary>
            <param name="range">
            Content range to download.
            </param>
            <param name="async">
            Whether to perform the operation asynchronously.
            </param>
            <param name="cancellationToken">
            Cancellation token for cancelling the download request.
            </param>
            <returns>
            Downloaded resource content.
            </returns>
        </member>
        <member name="T:Azure.Storage.LazyLoadingReadOnlyStream`1.GetPropertiesAsync">
            <summary>
            Delegate for getting properties for the target resource.
            </summary>
            <param name="async">
            Whether to perform the operation asynchronously.
            </param>
            <param name="cancellationToken">
            Cancellation token for cancelling the download request.
            </param>
            <returns>
            Resource properties.
            </returns>
        </member>
        <member name="T:Azure.Storage.StorageBearerTokenChallengeAuthorizationPolicy">
            <summary>
            The storage authorization policy which supports challenges including tenantId discovery.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageBearerTokenChallengeAuthorizationPolicy.#ctor(Azure.Core.TokenCredential,System.String,System.Boolean)">
             <summary>
            
             </summary>
             <param name="credential"></param>
             <param name="scope"></param>
             <param name="enableTenantDiscovery"> </param>
        </member>
        <member name="M:Azure.Storage.StorageBearerTokenChallengeAuthorizationPolicy.#ctor(Azure.Core.TokenCredential,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
             <summary>
            
             </summary>
             <param name="credential"></param>
             <param name="scopes"></param>
             <param name="enableTenantDiscovery"> </param>
        </member>
        <member name="M:Azure.Storage.StorageBearerTokenChallengeAuthorizationPolicy.AuthorizeRequest(Azure.Core.HttpMessage)">
            <summary>
            Executes before <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> or
            <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> is called.
            Implementers of this method are expected to call <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" /> or <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" />
            if authorization is required for requests not related to handling a challenge response.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param>
        </member>
        <member name="M:Azure.Storage.StorageBearerTokenChallengeAuthorizationPolicy.AuthorizeRequestAsync(Azure.Core.HttpMessage)">
            <summary>
            Executes before <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> or
            <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> is called.
            Implementers of this method are expected to call <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" /> or <see cref="M:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" />
            if authorization is required for requests not related to handling a challenge response.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param><returns>The <see cref="T:System.Threading.Tasks.ValueTask" /> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Azure.Storage.StorageBearerTokenChallengeAuthorizationPolicy.AuthorizeRequestOnChallenge(Azure.Core.HttpMessage)">
            <summary>
            Executed in the event a 401 response with a WWW-Authenticate authentication challenge header is received after the initial request.
            </summary><remarks>Service client libraries may override this to handle service specific authentication challenges.</remarks><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> to be authenticated.</param><returns>A boolean indicating whether the request was successfully authenticated and should be sent to the transport.</returns>
        </member>
        <member name="M:Azure.Storage.StorageBearerTokenChallengeAuthorizationPolicy.AuthorizeRequestOnChallengeAsync(Azure.Core.HttpMessage)">
            <summary>
            Executed in the event a 401 response with a WWW-Authenticate authentication challenge header is received after the initial request.
            </summary><remarks>Service client libraries may override this to handle service specific authentication challenges.</remarks><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> to be authenticated.</param><returns>A boolean indicating whether the request was successfully authenticated and should be sent to the transport.</returns>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AuthorizationChallengeParser">
            <summary>
            A helper class for parsing Authorization challenge headers.
            </summary>
        </member>
        <member name="M:Azure.Core.AuthorizationChallengeParser.GetChallengeParameterFromResponse(Azure.Response,System.String,System.String)">
            <summary>
            Parses the specified parameter from a challenge hearder found in the specified <see cref="T:Azure.Response" />.
            </summary>
            <param name="response">The <see cref="T:Azure.Response" /> to parse.</param>
            <param name="challengeScheme">The challenge scheme containing the <paramref name="challengeParameter" />. For example: "Bearer"</param>
            <param name="challengeParameter">The parameter key name containing the value to return.</param>
            <returns>The value of the parameter name specified in <paramref name="challengeParameter" /> if it is found in the specified <paramref name="challengeScheme" />.</returns>
        </member>
        <member name="M:Azure.Core.AuthorizationChallengeParser.TryGetNextChallenge(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)">
            <summary>
            Iterates through the challenge schemes present in a challenge header.
            </summary>
            <param name="headerValue">
            The header value which will be sliced to remove the first parsed <paramref name="challengeKey" />.
            </param>
            <param name="challengeKey">The parsed challenge scheme.</param>
            <returns>
            <c>true</c> if a challenge scheme was successfully parsed.
            The value of <paramref name="headerValue" /> should be passed to <see cref="M:Azure.Core.AuthorizationChallengeParser.TryGetNextParameter(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@,System.Char)" /> to parse the challenge parameters if <c>true</c>.
            </returns>
        </member>
        <member name="M:Azure.Core.AuthorizationChallengeParser.TryGetNextParameter(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@,System.Char)">
            <summary>
            Iterates through a challenge header value after being parsed by <see cref="M:Azure.Core.AuthorizationChallengeParser.TryGetNextChallenge(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)" />.
            </summary>
            <param name="headerValue">The header value after being parsed by <see cref="M:Azure.Core.AuthorizationChallengeParser.TryGetNextChallenge(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)" />.</param>
            <param name="paramKey">The parsed challenge parameter key.</param>
            <param name="paramValue">The parsed challenge parameter value.</param>
            <param name="separator">The challenge parameter key / value pair separator. The default is '='.</param>
            <returns>
            <c>true</c> if the next available challenge parameter was successfully parsed.
            <c>false</c> if there are no more parameters for the current challenge scheme or an additional challenge scheme was encountered in the <paramref name="headerValue" />.
            The value of <paramref name="headerValue" /> should be passed again to <see cref="M:Azure.Core.AuthorizationChallengeParser.TryGetNextChallenge(System.ReadOnlySpan{System.Char}@,System.ReadOnlySpan{System.Char}@)" /> to attempt to parse any additional challenge schemes if <c>false</c>.
            </returns>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="M:Azure.Core.AzureSasCredentialSynchronousPolicy.#ctor(Azure.AzureSasCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.AzureSasCredentialSynchronousPolicy" /> class.
            </summary>
            <param name="credential">The <see cref="T:Azure.Core.AzureSasCredentialSynchronousPolicy" /> used to authenticate requests.</param>
        </member>
        <member name="M:Azure.Core.AzureSasCredentialSynchronousPolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Method is invoked before the request is sent.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> containing the request.</param>
        </member>
        <member name="T:Azure.Core.ForwardsClientCallsAttribute">
            <summary>
            Marks methods that call methods on other client and don't need their diagnostics verified.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
        </member>
        <member name="M:Azure.Core.ForwardsClientCallsAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.ForwardsClientCallsAttribute" />.
            </summary>
            <param name="skipChecks"> Sets whether or not diagnostic scope validation should happen. </param>
        </member>
        <member name="P:Azure.Core.ForwardsClientCallsAttribute.SkipChecks">
            <summary>
            Gets whether or not we should validate DiagnosticScope for this API.
            In the case where there is an internal API that makes the Azure API call and a public API that uses it we need ForwardsClientCalls.
            If the public API will cache the results then the diagnostic scope will not always be created because an Azure API is not always called.
            In this case we need to turn off this validation for this API only.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.StorageClientDiagnostics.ExtractFailureContent(System.String,Azure.Core.ResponseHeaders,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Partial method that can optionally be defined to extract the error
            message, code, and details in a service specific manner.
            </summary>
            <param name="content">The error content.</param>
            <param name="responseHeaders">The response headers.</param>
            <param name="additionalInfo">Additional error details.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.ExtractFailureContent(System.String,Azure.Core.ResponseHeaders,System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Partial method that can optionally be defined to extract the error
            message, code, and details in a service specific manner.
            </summary>
            <param name="content">The error content.</param>
            <param name="responseHeaders">The response headers.</param>
            <param name="additionalInfo">Additional error details.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.DiagnosticScope.ActivityKind">
            <summary>
            Kind describes the relationship between the Activity, its parents, and its children in a Trace.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Internal">
            <summary>
            Default value.
            Indicates that the Activity represents an internal operation within an application, as opposed to an operations with remote parents or children.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Server">
            <summary>
            Server activity represents request incoming from external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Client">
            <summary>
            Client activity represents outgoing request to the external component.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Producer">
            <summary>
            Producer activity represents output provided to external components.
            </summary>
        </member>
        <member name="F:Azure.Core.Pipeline.DiagnosticScope.ActivityKind.Consumer">
            <summary>
            Consumer activity represents output received from an external component.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until we can reference the 5.0 of System.Diagnostics.DiagnosticSource
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.CancellationHelper.ShouldWrapInOperationCanceledException(System.Exception,System.Threading.CancellationToken)">
            <summary>Determines whether to wrap an <see cref="T:System.Exception" /> in a cancellation exception.</summary>
            <param name="exception">The exception.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> that may have triggered the exception.</param>
            <returns>true if the exception should be wrapped; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Core.CancellationHelper.CreateOperationCanceledException(System.Exception,System.Threading.CancellationToken,System.String)">
            <summary>Creates a cancellation exception.</summary>
            <param name="innerException">The inner exception to wrap. May be null.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> that triggered the cancellation.</param>
            <param name="message">The custom message to use.</param>
            <returns>The cancellation exception.</returns>
        </member>
        <member name="M:Azure.Core.CancellationHelper.ThrowIfCancellationRequested(System.Threading.CancellationToken)">
            <summary>Throws a cancellation exception if cancellation has been requested via <paramref name="cancellationToken" />.</summary>
            <param name="cancellationToken">The token to check for a cancellation request.</param>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.LowLevelFuncOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            </summary>
        </member>
        <member name="P:Azure.Core.LowLevelFuncOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.LowLevelFuncOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.LowLevelFuncOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.LowLevelFuncOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.LowLevelPageableHelpers.BuildPageForResponse(Azure.Response,System.String,System.String)">
            <summary>
            Returns a <see cref="T:Azure.Page`1" /> for a given response.
            </summary>
            <param name="response"></param>
            <param name="itemPropertyName"></param>
            <param name="nextLinkPropertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Azure.Core.OperationInternals">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternals`1">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
            <typeparam name="T">The final result of the LRO.</typeparam>
        </member>
        <member name="T:Azure.Core.OperationOrResponseInternals">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
        </member>
        <member name="T:Azure.Core.OperationOrResponseInternals`1">
            <summary>
            This implements the ARM scenarios for LROs. It is highly recommended to read the ARM spec prior to modifying this code:
            https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#asynchronous-operations
            Other reference documents include:
            https://github.com/Azure/autorest/blob/master/docs/extensions/readme.md#x-ms-long-running-operation
            https://github.com/Azure/adx-documentation-pr/blob/master/sdks/LRO/LRO_AzureSDK.md
            </summary>
            <typeparam name="T">The final result of the LRO.</typeparam>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.IOperation{`0},Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="rawResponse">
            The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
            <list type="bullet">
              <item>
              When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
              In this case, the response received from this service call can be passed here.
              </item>
              <item>
              When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
              </item>
            </list>
            </param>
            <param name="operationTypeName">
            The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
            parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The fallback delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used. Default is <see cref="T:Azure.Core.ConstantDelayStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback <see cref="T:Azure.Core.DelayStrategy" />
            is then use as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the property <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" />
            property and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.DelayStrategy">
            <summary>
            Strategy to control delay behavior.
            </summary>
        </member>
        <member name="M:Azure.Core.DelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the interval of next delay iteration.
            </summary>
            <remarks> Note that the value could change per call. </remarks>
            <param name="response"> Server response. </param>
            <param name="suggestedInterval"> Suggested pollingInterval. It is up to strategy
            implementation to decide how to deal with this parameter. </param>
            <returns> Delay interval of next iteration. </returns>
        </member>
        <member name="T:Azure.Core.ConstantDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> with constant polling interval.
            </summary>
            <remarks>Polling interval is always equal to the given polling interval.</remarks>
        </member>
        <member name="M:Azure.Core.ConstantDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of <see cref="F:Azure.Core.ConstantDelayStrategy.DefaultPollingInterval" /> and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.ExponentialDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" />. Polling interval changes according to
            the sequence {1, 1, 1, 2, 4, ...32}.
            </summary>
            <remarks>Polling interval always follows the given sequence.</remarks>
        </member>
        <member name="M:Azure.Core.ExponentialDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from {1, 1, 1, 2, 4, ...32}.
            </summary>
            <param name="response">Service response.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
        </member>
        <member name="T:Azure.Core.RetryAfterDelayStrategy">
            <summary>
            Implementation of a <see cref="T:Azure.Core.DelayStrategy" /> of which the interval is from
            retry-after header of service response.
            </summary>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.#ctor(Azure.Core.DelayStrategy)">
            <summary>
            Create a <see cref="T:Azure.Core.RetryAfterDelayStrategy" /> with a default retry-after value which normally
            comes from the initial response of an LRO operation.
            </summary>
            <param name="fallbackStrategy"> Fallback strategy if retry after is not present. </param>
        </member>
        <member name="M:Azure.Core.RetryAfterDelayStrategy.GetNextDelay(Azure.Response,System.Nullable{System.TimeSpan})">
            <summary>
            Get the polling interval from the max value of retry-after header of given service response and <paramref name="suggestedInterval" />.
            If retry-after header is not found, adopt the value of last retry-after header.
            </summary>
            <param name="response">Service response which might carry retry-after header.</param>
            <param name="suggestedInterval">Suggested pollingInterval.</param>
            <returns>Max value of retry-after header and <paramref name="suggestedInterval" />.</returns>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="T:Azure.Core.Argument">
            <summary>
            Argument validation.
            </summary>
            <remarks>
              <para>This class should be shared via source using Azure.Core.props and contain only common argument validation.
                It is declared partial so that you can use the same familiar class name but extend it with project-specific validation.
                To extend the functionality of this class, just declare your own partial <see cref="T:Azure.Core.Argument" /> class with project-specific methods.
              </para>
              <para>
                Be sure to document exceptions thrown by these methods on your public methods.
              </para>
            </remarks>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNull``1(System.Nullable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty collection.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty collection.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null, an empty string, or consists only of white-space characters.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string or consists only of white-space characters.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNotDefault``1(``0@,System.String)">
            <summary>
            Throws if <paramref name="value" /> is the default value for type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of structure to validate which implements <see cref="T:System.IEquatable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is the default value for type <typeparamref name="T" />.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertInRange``1(``0,``0,``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> is less than the <paramref name="minimum" /> or greater than the <paramref name="maximum" />.
            </summary>
            <typeparam name="T">The type of to validate which implements <see cref="T:System.IComparable`1" />.</typeparam>
            <param name="value">The value to validate.</param>
            <param name="minimum">The minimum value to compare.</param>
            <param name="maximum">The maximum value to compare.</param>
            <param name="name">The name of the parameter.</param>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNull``1(``0,System.String)">
            <summary>
            Throws if <paramref name="value" /> has not been initialized; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> has not been initialized.</exception>
        </member>
        <member name="M:Azure.Core.Argument.CheckNotNullOrEmpty(System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is null or an empty string; otherwise, returns <paramref name="value" />.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is an empty string.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="value" /> is null.</exception>
        </member>
        <member name="M:Azure.Core.Argument.AssertNull``1(``0,System.String,System.String)">
            <summary>
            Throws if <paramref name="value" /> is not null.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="name">The name of the parameter.</param>
            <param name="message">The error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not null.</exception>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Microsoft.Extensions.Azure.ShareClientBuilderExtensions">
            <summary>
            Extension methods to add <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> client to clients builder
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.String)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> instance with the provided <paramref name="connectionString" />
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.Uri)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> instance with the provided <paramref name="serviceUri" />
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> instance with the provided <paramref name="serviceUri" /> and <paramref name="sharedKeyCredential" />
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.ShareClientBuilderExtensions.AddFileServiceClient``2(``0,``1)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Files.Shares.ShareServiceClient" /> instance with connection options loaded from the provided <paramref name="configuration" /> instance.
            </summary>
        </member>
        <member name="M:Azure.Core.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Core.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Core.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
